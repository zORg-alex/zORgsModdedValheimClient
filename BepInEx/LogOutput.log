[Message:   BepInEx] BepInEx 5.4.19.0 - valheim (30.06.2022 20:05:51)
[Info   :   BepInEx] Running under Unity v2020.3.33.9525882
[Info   :   BepInEx] CLR runtime version: 4.0.30319.42000
[Info   :   BepInEx] Supports SRE: True
[Info   :   BepInEx] System platform: Bits64, Windows
[Message:   BepInEx] Preloader started
[Info   :   BepInEx] Loaded 1 patcher method from [BepInEx.Preloader 5.4.19.0]
[Info   :   BepInEx] Loaded 1 patcher method from [SlimVML.Loader 1.1.0.0]
[Info   :   BepInEx] Loaded 1 patcher method from [BepInEx.MonoMod.HookGenPatcher 1.2.0.0]
[Info   :   BepInEx] 3 patcher plugins loaded
[Info   :HookGenPatcher] Previous MMHOOK location found. Using that location to save instead.
[Info   :HookGenPatcher] Already ran for this version, reusing that file.
[Info   :HookGenPatcher] Previous MMHOOK location found. Using that location to save instead.
[Info   :HookGenPatcher] Already ran for this version, reusing that file.
[Info   :HookGenPatcher] Previous MMHOOK location found. Using that location to save instead.
[Info   :HookGenPatcher] Already ran for this version, reusing that file.
[Info   :HookGenPatcher] Previous MMHOOK location found. Using that location to save instead.
[Info   :HookGenPatcher] Already ran for this version, reusing that file.
[Info   :HookGenPatcher] Previous MMHOOK location found. Using that location to save instead.
[Info   :HookGenPatcher] Already ran for this version, reusing that file.
[Info   :HookGenPatcher] Previous MMHOOK location found. Using that location to save instead.
[Info   :HookGenPatcher] Already ran for this version, reusing that file.
[Info   :HookGenPatcher] Previous MMHOOK location found. Using that location to save instead.
[Info   :HookGenPatcher] Already ran for this version, reusing that file.
[Info   :HookGenPatcher] Previous MMHOOK location found. Using that location to save instead.
[Info   :HookGenPatcher] Already ran for this version, reusing that file.
[Info   :HookGenPatcher] Previous MMHOOK location found. Using that location to save instead.
[Info   :HookGenPatcher] Already ran for this version, reusing that file.
[Info   :   BepInEx] Patching [UnityEngine.CoreModule] with [BepInEx.Chainloader]
[Info   :   SlimVML] Loading DLLs from C:\Program Files (x86)\Steam\steamapps\common\Valheim\InSlimVML\Mods
[Warning:   SlimVML] Skipping 0Harmony.dll since it's in ignore list
[Info   :   SlimVML] Invoking static void SlimAssist.SlimAssist::Main(string[] args)
[Message:   BepInEx] Preloader finished
[Message:   BepInEx] Chainloader ready
[Message:   BepInEx] Chainloader started
[Info   :   BepInEx] 43 plugins to load
[Info   :   BepInEx] Loading [PlantEverything 1.11.7]
[Info   :  HarmonyX] ### Harmony id=advize.PlantEverything, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void Advize_PlantEverything.PlantEverything::.ctor(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\Advize_PlantEverything.dll
### At 2022-11-05 04.23.16
[Info   :  HarmonyX] Patching void ObjectDB::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Advize_PlantEverything.PlantEverything+ObjectDBAwake::Postfix(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Advize_PlantEverything.PlantEverything+ZNetSceneAwake::Postfix(ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching UnityEngine.GameObject ZNetScene::GetPrefab(int hash) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Advize_PlantEverything.PlantEverything+ZNetSceneGetPrefab::Postfix(int hash, UnityEngine.GameObject& __result, ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on UnityEngine.GameObject ZNetScene::GetPrefab(int hash)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Player::RemovePiece() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool Advize_PlantEverything.PlantEverything+PlayerRemovePiece::Prefix(Player __instance, ZSyncAnimation ___m_zanim, Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool Player::RemovePiece()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Piece::SetCreator(long uid) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Advize_PlantEverything.PlantEverything+PieceSetCreator::Postfix(Piece __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Piece::SetCreator(long uid)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Piece::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Advize_PlantEverything.PlantEverything+PieceAwake::Postfix(Piece __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Piece::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void TreeBase::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Advize_PlantEverything.PlantEverything+TreeBaseAwake::Postfix(TreeBase __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void TreeBase::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual void Plant::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Advize_PlantEverything.PlantEverything+PlantAwake::Postfix(Plant __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Plant::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Plant::HaveRoof() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool Advize_PlantEverything.PlantEverything+PlantHaveRoof::Prefix(Plant __instance, Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool Plant::HaveRoof()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching bool Plant::HaveGrowSpace() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool Advize_PlantEverything.PlantEverything+PlantHaveGrowSpace::Prefix(Plant __instance, Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool Plant::HaveGrowSpace()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Plant::Grow() with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> Advize_PlantEverything.PlantEverything+PlantGrow::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void Plant::Grow()
[Info   :  HarmonyX] Transpiling void Plant::Grow()
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> Advize_PlantEverything.PlantEverything+PlantGrow::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching virtual string Pickable::GetHoverText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Advize_PlantEverything.PlantEverything+PickableGetHoverText::Postfix(Pickable __instance, bool ___m_picked, ZNetView ___m_nview, int ___m_respawnTimeMinutes, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string Pickable::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string Plant::GetHoverText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Advize_PlantEverything.PlantEverything+PlantGetHoverText::Postfix(Plant __instance, ZNetView ___m_nview, int ___m_status, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string Plant::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZRpc::HandlePackage(ZPackage package) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ServerSync.ConfigSync+SnatchCurrentlyHandlingRPC::Prefix(ZRpc __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZRpc::HandlePackage(ZPackage package)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void ZNet::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ServerSync.ConfigSync+RegisterRPCPatch::Postfix(ZNet __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::OnNewConnection(ZNetPeer peer) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::OnNewConnection(ZNetPeer peer)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::Shutdown() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ServerSync.ConfigSync+ResetConfigsOnShutdown::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::Shutdown()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, Advize_PlantEverything, Version=1.11.7.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
1 postfixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching string BepInEx.Configuration.ConfigEntryBase::GetSerializedValue() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ServerSync.ConfigSync+PreventSavingServerInfo::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on string BepInEx.Configuration.ConfigEntryBase::GetSerializedValue()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void BepInEx.Configuration.ConfigEntryBase::SetSerializedValue(string value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ServerSync.ConfigSync+PreventConfigRereadChangingValues::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, string value)

[Info   :  HarmonyX] Running ILHook manipulator on void BepInEx.Configuration.ConfigEntryBase::SetSerializedValue(string value)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, Advize_PlantEverything, Version=1.11.7.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static bool ServerSync.VersionCheck::RPC_PeerInfo(ZRpc rpc, ZNet __instance)
1 postfixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::OnNewConnection(ZNetPeer peer) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ServerSync.VersionCheck::RegisterAndCheckVersion(ZNetPeer peer, ZNet __instance)
1 postfixes:
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::OnNewConnection(ZNetPeer peer)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::Disconnect(ZNetPeer peer) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ServerSync.VersionCheck::RemoveDisconnected(ZNetPeer peer, ZNet __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::Disconnect(ZNetPeer peer)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void FejdStartup::ShowConnectError(ZNet+ConnectionStatus statusOverride) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ServerSync.VersionCheck::ShowConnectionError(FejdStartup __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::ShowConnectError(ZNet+ConnectionStatus statusOverride)
[Info   :  HarmonyX] Writing postfixes
[Info   :   BepInEx] Loading [Build Restriction Tweaks 0.2.2]
[Info   :  HarmonyX] Created Harmony instance id=aedenthorn.BuildRestrictionTweaks, version=2.0.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony20.dll - Started from System.Void HarmonyLib.Tools.Logger::Log(HarmonyLib.Tools.Logger+LogChannel,System.Func`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]],System.Boolean) location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll
[Info   :  HarmonyX] Patching aedenthorn.BuildRestrictionTweaks...
[Info   :  HarmonyX] Patching CraftingStation CraftingStation::HaveBuildStationInRange(System.String,UnityEngine.Vector3)
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching static CraftingStation CraftingStation::HaveBuildStationInRange(string name, UnityEngine.Vector3 point) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BuildRestrictionTweaks.BepInExPlugin+CraftingStation_HaveBuildStationInRange_Patch::Postfix(CraftingStation& __result, string name)

[Info   :  HarmonyX] Running ILHook manipulator on static CraftingStation CraftingStation::HaveBuildStationInRange(string name, UnityEngine.Vector3 point)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching aedenthorn.BuildRestrictionTweaks took 19ms
[Info   :  HarmonyX] Patching aedenthorn.BuildRestrictionTweaks...
[Info   :  HarmonyX] Patching System.Void Player::UpdatePlacementGhost(System.Boolean)
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void Player::UpdatePlacementGhost(bool flashGuardStone) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void BuildRestrictionTweaks.BepInExPlugin+Player_UpdatePlacementGhost_Patch::Postfix(Player __instance, UnityEngine.GameObject ___m_placementGhost)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::UpdatePlacementGhost(bool flashGuardStone)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching aedenthorn.BuildRestrictionTweaks took 31ms
[Info   :   BepInEx] Loading [CartSupport 0.1.0]
[Info   :  HarmonyX] Created Harmony instance id=aedenthorn.CartSupport, version=2.0.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony20.dll - Started from System.Void HarmonyLib.Tools.Logger::Log(HarmonyLib.Tools.Logger+LogChannel,System.Func`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]],System.Boolean) location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll
[Warning:  HarmonyX] AccessTools.DeclaredMethod: Could not find method for type Console and name InputText and parameters 
[Warning:  HarmonyX] Unknown patch - Could not find method InputText with 0 parameters in type Console, but it was found in base class of this type Terminal
[Info   :  HarmonyX] Patching aedenthorn.CartSupport...
[Info   :  HarmonyX] Patching System.Void Vagon::SetMass(System.Single)
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void Vagon::SetMass(float mass) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CartSupport.BepInExPlugin+SetMass_Patch::Prefix(Vagon __instance, ZNetView ___m_nview, Single& mass)

[Info   :  HarmonyX] Running ILHook manipulator on void Vagon::SetMass(float mass)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching aedenthorn.CartSupport took 9ms
[Info   :  HarmonyX] Patching aedenthorn.CartSupport...
[Info   :  HarmonyX] Patching System.Void Terminal::InputText()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching virtual void Terminal::InputText() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CartSupport.BepInExPlugin+InputText_Patch::Prefix(Console __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Terminal::InputText()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching aedenthorn.CartSupport took 14ms
[Info   :   BepInEx] Loading [Craft From Containers 2.3.0]
[Info   :  HarmonyX] Created Harmony instance id=harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc, version=2.0.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony20.dll - Started from System.Void HarmonyLib.Tools.Logger::Log(HarmonyLib.Tools.Logger+LogChannel,System.Func`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]],System.Boolean) location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc...
[Info   :  HarmonyX] Patching System.Void FejdStartup::Awake()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void FejdStartup::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CraftFromContainers.BepInExPlugin+FejdStartup_Awake_Patch::Postfix(FejdStartup __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc took 18ms
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc...
[Info   :  HarmonyX] Patching System.Void Container::Awake()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void Container::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CraftFromContainers.BepInExPlugin+Container_Awake_Patch::Postfix(Container __instance, ZNetView ___m_nview)

[Info   :  HarmonyX] Running ILHook manipulator on void Container::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc took 16ms
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc...
[Info   :  HarmonyX] Patching System.Void Container::OnDestroyed()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void Container::OnDestroyed() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CraftFromContainers.BepInExPlugin+Container_OnDestroyed_Patch::Prefix(Container __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Container::OnDestroyed()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc took 8ms
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc...
[Info   :  HarmonyX] Patching System.Void InventoryGui::Update()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void InventoryGui::Update() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CraftFromContainers.BepInExPlugin+InventoryGui_Update_Patch::Prefix(InventoryGui __instance, UnityEngine.Animator ___m_animator)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::Update()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc took 15ms
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc...
[Info   :  HarmonyX] Patching System.Boolean Fireplace::Interact(Humanoid,System.Boolean,System.Boolean)
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching virtual bool Fireplace::Interact(Humanoid user, bool hold, bool alt) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CraftFromContainers.BepInExPlugin+Fireplace_Interact_Patch::Prefix(Fireplace __instance, Humanoid user, bool hold, Boolean& __result, ZNetView ___m_nview)

[Info   :  HarmonyX] Running ILHook manipulator on virtual bool Fireplace::Interact(Humanoid user, bool hold, bool alt)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc took 10ms
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc...
[Info   :  HarmonyX] Patching System.Boolean CookingStation::OnAddFuelSwitch(Switch,Humanoid,ItemDrop+ItemData)
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching bool CookingStation::OnAddFuelSwitch(Switch sw, Humanoid user, ItemDrop+ItemData item) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CraftFromContainers.BepInExPlugin+CookingStation_OnAddFuelSwitch_Patch::Prefix(CookingStation __instance, Boolean& __result, Humanoid user, ItemDrop+ItemData item, ZNetView ___m_nview)

[Info   :  HarmonyX] Running ILHook manipulator on bool CookingStation::OnAddFuelSwitch(Switch sw, Humanoid user, ItemDrop+ItemData item)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc took 15ms
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc...
[Info   :  HarmonyX] Patching ItemDrop+ItemData CookingStation::FindCookableItem(Inventory)
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching ItemDrop+ItemData CookingStation::FindCookableItem(Inventory inventory) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CraftFromContainers.BepInExPlugin+CookingStation_FindCookableItem_Patch::Postfix(CookingStation __instance, ItemDrop+ItemData& __result)

[Info   :  HarmonyX] Running ILHook manipulator on ItemDrop+ItemData CookingStation::FindCookableItem(Inventory inventory)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc took 13ms
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc...
[Info   :  HarmonyX] Patching System.Void Smelter::UpdateHoverTexts()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void Smelter::UpdateHoverTexts() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CraftFromContainers.BepInExPlugin+Smelter_UpdateHoverTexts_Patch::Postfix(Smelter __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Smelter::UpdateHoverTexts()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc took 15ms
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc...
[Info   :  HarmonyX] Patching System.Boolean Smelter::OnAddOre(Switch,Humanoid,ItemDrop+ItemData)
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching bool Smelter::OnAddOre(Switch sw, Humanoid user, ItemDrop+ItemData item) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CraftFromContainers.BepInExPlugin+Smelter_OnAddOre_Patch::Prefix(Smelter __instance, Humanoid user, ItemDrop+ItemData item, ZNetView ___m_nview)

[Info   :  HarmonyX] Running ILHook manipulator on bool Smelter::OnAddOre(Switch sw, Humanoid user, ItemDrop+ItemData item)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc took 11ms
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc...
[Info   :  HarmonyX] Patching System.Boolean Smelter::OnAddFuel(Switch,Humanoid,ItemDrop+ItemData)
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching bool Smelter::OnAddFuel(Switch sw, Humanoid user, ItemDrop+ItemData item) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CraftFromContainers.BepInExPlugin+Smelter_OnAddFuel_Patch::Prefix(Smelter __instance, Boolean& __result, ZNetView ___m_nview, Humanoid user, ItemDrop+ItemData item)

[Info   :  HarmonyX] Running ILHook manipulator on bool Smelter::OnAddFuel(Switch sw, Humanoid user, ItemDrop+ItemData item)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc took 12ms
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc...
[Info   :  HarmonyX] Patching System.Boolean InventoryGui::SetupRequirement(UnityEngine.Transform,Piece+Requirement,Player,System.Boolean,System.Int32)
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching static bool InventoryGui::SetupRequirement(UnityEngine.Transform elementRoot, Piece+Requirement req, Player player, bool craft, int quality) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CraftFromContainers.BepInExPlugin+InventoryGui_SetupRequirement_Patch::Postfix(InventoryGui __instance, UnityEngine.Transform elementRoot, Piece+Requirement req, Player player, bool craft, int quality)

[Info   :  HarmonyX] Running ILHook manipulator on static bool InventoryGui::SetupRequirement(UnityEngine.Transform elementRoot, Piece+Requirement req, Player player, bool craft, int quality)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc took 10ms
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc...
[Info   :  HarmonyX] Patching System.Boolean Player::HaveRequirements(Piece+Requirement[],System.Boolean,System.Int32)
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching bool Player::HaveRequirements(Piece+Requirement[] resources, bool discover, int qualityLevel) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CraftFromContainers.BepInExPlugin+HaveRequirements_Patch::Postfix(Player __instance, Boolean& __result, Piece+Requirement[] resources, bool discover, int qualityLevel, System.Collections.Generic.HashSet<string> ___m_knownMaterial)

[Info   :  HarmonyX] Running ILHook manipulator on bool Player::HaveRequirements(Piece+Requirement[] resources, bool discover, int qualityLevel)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc took 7ms
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc...
[Info   :  HarmonyX] Patching System.Boolean Player::HaveRequirements(Piece,Player+RequirementMode)
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching bool Player::HaveRequirements(Piece piece, Player+RequirementMode mode) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CraftFromContainers.BepInExPlugin+HaveRequirements_Patch2::Postfix(Player __instance, Boolean& __result, Piece piece, Player+RequirementMode mode, System.Collections.Generic.HashSet<string> ___m_knownMaterial, System.Collections.Generic.Dictionary<string, int> ___m_knownStations)

[Info   :  HarmonyX] Running ILHook manipulator on bool Player::HaveRequirements(Piece piece, Player+RequirementMode mode)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc took 10ms
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc...
[Info   :  HarmonyX] Patching System.Void Player::ConsumeResources(Piece+Requirement[],System.Int32)
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void Player::ConsumeResources(Piece+Requirement[] requirements, int qualityLevel) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CraftFromContainers.BepInExPlugin+ConsumeResources_Patch::Prefix(Player __instance, Piece+Requirement[] requirements, int qualityLevel)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::ConsumeResources(Piece+Requirement[] requirements, int qualityLevel)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc took 6ms
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc...
[Info   :  HarmonyX] Patching System.Void Player::UpdatePlacementGhost(System.Boolean)
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void Player::UpdatePlacementGhost(bool flashGuardStone) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void BuildRestrictionTweaks.BepInExPlugin+Player_UpdatePlacementGhost_Patch::Postfix(Player __instance, UnityEngine.GameObject ___m_placementGhost)
* static void CraftFromContainers.BepInExPlugin+UpdatePlacementGhost_Patch::Postfix(Player __instance, bool flashGuardStone)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::UpdatePlacementGhost(bool flashGuardStone)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc took 20ms
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc...
[Info   :  HarmonyX] Patching System.Void InventoryGui::OnCraftPressed()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void InventoryGui::OnCraftPressed() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CraftFromContainers.BepInExPlugin+DoCrafting_Patch::Prefix(InventoryGui __instance, System.Collections.Generic.KeyValuePair<Recipe, ItemDrop+ItemData> ___m_selectedRecipe, ItemDrop+ItemData ___m_craftUpgradeItem)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::OnCraftPressed()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc took 10ms
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc...
[Info   :  HarmonyX] Patching System.Void Player::UpdatePlacement(System.Boolean,System.Single)
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void Player::UpdatePlacement(bool takeInput, float dt) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CraftFromContainers.BepInExPlugin+UpdatePlacement_Patch::Prefix(Player __instance, bool takeInput, float dt, PieceTable ___m_buildPieces, UnityEngine.GameObject ___m_placementGhost)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::UpdatePlacement(bool takeInput, float dt)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc took 16ms
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc...
[Info   :  HarmonyX] Patching System.Void Terminal::InputText()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching virtual void Terminal::InputText() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CartSupport.BepInExPlugin+InputText_Patch::Prefix(Console __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Terminal::InputText()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching virtual void Terminal::InputText() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CraftFromContainers.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Terminal::InputText()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching harmony-auto-23465dfd-6375-41e4-ab73-c94dc59d35dc took 14ms
[Info   :   BepInEx] Loading [Extended Player Inventory 0.3.3]
[Info   :  HarmonyX] Created Harmony instance id=aedenthorn.ExtendedPlayerInventory, version=2.0.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony20.dll - Started from System.Void HarmonyLib.Tools.Logger::Log(HarmonyLib.Tools.Logger+LogChannel,System.Func`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]],System.Boolean) location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory...
[Info   :  HarmonyX] Patching System.Void Player::Awake()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching virtual void Player::Awake() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ExtendedPlayerInventory.BepInExPlugin+Player_Awake_Patch::Prefix(Player __instance, Inventory ___m_inventory)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Player::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory took 25ms
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory...
[Info   :  HarmonyX] Patching System.Void TombStone::Awake()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void TombStone::Awake() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ExtendedPlayerInventory.BepInExPlugin+TombStone_Awake_Patch::Prefix(TombStone __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void TombStone::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory took 7ms
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory...
[Info   :  HarmonyX] Patching System.Boolean TombStone::Interact(Humanoid,System.Boolean,System.Boolean)
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching virtual bool TombStone::Interact(Humanoid character, bool hold, bool alt) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ExtendedPlayerInventory.BepInExPlugin+TombStone_Interact_Patch::Prefix(TombStone __instance, Container ___m_container)

[Info   :  HarmonyX] Running ILHook manipulator on virtual bool TombStone::Interact(Humanoid character, bool hold, bool alt)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory took 10ms
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory...
[Info   :  HarmonyX] Patching System.Void Inventory::MoveInventoryToGrave(Inventory)
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void Inventory::MoveInventoryToGrave(Inventory original) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ExtendedPlayerInventory.BepInExPlugin+MoveInventoryToGrave_Patch::Postfix(Inventory __instance, Inventory original)

[Info   :  HarmonyX] Running ILHook manipulator on void Inventory::MoveInventoryToGrave(Inventory original)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory took 8ms
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory...
[Info   :  HarmonyX] Patching System.Void InventoryGui::Show(Container)
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void InventoryGui::Show(Container container) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ExtendedPlayerInventory.BepInExPlugin+InventoryGui_Show_Patch::Postfix(InventoryGui __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::Show(Container container)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory took 6ms
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory...
[Info   :  HarmonyX] Patching System.Void Inventory::Changed()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void Inventory::Changed() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ExtendedPlayerInventory.BepInExPlugin+Inventory_Changed_Patch::Postfix(Inventory __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Inventory::Changed()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory took 4ms
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory...
[Info   :  HarmonyX] Patching System.Void Humanoid::SetupEquipment()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void Humanoid::SetupEquipment() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ExtendedPlayerInventory.BepInExPlugin+Humanoid_SetupEquipment_Patch::Postfix(Humanoid __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Humanoid::SetupEquipment()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory took 11ms
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory...
[Info   :  HarmonyX] Patching System.Void Player::Update()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void Player::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ExtendedPlayerInventory.BepInExPlugin+Player_Update_Patch::Postfix(Player __instance, Inventory ___m_inventory)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::Update()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory took 21ms
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory...
[Info   :  HarmonyX] Patching System.Void InventoryGui::Update()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void InventoryGui::Update() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CraftFromContainers.BepInExPlugin+InventoryGui_Update_Patch::Prefix(InventoryGui __instance, UnityEngine.Animator ___m_animator)
1 postfixes:
* static void ExtendedPlayerInventory.BepInExPlugin+InventoryGui_Update_Patch::Postfix(InventoryGui __instance, UnityEngine.Animator ___m_animator, InventoryGrid ___m_playerGrid)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::Update()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory took 17ms
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory...
[Info   :  HarmonyX] Patching System.Void InventoryGui::UpdateInventory(Player)
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void InventoryGui::UpdateInventory(Player player) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ExtendedPlayerInventory.BepInExPlugin+UpdateInventory_Patch::Postfix(InventoryGrid ___m_playerGrid)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::UpdateInventory(Player player)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory took 10ms
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory...
[Info   :  HarmonyX] Patching Vector2i Inventory::FindEmptySlot(System.Boolean)
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching Vector2i Inventory::FindEmptySlot(bool topFirst) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ExtendedPlayerInventory.BepInExPlugin+FindEmptySlot_Patch::Prefix(Inventory __instance, Int32& ___m_height)
1 postfixes:
* static void ExtendedPlayerInventory.BepInExPlugin+FindEmptySlot_Patch::Postfix(Inventory __instance, Int32& ___m_height)

[Info   :  HarmonyX] Running ILHook manipulator on Vector2i Inventory::FindEmptySlot(bool topFirst)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory took 13ms
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory...
[Info   :  HarmonyX] Patching System.Int32 Inventory::GetEmptySlots()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching int Inventory::GetEmptySlots() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ExtendedPlayerInventory.BepInExPlugin+GetEmptySlots_Patch::Prefix(Inventory __instance, Int32& __result, System.Collections.Generic.List<ItemDrop+ItemData> ___m_inventory, int ___m_width, int ___m_height)

[Info   :  HarmonyX] Running ILHook manipulator on int Inventory::GetEmptySlots()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory took 5ms
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory...
[Info   :  HarmonyX] Patching System.Boolean Inventory::HaveEmptySlot()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching bool Inventory::HaveEmptySlot() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ExtendedPlayerInventory.BepInExPlugin+HaveEmptySlot_Patch::Prefix(Inventory __instance, Boolean& __result, System.Collections.Generic.List<ItemDrop+ItemData> ___m_inventory, int ___m_width, int ___m_height)

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::HaveEmptySlot()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory took 5ms
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory...
[Info   :  HarmonyX] Patching System.Boolean Inventory::AddItem(ItemDrop+ItemData)
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching bool Inventory::AddItem(ItemDrop+ItemData item) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ExtendedPlayerInventory.BepInExPlugin+Inventory_AddItem_Patch1::Prefix(Inventory __instance, Boolean& __result, System.Collections.Generic.List<ItemDrop+ItemData> ___m_inventory, ItemDrop+ItemData item)

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::AddItem(ItemDrop+ItemData item)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory took 8ms
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory...
[Info   :  HarmonyX] Patching System.Boolean Inventory::AddItem(ItemDrop+ItemData,System.Int32,System.Int32,System.Int32)
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching bool Inventory::AddItem(ItemDrop+ItemData item, int amount, int x, int y) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ExtendedPlayerInventory.BepInExPlugin+Inventory_AddItem_Patch2::Prefix(Inventory __instance, Int32& ___m_width, Int32& ___m_height, int x, int y)

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::AddItem(ItemDrop+ItemData item, int amount, int x, int y)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory took 10ms
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory...
[Info   :  HarmonyX] Patching System.Void Hud::Awake()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void Hud::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ExtendedPlayerInventory.BepInExPlugin+Hud_Awake_Patch::Postfix(Hud __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Hud::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory took 11ms
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory...
[Info   :  HarmonyX] Patching System.Void Hud::Update()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void Hud::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ExtendedPlayerInventory.BepInExPlugin+Hud_Update_Patch::Postfix(Hud __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Hud::Update()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory took 9ms
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory...
[Info   :  HarmonyX] Patching System.Void Terminal::InputText()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching virtual void Terminal::InputText() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CartSupport.BepInExPlugin+InputText_Patch::Prefix(Console __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Terminal::InputText()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching virtual void Terminal::InputText() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CraftFromContainers.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)
* static bool ExtendedPlayerInventory.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Terminal::InputText()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching aedenthorn.ExtendedPlayerInventory took 9ms
[Info   :   BepInEx] Loading [Hoe Radius 0.1.2]
[Info   :  HarmonyX] Created Harmony instance id=harmony-auto-93d8e350-b0d3-495b-a9ca-cb1e2498cf1d, version=2.0.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony20.dll - Started from System.Void HarmonyLib.Tools.Logger::Log(HarmonyLib.Tools.Logger+LogChannel,System.Func`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]],System.Boolean) location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll
[Info   :  HarmonyX] Patching harmony-auto-93d8e350-b0d3-495b-a9ca-cb1e2498cf1d...
[Info   :  HarmonyX] Patching System.Void TerrainOp::Awake()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void TerrainOp::Awake() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void HoeRadius.BepInExPlugin+TerrainOp_Patch::Prefix(TerrainOp __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void TerrainOp::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching harmony-auto-93d8e350-b0d3-495b-a9ca-cb1e2498cf1d took 12ms
[Info   :  HarmonyX] Patching harmony-auto-93d8e350-b0d3-495b-a9ca-cb1e2498cf1d...
[Info   :  HarmonyX] Patching System.Void Terminal::InputText()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching virtual void Terminal::InputText() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CartSupport.BepInExPlugin+InputText_Patch::Prefix(Console __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Terminal::InputText()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching virtual void Terminal::InputText() with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CraftFromContainers.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)
* static bool ExtendedPlayerInventory.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)
* static bool HoeRadius.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Terminal::InputText()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching harmony-auto-93d8e350-b0d3-495b-a9ca-cb1e2498cf1d took 11ms
[Info   :   BepInEx] Loading [Movable Inventory Windows 0.2.2]
[Info   :  HarmonyX] Created Harmony instance id=aedenthorn.MovableInventoryWindows, version=2.0.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony20.dll - Started from System.Void HarmonyLib.Tools.Logger::Log(HarmonyLib.Tools.Logger+LogChannel,System.Func`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]],System.Boolean) location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll
[Warning:  HarmonyX] AccessTools.DeclaredMethod: Could not find method for type Console and name InputText and parameters 
[Warning:  HarmonyX] Unknown patch - Could not find method InputText with 0 parameters in type Console, but it was found in base class of this type Terminal
[Info   :  HarmonyX] Patching aedenthorn.MovableInventoryWindows...
[Info   :  HarmonyX] Patching System.Void InventoryGui::Update()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void InventoryGui::Update() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CraftFromContainers.BepInExPlugin+InventoryGui_Update_Patch::Prefix(InventoryGui __instance, UnityEngine.Animator ___m_animator)
2 postfixes:
* static void ExtendedPlayerInventory.BepInExPlugin+InventoryGui_Update_Patch::Postfix(InventoryGui __instance, UnityEngine.Animator ___m_animator, InventoryGrid ___m_playerGrid)
* static void MovableInventoryWindows.BepInExPlugin+InventoryGui_Update_Patch::Postfix(InventoryGui __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::Update()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching aedenthorn.MovableInventoryWindows took 17ms
[Info   :  HarmonyX] Patching aedenthorn.MovableInventoryWindows...
[Info   :  HarmonyX] Patching System.Void Terminal::InputText()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching virtual void Terminal::InputText() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CartSupport.BepInExPlugin+InputText_Patch::Prefix(Console __instance)
* static bool MovableInventoryWindows.BepInExPlugin+InputText_Patch::Prefix(Console __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Terminal::InputText()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching virtual void Terminal::InputText() with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool CraftFromContainers.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)
* static bool ExtendedPlayerInventory.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)
* static bool HoeRadius.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Terminal::InputText()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching aedenthorn.MovableInventoryWindows took 12ms
[Info   :   BepInEx] Loading [CraftyCarts 3.0.7]
[Info   :  HarmonyX] ### Harmony id=azumatt.CraftyCarts, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void CraftyCartsRemake.CCR::.ctor(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\CraftyCartsRemake.dll
### At 2022-11-05 04.23.17
[Info   :  HarmonyX] ### Harmony id=org.bepinex.helpers.PieceManager, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void PieceManager.PiecePrefabManager::.cctor(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\CraftyCartsRemake.dll
### At 2022-11-05 04.23.17
[Info   :  HarmonyX] Patching void FejdStartup::Awake() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void PieceManager.BuildPiece::Patch_FejdStartup()
1 postfixes:
* static void CraftFromContainers.BepInExPlugin+FejdStartup_Awake_Patch::Postfix(FejdStartup __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
1 postfixes:
* static void Advize_PlantEverything.PlantEverything+ZNetSceneAwake::Postfix(ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::Awake() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void Advize_PlantEverything.PlantEverything+ObjectDBAwake::Postfix(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::CopyOtherDB(ObjectDB other) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::CopyOtherDB(ObjectDB other)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::Awake() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void PieceManager.BuildPiece::Patch_ObjectDBInit(ObjectDB __instance)
* static void Advize_PlantEverything.PlantEverything+ObjectDBAwake::Postfix(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Localization::LoadCSV(string fileName, string language) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void PieceManager.LocalizeKey::AddLocalizedKeys(Localization __instance, string language)

[Info   :  HarmonyX] Running ILHook manipulator on bool Localization::LoadCSV(string fileName, string language)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void CraftingStation::Start() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CraftyCartsRemake.CCR+CraftingStation_Start_Patch::Postfix(CraftingStation __instance, System.Collections.Generic.List`1[[CraftingStation, assembly_valheim, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___m_allStations)

[Info   :  HarmonyX] Running ILHook manipulator on void CraftingStation::Start()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void CraftingStation::FixedUpdate() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void CraftyCartsRemake.CCR+CCRCraftingStation_FixedUpdate_Patch::Postfix(CraftingStation __instance, Single& ___m_useTimer, Single& ___m_updateExtensionTimer, UnityEngine.GameObject ___m_inUseObject)

[Info   :  HarmonyX] Running ILHook manipulator on void CraftingStation::FixedUpdate()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Container::Awake() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CraftFromContainers.BepInExPlugin+Container_Awake_Patch::Postfix(Container __instance, ZNetView ___m_nview)
* static void CraftyCartsRemake.CCR+Container_Awake_Patch::Postfix(Container __instance, Inventory& ___m_inventory)

[Info   :  HarmonyX] Running ILHook manipulator on void Container::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZRpc::HandlePackage(ZPackage package) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void ServerSync.ConfigSync+SnatchCurrentlyHandlingRPC::Prefix(ZRpc __instance)
* static void ServerSync.ConfigSync+SnatchCurrentlyHandlingRPC::Prefix(ZRpc __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZRpc::HandlePackage(ZPackage package)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void ZNet::Awake() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ServerSync.ConfigSync+RegisterRPCPatch::Postfix(ZNet __instance)
* static void ServerSync.ConfigSync+RegisterRPCPatch::Postfix(ZNet __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::OnNewConnection(ZNetPeer peer) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ServerSync.VersionCheck::RegisterAndCheckVersion(ZNetPeer peer, ZNet __instance)
2 postfixes:
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::OnNewConnection(ZNetPeer peer)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void FejdStartup::ShowConnectError(ZNet+ConnectionStatus statusOverride) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ServerSync.VersionCheck::ShowConnectionError(FejdStartup __instance)
* static void ServerSync.ConfigSync+ShowConnectionError::Postfix(FejdStartup __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::ShowConnectError(ZNet+ConnectionStatus statusOverride)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::Shutdown() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ServerSync.ConfigSync+ResetConfigsOnShutdown::Postfix()
* static void ServerSync.ConfigSync+ResetConfigsOnShutdown::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::Shutdown()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg) with 3 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, Advize_PlantEverything, Version=1.11.7.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, CraftyCartsRemake, Version=3.0.7.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static bool ServerSync.VersionCheck::RPC_PeerInfo(ZRpc rpc, ZNet __instance)
2 postfixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching string BepInEx.Configuration.ConfigEntryBase::GetSerializedValue() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool ServerSync.ConfigSync+PreventSavingServerInfo::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, String& __result)
* static bool ServerSync.ConfigSync+PreventSavingServerInfo::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on string BepInEx.Configuration.ConfigEntryBase::GetSerializedValue()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void BepInEx.Configuration.ConfigEntryBase::SetSerializedValue(string value) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool ServerSync.ConfigSync+PreventConfigRereadChangingValues::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, string value)
* static bool ServerSync.ConfigSync+PreventConfigRereadChangingValues::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, string value)

[Info   :  HarmonyX] Running ILHook manipulator on void BepInEx.Configuration.ConfigEntryBase::SetSerializedValue(string value)
[Info   :  HarmonyX] Writing prefixes
[Info   :   BepInEx] Loading [Better Stamina 1.2.0.0]
[Info   :  HarmonyX] ### Harmony id=bakaSpaceman.BetterStamina, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from virtual void BepInPluginTemplate::Awake(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\BetterStamina.dll
### At 2022-11-05 04.23.18
[Info   :  HarmonyX] Patching void Player::UpdateStats(float dt) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void GeneralStaminaPatches::UpdateStats_Prefix(Player __instance, float dt, SEMan ___m_seman, bool ___m_wallRunning, float ___m_staminaRegen, float ___m_stamina, float ___m_staminaRegenTimer)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::UpdateStats(float dt)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching virtual void Player::UseStamina(float v) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ToolsPatches::HammerStamina_Prefix(Player __instance, Single& v)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Player::UseStamina(float v)
[Info   :  HarmonyX] Writing prefixes
[Warning:  HarmonyX] AccessTools.DeclaredMethod: Could not find method for type Attack and name GetStaminaUsage and parameters 
[Info   :   BepInEx] Loading [AFeed_BalrondTrough 1.0.0]
[Info   :  HarmonyX] ### Harmony id=balrond.astafaraios.AFeed_BalrondTrough, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void BalrondTrough.Launch::.ctor(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\BalrondTrough.dll
### At 2022-11-05 04.23.18
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void BalrondTrough.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
1 postfixes:
* static void Advize_PlantEverything.PlantEverything+ZNetSceneAwake::Postfix(ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :   BepInEx] Loading [BalrondBarrell 1.0.5]
[Info   :  HarmonyX] ### Harmony id=balrond.astafaraios.BalrondBarrell, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void BalrondBarrell.Launch::.ctor(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\BalrondBarrell.dll
### At 2022-11-05 04.23.19
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 3 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void BalrondTrough.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondBarrell.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
1 postfixes:
* static void Advize_PlantEverything.PlantEverything+ZNetSceneAwake::Postfix(ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :   BepInEx] Loading [BalrondHearths 1.0.0]
[Info   :  HarmonyX] ### Harmony id=balrond.astafaraios.BalrondHearths, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void BalrondHearths.Launch::.ctor(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\BalrondHearths.dll
### At 2022-11-05 04.23.20
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 4 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void BalrondTrough.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondBarrell.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondHearths.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
1 postfixes:
* static void Advize_PlantEverything.PlantEverything+ZNetSceneAwake::Postfix(ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::CopyOtherDB(ObjectDB other) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void BalrondHearths.Launch+Object_CopyOtherDB_Path::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::CopyOtherDB(ObjectDB other)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::Awake() with 0 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void PieceManager.BuildPiece::Patch_ObjectDBInit(ObjectDB __instance)
* static void Advize_PlantEverything.PlantEverything+ObjectDBAwake::Postfix(ObjectDB __instance)
* static void BalrondHearths.Launch+Object_Awake_Path::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :   BepInEx] Loading [BalrondMetalLocker 1.0.1]
[Info   :  HarmonyX] ### Harmony id=balrond.astafaraios.BalrondMetalLocker, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void BalrondMetalLocker.Launch::.ctor(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\BalrondMetalLocker.dll
### At 2022-11-05 04.23.21
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 5 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
5 prefixes:
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void BalrondTrough.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondBarrell.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondHearths.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondMetalLocker.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
1 postfixes:
* static void Advize_PlantEverything.PlantEverything+ZNetSceneAwake::Postfix(ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :   BepInEx] Loading [BalrondOreBasket 1.0.1]
[Info   :  HarmonyX] ### Harmony id=balrond.astafaraios.BalrondOreBasket, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void BalrondOreBasket.Launch::.ctor(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\BalrondOreBasket.dll
### At 2022-11-05 04.23.21
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 6 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
6 prefixes:
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void BalrondTrough.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondBarrell.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondHearths.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondMetalLocker.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondOreBasket.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
1 postfixes:
* static void Advize_PlantEverything.PlantEverything+ZNetSceneAwake::Postfix(ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :   BepInEx] Loading [BalrondShelf 1.0.3]
[Info   :  HarmonyX] ### Harmony id=balrond.astafaraios.BalrondShelf, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void BalrondShelf.Launch::.ctor(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\BalrondShelfPotionPlus.dll
### At 2022-11-05 04.23.22
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 7 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
7 prefixes:
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void BalrondTrough.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondBarrell.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondHearths.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondMetalLocker.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondOreBasket.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShelf.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
1 postfixes:
* static void Advize_PlantEverything.PlantEverything+ZNetSceneAwake::Postfix(ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :   BepInEx] Loading [BalrondShipyard 1.0.3]
[Info   :  HarmonyX] ### Harmony id=balrond.astafaraios.BalrondShipyard, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void BalrondShipyard.Launch::.ctor(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\BalrondShipyard.dll
### At 2022-11-05 04.23.23
[Info   :  HarmonyX] Patching void Container::Awake() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BalrondShipyard.Launch+Container_Awake_Path::Prefix(Container __instance)
2 postfixes:
* static void CraftFromContainers.BepInExPlugin+Container_Awake_Patch::Postfix(Container __instance, ZNetView ___m_nview)
* static void CraftyCartsRemake.CCR+Container_Awake_Patch::Postfix(Container __instance, Inventory& ___m_inventory)

[Info   :  HarmonyX] Running ILHook manipulator on void Container::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void BalrondShipyard.ShipyardStation::Awake() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BalrondShipyard.Launch+ShipyardStation_Awake_Path::Prefix(BalrondShipyard.ShipyardStation __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void BalrondShipyard.ShipyardStation::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void BalrondShipyard.ShipExtensionManager::Awake() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BalrondShipyard.Launch+ShipExtensionManager_Awake_Path::Prefix(BalrondShipyard.ShipExtensionManager __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void BalrondShipyard.ShipExtensionManager::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 8 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
8 prefixes:
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void BalrondTrough.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondBarrell.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondHearths.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondMetalLocker.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondOreBasket.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShelf.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShipyard.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
1 postfixes:
* static void Advize_PlantEverything.PlantEverything+ZNetSceneAwake::Postfix(ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::CopyOtherDB(ObjectDB other) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void BalrondHearths.Launch+Object_CopyOtherDB_Path::Postfix()
* static void BalrondShipyard.Launch+Object_CopyOtherDB_Path::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::CopyOtherDB(ObjectDB other)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::Awake() with 0 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
5 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void PieceManager.BuildPiece::Patch_ObjectDBInit(ObjectDB __instance)
* static void Advize_PlantEverything.PlantEverything+ObjectDBAwake::Postfix(ObjectDB __instance)
* static void BalrondHearths.Launch+Object_Awake_Path::Postfix()
* static void BalrondShipyard.Launch+Object_Awake_Path::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :   BepInEx] Loading [BalrondWoodshed 1.0.2]
[Info   :  HarmonyX] ### Harmony id=balrond.astafaraios.BalrondWoodshed, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void BalrondWoodshed.Launch::.ctor(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\BalrondWoodshed.dll
### At 2022-11-05 04.23.26
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 9 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
9 prefixes:
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void BalrondTrough.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondBarrell.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondHearths.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondMetalLocker.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondOreBasket.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShelf.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShipyard.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondWoodshed.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
1 postfixes:
* static void Advize_PlantEverything.PlantEverything+ZNetSceneAwake::Postfix(ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :   BepInEx] Loading [ZZ_Balrond_LightController 1.0.1]
[Info   :  HarmonyX] ### Harmony id=balrond.astafaraios.LightController, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void LightController.Launch::.ctor(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\LightController.dll
### At 2022-11-05 04.23.26
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 10 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
10 prefixes:
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void BalrondTrough.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondBarrell.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondHearths.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondMetalLocker.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondOreBasket.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShelf.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShipyard.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondWoodshed.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void LightController.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
1 postfixes:
* static void Advize_PlantEverything.PlantEverything+ZNetSceneAwake::Postfix(ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Fireplace::IsBurning() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool LightController.Launch+Fireplace_IsBurning_Path::Prefix(Fireplace __instance, bool __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool Fireplace::IsBurning()
[Info   :  HarmonyX] Writing prefixes
[Info   :   BepInEx] Loading [FarmGrid 0.2.0]
[Info   :  HarmonyX] ### Harmony id=Harmony.Sarcen.FarmGrid, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void FarmGrid.FarmGrid::Awake(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\FarmGrid.dll
### At 2022-11-05 04.23.27
[Info   :  HarmonyX] Patching void Player::UpdatePlacementGhost(bool flashGuardStone) with 0 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
2 postfixes:
* static void BuildRestrictionTweaks.BepInExPlugin+Player_UpdatePlacementGhost_Patch::Postfix(Player __instance, UnityEngine.GameObject ___m_placementGhost)
* static void CraftFromContainers.BepInExPlugin+UpdatePlacementGhost_Patch::Postfix(Player __instance, bool flashGuardStone)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> FarmGrid.Patches.FarmGrid_Patch::UpdatePlacementGhost(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::UpdatePlacementGhost(bool flashGuardStone)
[Info   :  HarmonyX] Transpiling void Player::UpdatePlacementGhost(bool flashGuardStone)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> FarmGrid.Patches.FarmGrid_Patch::UpdatePlacementGhost(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Player::PlacePiece(Piece piece) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool FarmGrid.Patches.FarmGrid_Patch::PlacePiece(Player& __instance, Boolean& __result, Piece piece)

[Info   :  HarmonyX] Running ILHook manipulator on bool Player::PlacePiece(Piece piece)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching virtual void Humanoid::SetupVisEquipment(VisEquipment visEq, bool isRagdoll) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void FarmGrid.Patches.FarmGrid_Patch::SetupVisEquipment(Humanoid& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Humanoid::SetupVisEquipment(VisEquipment visEq, bool isRagdoll)
[Info   :  HarmonyX] Writing postfixes
[Info   :   BepInEx] Loading [Fog Of War Explore Radius 0.7.3]
[Info   :  HarmonyX] Created Harmony instance id=harmony-auto-006cc2f8-4b82-4e95-8634-29405d0f1841, version=2.0.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony20.dll - Started from System.Void HarmonyLib.Tools.Logger::Log(HarmonyLib.Tools.Logger+LogChannel,System.Func`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]],System.Boolean) location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll
[Info   :  HarmonyX] Patching harmony-auto-006cc2f8-4b82-4e95-8634-29405d0f1841...
[Info   :  HarmonyX] Patching System.Void EnvMan::Awake()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void EnvMan::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void FogOfWarExploreRadius.BepInExPlugin+EnvMan_Awake_Patch::Postfix(EnvMan __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void EnvMan::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching harmony-auto-006cc2f8-4b82-4e95-8634-29405d0f1841 took 14ms
[Info   :  HarmonyX] Patching harmony-auto-006cc2f8-4b82-4e95-8634-29405d0f1841...
[Info   :  HarmonyX] Patching System.Void EnvMan::SetEnv(EnvSetup,System.Single,System.Single,System.Single,System.Single,System.Single)
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void EnvMan::SetEnv(EnvSetup env, float dayInt, float nightInt, float morningInt, float eveningInt, float dt) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void FogOfWarExploreRadius.BepInExPlugin+EnvMan_SetEnv_Patch::Postfix(EnvMan __instance, EnvSetup env, float dayInt, float nightInt, float morningInt, float eveningInt, float dt)

[Info   :  HarmonyX] Running ILHook manipulator on void EnvMan::SetEnv(EnvSetup env, float dayInt, float nightInt, float morningInt, float eveningInt, float dt)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching harmony-auto-006cc2f8-4b82-4e95-8634-29405d0f1841 took 26ms
[Info   :  HarmonyX] Patching harmony-auto-006cc2f8-4b82-4e95-8634-29405d0f1841...
[Info   :  HarmonyX] Patching System.Void Player::OnSkillLevelup(Skills+SkillType,System.Single)
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void Player::OnSkillLevelup(Skills+SkillType skill, float level) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void FogOfWarExploreRadius.BepInExPlugin+PlayerOnSkillLevelup_Patch::Postfix(Skills+SkillType skill, float level)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::OnSkillLevelup(Skills+SkillType skill, float level)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching harmony-auto-006cc2f8-4b82-4e95-8634-29405d0f1841 took 4ms
[Info   :  HarmonyX] Patching harmony-auto-006cc2f8-4b82-4e95-8634-29405d0f1841...
[Info   :  HarmonyX] Patching System.Void Ship::OnTriggerEnter(UnityEngine.Collider)
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void Ship::OnTriggerEnter(UnityEngine.Collider collider) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void FogOfWarExploreRadius.BepInExPlugin+ShipOnTriggerEnter::Postfix(Ship __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Ship::OnTriggerEnter(UnityEngine.Collider collider)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching harmony-auto-006cc2f8-4b82-4e95-8634-29405d0f1841 took 7ms
[Info   :  HarmonyX] Patching harmony-auto-006cc2f8-4b82-4e95-8634-29405d0f1841...
[Info   :  HarmonyX] Patching System.Void Ship::OnTriggerExit(UnityEngine.Collider)
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void Ship::OnTriggerExit(UnityEngine.Collider collider) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void FogOfWarExploreRadius.BepInExPlugin+ShipOnTriggerExit::Postfix(Ship __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Ship::OnTriggerExit(UnityEngine.Collider collider)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching harmony-auto-006cc2f8-4b82-4e95-8634-29405d0f1841 took 5ms
[Info   :  HarmonyX] Patching harmony-auto-006cc2f8-4b82-4e95-8634-29405d0f1841...
[Info   :  HarmonyX] Patching System.Void Skills::Load(ZPackage)
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void Skills::Load(ZPackage pkg) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void FogOfWarExploreRadius.BepInExPlugin+SkillsLoad_Patch::Postfix(Skills __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Skills::Load(ZPackage pkg)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching harmony-auto-006cc2f8-4b82-4e95-8634-29405d0f1841 took 13ms
[Info   :  HarmonyX] Patching harmony-auto-006cc2f8-4b82-4e95-8634-29405d0f1841...
[Info   :  HarmonyX] Patching System.Void Minimap::Explore(UnityEngine.Vector3,System.Single)
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void Minimap::Explore(UnityEngine.Vector3 p, float radius) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool FogOfWarExploreRadius.BepInExPlugin+Minimap_Explore_Patch::Prefix(Minimap __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Minimap::Explore(UnityEngine.Vector3 p, float radius)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching harmony-auto-006cc2f8-4b82-4e95-8634-29405d0f1841 took 10ms
[Info   :  HarmonyX] Patching harmony-auto-006cc2f8-4b82-4e95-8634-29405d0f1841...
[Info   :  HarmonyX] Patching System.Void Minimap::Awake()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching void Minimap::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void FogOfWarExploreRadius.BepInExPlugin+MinimapCtor_Patch::Postfix(Minimap __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Minimap::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching harmony-auto-006cc2f8-4b82-4e95-8634-29405d0f1841 took 7ms
[Info   :  HarmonyX] Patching harmony-auto-006cc2f8-4b82-4e95-8634-29405d0f1841...
[Info   :  HarmonyX] Patching System.Void Terminal::InputText()
[Info   :  HarmonyX] HarmonyPrepare result: True
[Info   :  HarmonyX] Patching virtual void Terminal::InputText() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool CartSupport.BepInExPlugin+InputText_Patch::Prefix(Console __instance)
* static bool MovableInventoryWindows.BepInExPlugin+InputText_Patch::Prefix(Console __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Terminal::InputText()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching virtual void Terminal::InputText() with 4 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static bool CraftFromContainers.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)
* static bool ExtendedPlayerInventory.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)
* static bool HoeRadius.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)
* static bool FogOfWarExploreRadius.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Terminal::InputText()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching harmony-auto-006cc2f8-4b82-4e95-8634-29405d0f1841 took 8ms
[Info   :   BepInEx] Loading [Configuration Manager 16.1]
[Info   :   BepInEx] Loading [Jotunn 2.9.0]
[Info   :  HarmonyX] ### Harmony id=com.jotunn.jotunn, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void Jotunn.Main::Awake(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\Jotunn.dll
### At 2022-11-05 04.23.27
[Info   :  HarmonyX] Patching void ZNet::OnNewConnection(ZNetPeer peer) with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void Jotunn.Utils.ModCompatibility::ZNet_OnNewConnection(ZNet __instance, ZNetPeer peer)
* static void ServerSync.VersionCheck::RegisterAndCheckVersion(ZNetPeer peer, ZNet __instance)
2 postfixes:
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::OnNewConnection(ZNetPeer peer)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::RPC_ClientHandshake(ZRpc rpc, bool needPassword, string serverPasswordSalt) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void Jotunn.Utils.ModCompatibility::ZNet_RPC_ClientHandshake(ZNet __instance, ZRpc rpc)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::RPC_ClientHandshake(ZRpc rpc, bool needPassword, string serverPasswordSalt)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void ZNet::RPC_ServerHandshake(ZRpc rpc) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void Jotunn.Utils.ModCompatibility::ZNet_RPC_ServerHandshake(ZNet __instance, ZRpc rpc)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::RPC_ServerHandshake(ZRpc rpc)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void FejdStartup::ShowConnectError(ZNet+ConnectionStatus statusOverride) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void ServerSync.VersionCheck::ShowConnectionError(FejdStartup __instance)
* static void ServerSync.ConfigSync+ShowConnectionError::Postfix(FejdStartup __instance)
* static void Jotunn.Utils.ModCompatibility::FejdStartup_ShowConnectError(FejdStartup __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::ShowConnectError(ZNet+ConnectionStatus statusOverride)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::SendPeerInfo(ZRpc rpc, string password) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool Jotunn.Utils.ModCompatibility::ZNet_SendPeerInfo(ZNet __instance, ZRpc rpc, string password)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::SendPeerInfo(ZRpc rpc, string password)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg) with 4 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, Advize_PlantEverything, Version=1.11.7.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, CraftyCartsRemake, Version=3.0.7.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static bool Jotunn.Utils.ModCompatibility::ZNet_RPC_PeerInfo(ZNet __instance, ZRpc rpc, ZPackage pkg)
* static bool ServerSync.VersionCheck::RPC_PeerInfo(ZRpc rpc, ZNet __instance)
2 postfixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :    Jotunn] Initializing LocalizationManager
[Info   :  HarmonyX] Patching void FejdStartup::SetupGui() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.LocalizationManager+Patches::LoadAndSetupModLanguages()

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::SetupGui()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching System.Collections.Generic.List<string> Localization::LoadLanguages() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.LocalizationManager+Patches::Localization_LoadLanguages(System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

[Info   :  HarmonyX] Running ILHook manipulator on System.Collections.Generic.List<string> Localization::LoadLanguages()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Localization::SetupLanguage(string language) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.LocalizationManager+Patches::Localization_SetupLanguage(Localization __instance, string language)

[Info   :  HarmonyX] Running ILHook manipulator on bool Localization::SetupLanguage(string language)
[Info   :  HarmonyX] Writing postfixes
[Info   :    Jotunn] Initializing CommandManager
[Info   :  HarmonyX] Patching virtual void Console::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.CommandManager+Patches::AddCustomCommands(Console __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Console::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching System.Collections.Generic.List<string> Terminal+ConsoleCommand::GetTabOptions() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.CommandManager+Patches::ConsoleCommand_GetTabOptions(Terminal+ConsoleCommand __instance, System.Collections.Generic.List`1[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]& __result)

[Info   :  HarmonyX] Running ILHook manipulator on System.Collections.Generic.List<string> Terminal+ConsoleCommand::GetTabOptions()
[Info   :  HarmonyX] Writing postfixes
[Info   :    Jotunn] Initializing InputManager
[Info   :  HarmonyX] Reverse patching static bool Jotunn.Managers.InputManager+Patches::ZInput_GetButtonDown_Original(string name) with static bool ZInput::GetButtonDown(string name)

[Info   :  HarmonyX] Reverse patching static bool Jotunn.Managers.InputManager+Patches::ZInput_GetButton_Original(string name) with static bool ZInput::GetButton(string name)

[Info   :  HarmonyX] Reverse patching static bool Jotunn.Managers.InputManager+Patches::ZInput_GetButtonUp_Original(string name) with static bool ZInput::GetButtonUp(string name)

[Info   :  HarmonyX] Patching void ZInput::Load() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.InputManager+Patches::RegisterCustomInputs(ZInput __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZInput::Load()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching static bool ZInput::GetButtonDown(string name) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.InputManager+Patches::ZInput_GetButtonDown(string name, Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on static bool ZInput::GetButtonDown(string name)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching static bool ZInput::GetButton(string name) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.InputManager+Patches::ZInput_GetButton(string name, Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on static bool ZInput::GetButton(string name)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching static bool ZInput::GetButtonUp(string name) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.InputManager+Patches::ZInput_GetButtonUp(string name, Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on static bool ZInput::GetButtonUp(string name)
[Info   :  HarmonyX] Writing postfixes
[Info   :    Jotunn] Initializing SkillManager
[Info   :  HarmonyX] Patching void Skills::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.SkillManager+Patches::RegisterCustomSkills(Skills __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Skills::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Skills::IsSkillValid(Skills+SkillType type) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.SkillManager+Patches::Skills_IsSkillValid(Skills __instance, Skills+SkillType type, Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool Skills::IsSkillValid(Skills+SkillType type)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching Skills+Skill Skills::GetSkill(Skills+SkillType skillType) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void Jotunn.Managers.SkillManager+Patches::Skills_GetSkill(Skills __instance, Skills+SkillType& skillType)

[Info   :  HarmonyX] Running ILHook manipulator on Skills+Skill Skills::GetSkill(Skills+SkillType skillType)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Skills::CheatRaiseSkill(string name, float value) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void Jotunn.Managers.SkillManager+Patches::Skills_CheatRaiseSkill(Skills __instance, string name, float value)

[Info   :  HarmonyX] Running ILHook manipulator on void Skills::CheatRaiseSkill(string name, float value)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Skills::CheatResetSkill(string name) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void Jotunn.Managers.SkillManager+Patches::Skills_CheatResetSkill(Skills __instance, string name)

[Info   :  HarmonyX] Running ILHook manipulator on void Skills::CheatResetSkill(string name)
[Info   :  HarmonyX] Writing prefixes
[Info   :    Jotunn] Initializing PrefabManager
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 10 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
10 prefixes:
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void BalrondTrough.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondBarrell.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondHearths.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondMetalLocker.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondOreBasket.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShelf.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShipyard.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondWoodshed.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void LightController.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
3 postfixes:
* static void Advize_PlantEverything.PlantEverything+ZNetSceneAwake::Postfix(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::RegisterAllToZNetScene(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::InvokeOnPrefabsRegistered(ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::CopyOtherDB(ObjectDB other) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void Jotunn.Managers.PrefabManager+Patches::InvokeOnVanillaObjectsAvailable(ObjectDB __instance, ObjectDB other)
3 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void BalrondHearths.Launch+Object_CopyOtherDB_Path::Postfix()
* static void BalrondShipyard.Launch+Object_CopyOtherDB_Path::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::CopyOtherDB(ObjectDB other)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :    Jotunn] Initializing ItemManager
[Info   :  HarmonyX] Patching void ObjectDB::CopyOtherDB(ObjectDB other) with 2 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void Jotunn.Managers.PrefabManager+Patches::InvokeOnVanillaObjectsAvailable(ObjectDB __instance, ObjectDB other)
* static void Jotunn.Managers.ItemManager+Patches::RegisterCustomDataFejd(ObjectDB __instance, ObjectDB other)
4 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void BalrondHearths.Launch+Object_CopyOtherDB_Path::Postfix()
* static void BalrondShipyard.Launch+Object_CopyOtherDB_Path::Postfix()
* static void Jotunn.Managers.ItemManager+Patches::InvokeOnItemsRegisteredFejd(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::CopyOtherDB(ObjectDB other)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::Awake() with 1 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void Jotunn.Managers.ItemManager+Patches::RegisterCustomData(ObjectDB __instance)
6 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void PieceManager.BuildPiece::Patch_ObjectDBInit(ObjectDB __instance)
* static void Advize_PlantEverything.PlantEverything+ObjectDBAwake::Postfix(ObjectDB __instance)
* static void BalrondHearths.Launch+Object_Awake_Path::Postfix()
* static void BalrondShipyard.Launch+Object_Awake_Path::Postfix()
* static void Jotunn.Managers.ItemManager+Patches::InvokeOnItemsRegistered(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Player::OnSpawned() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.ItemManager+Patches::ReloadKnownRecipes(Player __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::OnSpawned()
[Info   :  HarmonyX] Writing postfixes
[Info   :    Jotunn] Initializing PieceManager
[Info   :  HarmonyX] Patching void PieceTable::SetCategory(int index) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.PieceManager+Patches::PieceTable_SetCategory(PieceTable __instance, int index)

[Info   :  HarmonyX] Running ILHook manipulator on void PieceTable::SetCategory(int index)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void PieceTable::NextCategory() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void Jotunn.Managers.PieceManager+Patches::PieceTable_NextCategory_Prefix(PieceTable __instance, Piece+PieceCategory& __state)
1 postfixes:
* static void Jotunn.Managers.PieceManager+Patches::PieceTable_NextCategory_Postfix(PieceTable __instance, Piece+PieceCategory& __state)

[Info   :  HarmonyX] Running ILHook manipulator on void PieceTable::NextCategory()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void PieceTable::PrevCategory() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void Jotunn.Managers.PieceManager+Patches::PieceTable_PrevCategory_Prefix(PieceTable __instance, Piece+PieceCategory& __state)
1 postfixes:
* static void Jotunn.Managers.PieceManager+Patches::PieceTable_PrevCategory_Postfix(PieceTable __instance, Piece+PieceCategory& __state)

[Info   :  HarmonyX] Running ILHook manipulator on void PieceTable::PrevCategory()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Hud::OnLeftClickCategory(UIInputHandler ih) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.PieceManager+Patches::Hud_OnLeftClickCategory(Hud __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Hud::OnLeftClickCategory(UIInputHandler ih)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Hud::Awake() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ExtendedPlayerInventory.BepInExPlugin+Hud_Awake_Patch::Postfix(Hud __instance)
* static void Jotunn.Managers.PieceManager+Patches::Hud_Awake()

[Info   :  HarmonyX] Running ILHook manipulator on void Hud::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Hud::UpdateBuild(Player player, bool forceUpdateAllBuildStatuses) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void Jotunn.Managers.PieceManager+Patches::Hud_UpdateBuild()

[Info   :  HarmonyX] Running ILHook manipulator on void Hud::UpdateBuild(Player player, bool forceUpdateAllBuildStatuses)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void ObjectDB::Awake() with 1 prefixes, 8 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void Jotunn.Managers.ItemManager+Patches::RegisterCustomData(ObjectDB __instance)
8 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void PieceManager.BuildPiece::Patch_ObjectDBInit(ObjectDB __instance)
* static void Advize_PlantEverything.PlantEverything+ObjectDBAwake::Postfix(ObjectDB __instance)
* static void BalrondHearths.Launch+Object_Awake_Path::Postfix()
* static void BalrondShipyard.Launch+Object_Awake_Path::Postfix()
* static void Jotunn.Managers.PieceManager+Patches::RegisterCustomData(ObjectDB __instance)
* static void Jotunn.Managers.ItemManager+Patches::InvokeOnItemsRegistered(ObjectDB __instance)
* static void Jotunn.Managers.PieceManager+Patches::InvokeOnPiecesRegistered(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Player::OnSpawned() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void Jotunn.Managers.ItemManager+Patches::ReloadKnownRecipes(Player __instance)
* static void Jotunn.Managers.PieceManager+Patches::ReloadKnownRecipes(Player __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::OnSpawned()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void PieceTable::UpdateAvailable(System.Collections.Generic.HashSet<string> knownRecipies, Player player, bool hideUnavailable, bool noPlacementCost) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.PieceManager+Patches::PieceTable_UpdateAvailable_Postfix(PieceTable __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void PieceTable::UpdateAvailable(System.Collections.Generic.HashSet<string> knownRecipies, Player player, bool hideUnavailable, bool noPlacementCost)
[Info   :  HarmonyX] Writing postfixes
[Info   :    Jotunn] Initializing CreatureManager
[Info   :  HarmonyX] Patching void ObjectDB::CopyOtherDB(ObjectDB other) with 3 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void Jotunn.Managers.CreatureManager+Patches::InvokeOnVanillaCreaturesAvailable()
* static void Jotunn.Managers.PrefabManager+Patches::InvokeOnVanillaObjectsAvailable(ObjectDB __instance, ObjectDB other)
* static void Jotunn.Managers.ItemManager+Patches::RegisterCustomDataFejd(ObjectDB __instance, ObjectDB other)
4 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void BalrondHearths.Launch+Object_CopyOtherDB_Path::Postfix()
* static void BalrondShipyard.Launch+Object_CopyOtherDB_Path::Postfix()
* static void Jotunn.Managers.ItemManager+Patches::InvokeOnItemsRegisteredFejd(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::CopyOtherDB(ObjectDB other)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 10 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
10 prefixes:
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void BalrondTrough.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondBarrell.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondHearths.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondMetalLocker.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondOreBasket.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShelf.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShipyard.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondWoodshed.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void LightController.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
4 postfixes:
* static void Advize_PlantEverything.PlantEverything+ZNetSceneAwake::Postfix(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::RegisterAllToZNetScene(ZNetScene __instance)
* static void Jotunn.Managers.CreatureManager+Patches::FixReferences(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::InvokeOnPrefabsRegistered(ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void SpawnSystem::Awake() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void Jotunn.Managers.CreatureManager+Patches::AddSpawnListToSpawnSystem(SpawnSystem __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void SpawnSystem::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void LevelEffects::SetupLevelVisualization(int level) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.CreatureManager+Patches::EnableCumulativeLevelEffects(LevelEffects __instance, int level)

[Info   :  HarmonyX] Running ILHook manipulator on void LevelEffects::SetupLevelVisualization(int level)
[Info   :  HarmonyX] Writing postfixes
[Info   :    Jotunn] Initializing ZoneManager
[Info   :  HarmonyX] Patching void ZoneSystem::SetupLocations() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.ZoneManager+Patches::ZoneSystem_SetupLocations(ZoneSystem __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZoneSystem::SetupLocations()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ClutterSystem::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.ZoneManager+Patches::ClutterSystem_Awake(ClutterSystem __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ClutterSystem::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :    Jotunn] Initializing MockManager
[Info   :    Jotunn] Initializing KitbashManager
[Info   :    Jotunn] Initializing GUIManager
[Info   :  HarmonyX] Patching virtual bool Player::TakeInput() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.GUIManager+Patches::Player_TakeInput(Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual bool Player::TakeInput()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool PlayerController::TakeInput() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.GUIManager+Patches::PlayerController_TakeInput(Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool PlayerController::TakeInput()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching static bool Menu::IsVisible() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.GUIManager+Patches::Menu_IsVisible(Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on static bool Menu::IsVisible()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching static bool TextInput::IsVisible() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.GUIManager+Patches::TextInput_IsVisible(Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on static bool TextInput::IsVisible()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void FejdStartup::SetupGui() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void Jotunn.Managers.LocalizationManager+Patches::LoadAndSetupModLanguages()
* static void Jotunn.Managers.GUIManager+Patches::FejdStartup_SetupGui(FejdStartup __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::SetupGui()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Game::Start() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.GUIManager+Patches::Game_Start(Game __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Game::Start()
[Info   :  HarmonyX] Writing postfixes
[Info   :    Jotunn] Initializing KeyHintManager
[Info   :  HarmonyX] Patching void KeyHints::Start() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.KeyHintManager+Patches::KeyHints_Start(KeyHints __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void KeyHints::Start()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void KeyHints::UpdateHints() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool Jotunn.Managers.KeyHintManager+Patches::KeyHints_UpdateHints(KeyHints __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void KeyHints::UpdateHints()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void ZInput::Save() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.KeyHintManager+Patches::ZInput_Save(ZInput __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZInput::Save()
[Info   :  HarmonyX] Writing postfixes
[Info   :    Jotunn] Initializing NetworkManager
[Info   :  HarmonyX] Patching void Game::Start() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void Jotunn.Managers.GUIManager+Patches::Game_Start(Game __instance)
* static void Jotunn.Managers.NetworkManager+Patches::Game_Start()

[Info   :  HarmonyX] Running ILHook manipulator on void Game::Start()
[Info   :  HarmonyX] Writing postfixes
[Info   :    Jotunn] Initializing SynchronizationManager
[Info   :  HarmonyX] Patching void ZNet::Awake() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void ServerSync.ConfigSync+RegisterRPCPatch::Postfix(ZNet __instance)
* static void ServerSync.ConfigSync+RegisterRPCPatch::Postfix(ZNet __instance)
* static void Jotunn.Managers.SynchronizationManager+Patches::ZNet_Awake(ZNet __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg) with 5 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
5 prefixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, Advize_PlantEverything, Version=1.11.7.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, CraftyCartsRemake, Version=3.0.7.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static bool Jotunn.Utils.ModCompatibility::ZNet_RPC_PeerInfo(ZNet __instance, ZRpc rpc, ZPackage pkg)
* static bool ServerSync.VersionCheck::RPC_PeerInfo(ZRpc rpc, ZNet __instance)
* static void Jotunn.Managers.SynchronizationManager+Patches::ZNet_RPC_Pre_PeerInfo(ZNet __instance, ZRpc rpc, Jotunn.Managers.SynchronizationManager+PeerInfoBlockingSocket& __state)
3 postfixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)
* static void Jotunn.Managers.SynchronizationManager+Patches::ZNet_RPC_Post_PeerInfo(ZNet __instance, ZRpc rpc, Jotunn.Managers.SynchronizationManager+PeerInfoBlockingSocket& __state)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void SyncedList::Load() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.SynchronizationManager+Patches::SyncedList_Load(SyncedList __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void SyncedList::Load()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void SyncedList::Save() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.SynchronizationManager+Patches::SyncedList_Save(SyncedList __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void SyncedList::Save()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching static bool Menu::IsVisible() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void Jotunn.Managers.GUIManager+Patches::Menu_IsVisible(Boolean& __result)
* static void Jotunn.Managers.SynchronizationManager+Patches::Menu_IsVisible(Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on static bool Menu::IsVisible()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void FejdStartup::Awake() with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void PieceManager.BuildPiece::Patch_FejdStartup()
* static void Jotunn.Managers.SynchronizationManager+Patches::FejdStartup_Awake(FejdStartup __instance)
1 postfixes:
* static void CraftFromContainers.BepInExPlugin+FejdStartup_Awake_Patch::Postfix(FejdStartup __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Debug  :Jotunn.Managers.SynchronizationManager] Configuration manager found, trying to hook DisplayingWindowChanged
[Info   :    Jotunn] Initializing RenderManager
[Info   :    Jotunn] Initializing MinimapManager
[Info   :  HarmonyX] Patching void Minimap::Start() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.MinimapManager+Patches::Start()

[Info   :  HarmonyX] Running ILHook manipulator on void Minimap::Start()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Minimap::LoadMapData() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.MinimapManager+Patches::LoadMapData()

[Info   :  HarmonyX] Running ILHook manipulator on void Minimap::LoadMapData()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Minimap::CenterMap(UnityEngine.Vector3 centerPoint) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.MinimapManager+Patches::Minimap_CenterMap(Minimap __instance, UnityEngine.Vector3 centerPoint)

[Info   :  HarmonyX] Running ILHook manipulator on void Minimap::CenterMap(UnityEngine.Vector3 centerPoint)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Minimap::OnDestroy() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.MinimapManager+Patches::Minimap_OnDestroy()

[Info   :  HarmonyX] Running ILHook manipulator on void Minimap::OnDestroy()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void UnityEngine.Texture2D::Apply(bool updateMipmaps, bool makeNoLongerReadable) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void Jotunn.Managers.MinimapManager::Texture2D_Apply(UnityEngine.Texture2D __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void UnityEngine.Texture2D::Apply(bool updateMipmaps, bool makeNoLongerReadable)
[Info   :  HarmonyX] Writing prefixes
[Info   :    Jotunn] Initializing UndoManager
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 11 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
11 prefixes:
* static void Jotunn.Managers.UndoManager+Patches::ClearUndoQueuesBefore(ZNetScene __instance)
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void BalrondTrough.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondBarrell.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondHearths.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondMetalLocker.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondOreBasket.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShelf.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShipyard.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondWoodshed.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void LightController.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
4 postfixes:
* static void Advize_PlantEverything.PlantEverything+ZNetSceneAwake::Postfix(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::RegisterAllToZNetScene(ZNetScene __instance)
* static void Jotunn.Managers.CreatureManager+Patches::FixReferences(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::InvokeOnPrefabsRegistered(ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNetScene::Shutdown() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.UndoManager+Patches::ClearUndoQueuesAfter(ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Shutdown()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNetScene::OnDestroy() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Utils.ModQuery::ZNetSceneOnDestroy()

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::OnDestroy()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void FejdStartup::Awake() with 2 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void PieceManager.BuildPiece::Patch_FejdStartup()
* static void Jotunn.Managers.SynchronizationManager+Patches::FejdStartup_Awake(FejdStartup __instance)
2 postfixes:
* static void CraftFromContainers.BepInExPlugin+FejdStartup_Awake_Patch::Postfix(FejdStartup __instance)
* static void Jotunn.Utils.ModQuery::FejdStartup_Awake_Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::Awake() with 2 prefixes, 8 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void Jotunn.Utils.ModQuery::ObjectDBAwake(ObjectDB __instance)
* static void Jotunn.Managers.ItemManager+Patches::RegisterCustomData(ObjectDB __instance)
8 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void PieceManager.BuildPiece::Patch_ObjectDBInit(ObjectDB __instance)
* static void Advize_PlantEverything.PlantEverything+ObjectDBAwake::Postfix(ObjectDB __instance)
* static void BalrondHearths.Launch+Object_Awake_Path::Postfix()
* static void BalrondShipyard.Launch+Object_Awake_Path::Postfix()
* static void Jotunn.Managers.PieceManager+Patches::RegisterCustomData(ObjectDB __instance)
* static void Jotunn.Managers.ItemManager+Patches::InvokeOnItemsRegistered(ObjectDB __instance)
* static void Jotunn.Managers.PieceManager+Patches::InvokeOnPiecesRegistered(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :    Jotunn] Jötunn v2.9.0 loaded successfully
[Info   :   BepInEx] Loading [TeleportEverything 1.9.0]
[Info   :  HarmonyX] ### Harmony id=com.kpro.TeleportEverything, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void TeleportEverything.Plugin::.ctor(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\TeleportEverything.dll
### At 2022-11-05 04.23.28
[Info   :  HarmonyX] Patching void Game::_RequestRespawn() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void TeleportEverything.Plugin+_RequestRespawn_Patch::Prefix()
1 postfixes:
* static void TeleportEverything.Plugin+_RequestRespawn_Patch::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void Game::_RequestRespawn()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Inventory::IsTeleportable() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool TeleportEverything.Plugin+InventoryIsTeleportablePatch::Prefix(Boolean& __result, Inventory& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::IsTeleportable()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching virtual bool Teleport::Interact(Humanoid character, bool hold, bool alt) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void TeleportEverything.Plugin+TeleportInteractPatch::Prefix(Humanoid character, bool hold, bool alt, Teleport __instance)
1 postfixes:
* static void TeleportEverything.Plugin+TeleportInteractPatch::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on virtual bool Teleport::Interact(Humanoid character, bool hold, bool alt)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string Teleport::GetHoverText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void TeleportEverything.Plugin+TeleportGetHoverTextPatch::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on virtual string Teleport::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Humanoid::IsTeleportable() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static bool TeleportEverything.Plugin+IsTeleportablePatch::Postfix(bool __result, Humanoid __instance)

[Info   :  HarmonyX] Running ILHook manipulator on bool Humanoid::IsTeleportable()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void TeleportWorld::Teleport(Player player) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void TeleportEverything.Plugin+TeleportWorldTeleport_Patch::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void TeleportWorld::Teleport(Player player)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual bool Player::TeleportTo(UnityEngine.Vector3 pos, UnityEngine.Quaternion rot, bool distantTeleport) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static bool TeleportEverything.Plugin+TeleportToPatch::Postfix(bool __result, Player __instance, UnityEngine.Vector3 pos, UnityEngine.Quaternion rot, bool distantTeleport)

[Info   :  HarmonyX] Running ILHook manipulator on virtual bool Player::TeleportTo(UnityEngine.Vector3 pos, UnityEngine.Quaternion rot, bool distantTeleport)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Tameable::RPC_Command(long sender, ZDOID characterID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void TeleportEverything.Plugin+TameableRPCCommandPatch::Postfix(Tameable __instance, ZDOID characterID)

[Info   :  HarmonyX] Running ILHook manipulator on void Tameable::RPC_Command(long sender, ZDOID characterID)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Player::UpdateTeleport(float dt) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void TeleportEverything.Plugin+UpdateTeleportPatch::Postfix(Player __instance, Boolean& ___m_teleporting, float dt)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::UpdateTeleport(float dt)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void TeleportWorld::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void TeleportEverything.Plugin+TeleportWorldAwakePatch::Postfix(TeleportWorld __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void TeleportWorld::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void TeleportWorld::UpdatePortal() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void TeleportEverything.Plugin+UpdatePortalPatch::Prefix(Single& ___m_activationRange)

[Info   :  HarmonyX] Running ILHook manipulator on void TeleportWorld::UpdatePortal()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void InventoryGrid::UpdateGui(Player player, ItemDrop+ItemData dragItem) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void TeleportEverything.Plugin+UpdateGui_Patch::Postfix(InventoryGrid __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGrid::UpdateGui(Player player, ItemDrop+ItemData dragItem)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching static string ItemDrop+ItemData::GetTooltip(ItemDrop+ItemData item, int qualityLevel, bool crafting) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void TeleportEverything.Plugin+GetTooltip_Patch::Postfix(ItemDrop+ItemData item, int qualityLevel, bool crafting, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on static string ItemDrop+ItemData::GetTooltip(ItemDrop+ItemData item, int qualityLevel, bool crafting)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZRpc::HandlePackage(ZPackage package) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void ServerSync.ConfigSync+SnatchCurrentlyHandlingRPC::Prefix(ZRpc __instance)
* static void ServerSync.ConfigSync+SnatchCurrentlyHandlingRPC::Prefix(ZRpc __instance)
* static void ServerSync.ConfigSync+SnatchCurrentlyHandlingRPC::Prefix(ZRpc __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZRpc::HandlePackage(ZPackage package)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void ZNet::Awake() with 0 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 postfixes:
* static void ServerSync.ConfigSync+RegisterRPCPatch::Postfix(ZNet __instance)
* static void ServerSync.ConfigSync+RegisterRPCPatch::Postfix(ZNet __instance)
* static void Jotunn.Managers.SynchronizationManager+Patches::ZNet_Awake(ZNet __instance)
* static void ServerSync.ConfigSync+RegisterRPCPatch::Postfix(ZNet __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::OnNewConnection(ZNetPeer peer) with 2 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void Jotunn.Utils.ModCompatibility::ZNet_OnNewConnection(ZNet __instance, ZNetPeer peer)
* static void ServerSync.VersionCheck::RegisterAndCheckVersion(ZNetPeer peer, ZNet __instance)
3 postfixes:
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::OnNewConnection(ZNetPeer peer)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::Shutdown() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void ServerSync.ConfigSync+ResetConfigsOnShutdown::Postfix()
* static void ServerSync.ConfigSync+ResetConfigsOnShutdown::Postfix()
* static void ServerSync.ConfigSync+ResetConfigsOnShutdown::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::Shutdown()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg) with 6 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
6 prefixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, Advize_PlantEverything, Version=1.11.7.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, CraftyCartsRemake, Version=3.0.7.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static bool Jotunn.Utils.ModCompatibility::ZNet_RPC_PeerInfo(ZNet __instance, ZRpc rpc, ZPackage pkg)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, TeleportEverything, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static bool ServerSync.VersionCheck::RPC_PeerInfo(ZRpc rpc, ZNet __instance)
* static void Jotunn.Managers.SynchronizationManager+Patches::ZNet_RPC_Pre_PeerInfo(ZNet __instance, ZRpc rpc, Jotunn.Managers.SynchronizationManager+PeerInfoBlockingSocket& __state)
4 postfixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)
* static void Jotunn.Managers.SynchronizationManager+Patches::ZNet_RPC_Post_PeerInfo(ZNet __instance, ZRpc rpc, Jotunn.Managers.SynchronizationManager+PeerInfoBlockingSocket& __state)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching string BepInEx.Configuration.ConfigEntryBase::GetSerializedValue() with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool ServerSync.ConfigSync+PreventSavingServerInfo::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, String& __result)
* static bool ServerSync.ConfigSync+PreventSavingServerInfo::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, String& __result)
* static bool ServerSync.ConfigSync+PreventSavingServerInfo::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on string BepInEx.Configuration.ConfigEntryBase::GetSerializedValue()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void BepInEx.Configuration.ConfigEntryBase::SetSerializedValue(string value) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool ServerSync.ConfigSync+PreventConfigRereadChangingValues::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, string value)
* static bool ServerSync.ConfigSync+PreventConfigRereadChangingValues::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, string value)
* static bool ServerSync.ConfigSync+PreventConfigRereadChangingValues::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, string value)

[Info   :  HarmonyX] Running ILHook manipulator on void BepInEx.Configuration.ConfigEntryBase::SetSerializedValue(string value)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg) with 7 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
7 prefixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, Advize_PlantEverything, Version=1.11.7.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, CraftyCartsRemake, Version=3.0.7.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static bool Jotunn.Utils.ModCompatibility::ZNet_RPC_PeerInfo(ZNet __instance, ZRpc rpc, ZPackage pkg)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, TeleportEverything, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static bool ServerSync.VersionCheck::RPC_PeerInfo(ZRpc rpc, ZNet __instance)
* static void Jotunn.Managers.SynchronizationManager+Patches::ZNet_RPC_Pre_PeerInfo(ZNet __instance, ZRpc rpc, Jotunn.Managers.SynchronizationManager+PeerInfoBlockingSocket& __state)
* static bool ServerSync.VersionCheck::RPC_PeerInfo(ZRpc rpc, ZNet __instance)
4 postfixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)
* static void Jotunn.Managers.SynchronizationManager+Patches::ZNet_RPC_Post_PeerInfo(ZNet __instance, ZRpc rpc, Jotunn.Managers.SynchronizationManager+PeerInfoBlockingSocket& __state)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::OnNewConnection(ZNetPeer peer) with 3 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void Jotunn.Utils.ModCompatibility::ZNet_OnNewConnection(ZNet __instance, ZNetPeer peer)
* static void ServerSync.VersionCheck::RegisterAndCheckVersion(ZNetPeer peer, ZNet __instance)
* static void ServerSync.VersionCheck::RegisterAndCheckVersion(ZNetPeer peer, ZNet __instance)
3 postfixes:
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::OnNewConnection(ZNetPeer peer)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::Disconnect(ZNetPeer peer) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void ServerSync.VersionCheck::RemoveDisconnected(ZNetPeer peer, ZNet __instance)
* static void ServerSync.VersionCheck::RemoveDisconnected(ZNetPeer peer, ZNet __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::Disconnect(ZNetPeer peer)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void FejdStartup::ShowConnectError(ZNet+ConnectionStatus statusOverride) with 0 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 postfixes:
* static void ServerSync.VersionCheck::ShowConnectionError(FejdStartup __instance)
* static void ServerSync.ConfigSync+ShowConnectionError::Postfix(FejdStartup __instance)
* static void ServerSync.VersionCheck::ShowConnectionError(FejdStartup __instance)
* static void Jotunn.Utils.ModCompatibility::FejdStartup_ShowConnectError(FejdStartup __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::ShowConnectError(ZNet+ConnectionStatus statusOverride)
[Info   :  HarmonyX] Writing postfixes
[Info   :   BepInEx] Loading [Use Equipment in Water 0.2.3]
[Info   :  HarmonyX] ### Harmony id=harmony-auto-fa4ebcba-fd2b-46be-81d0-21ddbf9b2f98, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void Use_Equipment_in_Water.UseEquipmentInWater::Awake(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\UseEquipmentInWater.dll
### At 2022-11-05 04.23.28
[Info   :  HarmonyX] Patching bool Character::IsSwiming() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool Use_Equipment_in_Water.UseEquipmentInWater::patchIsSwim(Boolean& __result, Humanoid __instance, float ___m_swimTimer)

[Info   :  HarmonyX] Running ILHook manipulator on bool Character::IsSwiming()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching bool Humanoid::EquipItem(ItemDrop+ItemData item, bool triggerEquipEffects) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void Use_Equipment_in_Water.UseEquipmentInWater::patchEquipItem()

[Info   :  HarmonyX] Running ILHook manipulator on bool Humanoid::EquipItem(ItemDrop+ItemData item, bool triggerEquipEffects)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Humanoid::UpdateEquipment(float dt) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void Use_Equipment_in_Water.UseEquipmentInWater::patchUpdateEquipment()

[Info   :  HarmonyX] Running ILHook manipulator on void Humanoid::UpdateEquipment(float dt)
[Info   :  HarmonyX] Writing prefixes
[Info   :   BepInEx] Loading [Clutter 0.1.2]
[Info   :   BepInEx] Loading [AnyPortal 2.0.0]
[Info   :  HarmonyX] ### Harmony id=org.spub.plugins.anyportal.harmony, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void AnyPortal.AnyPortal::Awake(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\AnyPortal.dll
### At 2022-11-05 04.23.36
[Info   :  HarmonyX] Patching void Game::Start() with 0 prefixes, 2 postfixes, 1 transpilers, 0 finalizers
2 postfixes:
* static void Jotunn.Managers.GUIManager+Patches::Game_Start(Game __instance)
* static void Jotunn.Managers.NetworkManager+Patches::Game_Start()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> AnyPortal.AnyPortal+GameStartPatch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void Game::Start()
[Info   :  HarmonyX] Transpiling void Game::Start()
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> AnyPortal.AnyPortal+GameStartPatch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching System.Collections.IEnumerator Game::ConnectPortals() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void AnyPortal.AnyPortal+GameConnectPortalsPatch::Postfix(Game __instance)

[Info   :  HarmonyX] Running ILHook manipulator on System.Collections.IEnumerator Game::ConnectPortals()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZDOMan::CreateSyncList(ZDOMan+ZDOPeer peer, System.Collections.Generic.List<ZDO> toSync) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void AnyPortal.AnyPortal+ZDOmanCreateSyncListPatch::Postfix(System.Collections.Generic.List<ZDO> toSync)

[Info   :  HarmonyX] Running ILHook manipulator on void ZDOMan::CreateSyncList(ZDOMan+ZDOPeer peer, System.Collections.Generic.List<ZDO> toSync)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual bool TeleportWorld::Interact(Humanoid human, bool hold, bool alt) with 0 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 postfixes:
* static void AnyPortal.AnyPortal+PortalInteractPatch::Postfix(TeleportWorld __instance, ZNetView& ___m_nview, Boolean& __result)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> AnyPortal.AnyPortal+PortalInteractPatch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on virtual bool TeleportWorld::Interact(Humanoid human, bool hold, bool alt)
[Info   :  HarmonyX] Transpiling virtual bool TeleportWorld::Interact(Humanoid human, bool hold, bool alt)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> AnyPortal.AnyPortal+PortalInteractPatch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string TeleportWorld::GetHoverText() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool AnyPortal.AnyPortal+TeleportWorldGetHoverTextPatch::Prefix(TeleportWorld __instance, ZNetView& ___m_nview, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string TeleportWorld::GetHoverText()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void TextInput::Show(string topic, string text, int charLimit) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void AnyPortal.AnyPortal+TextInputShowPatch::Postfix(TextInput& __instance, string topic)

[Info   :  HarmonyX] Running ILHook manipulator on void TextInput::Show(string topic, string text, int charLimit)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching static bool InventoryGui::IsVisible() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void AnyPortal.AnyPortal+InventoryGuiIsVisiblePatch::Postfix(Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on static bool InventoryGui::IsVisible()
[Info   :  HarmonyX] Writing postfixes
[Info   :   BepInEx] Loading [ESP 1.12]
[Info   :  HarmonyX] ### Harmony id=esp, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void ESP.ESP::Awake(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\ESP.dll
### At 2022-11-05 04.23.37
[Info   :  HarmonyX] Patching void Player::UpdateHover() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Visualization.Player_AddHoverForVisuals::Postfix(UnityEngine.GameObject& ___m_hovering, UnityEngine.GameObject& ___m_hoveringCreature)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::UpdateHover()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::RPC_RemotePrint(ZRpc rpc, string text) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool Service.ZNet_RPC_RemotePrint::Prefix(string text)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::RPC_RemotePrint(ZRpc rpc, string text)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Game::UpdateRespawn(float dt) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void Service.CheckAdmin::Prefix(bool ___m_firstSpawn, Boolean& __state)
1 postfixes:
* static void Service.CheckAdmin::Postfix(bool ___m_firstSpawn, bool __state)

[Info   :  HarmonyX] Running ILHook manipulator on void Game::UpdateRespawn(float dt)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void MessageHud::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Service.MessageHud_UpdateMessage::Postfix(MessageHud __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void MessageHud::Update()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void MessageHud::UpdateMessage(float dt) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void Service.MessageHud_GetBaseMessage::Prefix(String& __state)
1 postfixes:
* static void Service.MessageHud_GetBaseMessage::Postfix(MessageHud __instance, float ___m_msgQueueTimer, string __state)

[Info   :  HarmonyX] Running ILHook manipulator on void MessageHud::UpdateMessage(float dt)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string HoverText::GetHoverText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.HoverText_GetHoverText::Postfix(HoverText __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string HoverText::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void SpawnArea::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.SpawnArea_Awake_AddHover::Postfix(SpawnArea __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void SpawnArea::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Destructible::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.Destructible_Awake_AddHover::Postfix(Destructible __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Destructible::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void WearNTear::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.WearNTear_Awake_AddHover::Postfix(WearNTear __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void WearNTear::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string Beehive::GetHoverText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.Beehive_GetHoverText::Postfix(Beehive __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string Beehive::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string ItemDrop::GetHoverText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.ItemDrop_GetHoverText::Postfix(Beehive __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string ItemDrop::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string OfferingBowl::GetHoverText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.OfferingBowl_GetHoverText::Postfix(OfferingBowl __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string OfferingBowl::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string Chair::GetHoverText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.Chair_GetHoverText::Postfix(Chair __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string Chair::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string Container::GetHoverText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.Container_GetHoverText::Postfix(Container __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string Container::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string CookingStation::GetHoverText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.CookingStation_GetHoverText::Postfix(CookingStation __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string CookingStation::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string CraftingStation::GetHoverText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.CraftingStation_GetHoverText::Postfix(CraftingStation __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string CraftingStation::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string Bed::GetHoverText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.Bed_GetHoverText::Postfix(Bed __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string Bed::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string Door::GetHoverText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.Door_GetHoverText::Postfix(Door __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string Door::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string Fermenter::GetHoverText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.Fermenter_GetHoverText::Postfix(Fermenter __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string Fermenter::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string Fireplace::GetHoverText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.Fireplace_GetHoverText::Postfix(Fireplace __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string Fireplace::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string MineRock::GetHoverText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.MineRock_GetHoverText::Postfix(MineRock __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string MineRock::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string MineRock5::GetHoverText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.MineRock5_GetHoverText::Postfix(MineRock5 __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string MineRock5::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string Pickable::GetHoverText() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void Advize_PlantEverything.PlantEverything+PickableGetHoverText::Postfix(Pickable __instance, bool ___m_picked, ZNetView ___m_nview, int ___m_respawnTimeMinutes, String& __result)
* static void ESP.Pickable_GetHoverText::Postfix(Pickable __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string Pickable::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string Plant::GetHoverText() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void Advize_PlantEverything.PlantEverything+PlantGetHoverText::Postfix(Plant __instance, ZNetView ___m_nview, int ___m_status, String& __result)
* static void ESP.Plant_GetHoverText::Postfix(Plant __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string Plant::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string PrivateArea::GetHoverText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.PrivateArea_GetHoverText::Postfix(PrivateArea __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string PrivateArea::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string Sign::GetHoverText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.Sign_GetHoverText::Postfix(Sign __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string Sign::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string ItemStand::GetHoverText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.ItemStand_GetHoverText::Postfix(ItemStand __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string ItemStand::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string StationExtension::GetHoverText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.StationExtension_GetHoverText::Postfix(StationExtension __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string StationExtension::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string Vagon::GetHoverText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.Vagon_GetHoverText::Postfix(Vagon __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string Vagon::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string TeleportWorld::GetHoverText() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool AnyPortal.AnyPortal+TeleportWorldGetHoverTextPatch::Prefix(TeleportWorld __instance, ZNetView& ___m_nview, String& __result)
1 postfixes:
* static void ESP.TeleportWorld_GetHoverText::Postfix(TeleportWorld __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string TeleportWorld::GetHoverText()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Smelter::UpdateHoverTexts() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CraftFromContainers.BepInExPlugin+Smelter_UpdateHoverTexts_Patch::Postfix(Smelter __instance)
* static void ESP.HoverTextUtils::Postfix(Smelter __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Smelter::UpdateHoverTexts()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNetView::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.BoundsCache::Postfix(ZNetView __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetView::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching string HitData+DamageTypes::GetTooltipString(Skills+SkillType skillType) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.DamageTypes_GetTooltipStringWithSkill::Postfix(Skills+SkillType skillType, HitData+DamageTypes __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on string HitData+DamageTypes::GetTooltipString(Skills+SkillType skillType)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching string HitData+DamageTypes::GetTooltipString() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.DamageTypes_GetTooltipString::Postfix(HitData+DamageTypes __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on string HitData+DamageTypes::GetTooltipString()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching static string ItemDrop+ItemData::GetTooltip(ItemDrop+ItemData item, int qualityLevel, bool crafting) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void TeleportEverything.Plugin+GetTooltip_Patch::Postfix(ItemDrop+ItemData item, int qualityLevel, bool crafting, String& __result)
* static void ESP.ItemDropItemData_GetTooltip::Postfix(ItemDrop+ItemData item, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on static string ItemDrop+ItemData::GetTooltip(ItemDrop+ItemData item, int qualityLevel, bool crafting)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual void Character::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.Character_Awake::Postfix(Character __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Character::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Character::UpdateNoise(float dt) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.Character_UpdateNoise::Postfix(Character __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Character::UpdateNoise(float dt)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string Character::GetHoverText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.Character_GetHoverText::Postfix(Character __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string Character::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool BaseAI::FindPath(UnityEngine.Vector3 target) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ESP.BaseAI_Pathfinding::Prefix(Single& __state, float ___m_lastFindPathTime)
1 postfixes:
* static void ESP.BaseAI_Pathfinding::Postfix(BaseAI __instance, float __state, float ___m_lastFindPathTime, bool __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool BaseAI::FindPath(UnityEngine.Vector3 target)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual void BaseAI::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.BaseAI_Awake::Postfix(BaseAI __instance, Character ___m_character)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void BaseAI::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual void BaseAI::Awake() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ESP.BaseAI_Awake::Postfix(BaseAI __instance, Character ___m_character)
* static void ESP.BaseAI_Ray::Postfix(Character ___m_character)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void BaseAI::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Pickable::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.Pickable_Ray::Postfix(Pickable __instance, ZNetView ___m_nview)

[Info   :  HarmonyX] Running ILHook manipulator on void Pickable::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Location::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.Location_Ray::Postfix(Location __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Location::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Container::Awake() with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BalrondShipyard.Launch+Container_Awake_Path::Prefix(Container __instance)
3 postfixes:
* static void CraftFromContainers.BepInExPlugin+Container_Awake_Patch::Postfix(Container __instance, ZNetView ___m_nview)
* static void CraftyCartsRemake.CCR+Container_Awake_Patch::Postfix(Container __instance, Inventory& ___m_inventory)
* static void ESP.Container_Ray::Postfix(Container __instance, Piece ___m_piece)

[Info   :  HarmonyX] Running ILHook manipulator on void Container::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void MineRock::Start() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.MineRock_Ray::Postfix(MineRock __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void MineRock::Start()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void MineRock5::Start() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.MineRock5_Ray::Postfix(MineRock5 __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void MineRock5::Start()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Destructible::Awake() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ESP.Destructible_Awake_AddHover::Postfix(Destructible __instance)
* static void ESP.Destructible_Ray::Postfix(Destructible __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Destructible::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void TreeBase::Awake() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void Advize_PlantEverything.PlantEverything+TreeBaseAwake::Postfix(TreeBase __instance)
* static void ESP.TreeBase_Ray::Postfix(TreeBase __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void TreeBase::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void RandomSpeak::Start() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.RandomSpeak_Sphere::Postfix(RandomSpeak __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void RandomSpeak::Start()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void TreeLog::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.TreeLog_Ray::Postfix(TreeLog __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void TreeLog::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void CreatureSpawner::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.CreatureSpawner_Ray::Postfix(CreatureSpawner __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void CreatureSpawner::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void OfferingBowl::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.OfferingBowl_Awake::Postfix(OfferingBowl __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void OfferingBowl::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void SpawnArea::Awake() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ESP.SpawnArea_Awake_AddHover::Postfix(SpawnArea __instance)
* static void ESP.SpawnArea_Awake::Postfix(SpawnArea __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void SpawnArea::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void SpawnSystem::Awake() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void Jotunn.Managers.CreatureManager+Patches::AddSpawnListToSpawnSystem(SpawnSystem __instance)
1 postfixes:
* static void ESP.SpawnSystem_Awake::Postfix(SpawnSystem __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void SpawnSystem::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void WearNTear::Awake() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ESP.WearNTear_Awake_AddHover::Postfix(WearNTear __instance)
* static void ESP.WearNTear_AutoHighlight::Postfix(WearNTear __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void WearNTear::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void WearNTear::Highlight() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.WearNTear_Highlight::Postfix(WearNTear __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void WearNTear::Highlight()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void WearNTear::UpdateSupport() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.WearNTear_Update::Postfix(WearNTear __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void WearNTear::UpdateSupport()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void EffectArea::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.EffectArea_Visual::Postfix(EffectArea __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void EffectArea::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void PrivateArea::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.PrivateArea_Visual::Postfix(PrivateArea __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void PrivateArea::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Piece::Awake() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void Advize_PlantEverything.PlantEverything+PieceAwake::Postfix(Piece __instance)
* static void ESP.Piece_Visual::Postfix(Piece __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Piece::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Smoke::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.Smoke_Visual::Postfix(Smoke __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Smoke::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void CraftingStation::Start() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CraftyCartsRemake.CCR+CraftingStation_Start_Patch::Postfix(CraftingStation __instance, System.Collections.Generic.List`1[[CraftingStation, assembly_valheim, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___m_allStations)
* static void ESP.CraftingStation_Updater::Postfix(CraftingStation __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void CraftingStation::Start()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string CraftingStation::GetHoverName() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.CraftingStation_Visual_Update::Postfix(CraftingStation __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string CraftingStation::GetHoverName()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Fermenter::SlowUpdate() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.Fermenter_Visual_Update::Postfix(Fermenter __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Fermenter::SlowUpdate()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Beehive::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.Beehive_Updater::Postfix(Beehive __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Beehive::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string Beehive::GetHoverName() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.Beehive_Visual_Update::Postfix(Beehive __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string Beehive::GetHoverName()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Fireplace::UpdateFireplace() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.Fireplace_Visual_Update::Postfix(Fireplace __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Fireplace::UpdateFireplace()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Bed::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.Bed_Updater::Postfix(Bed __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Bed::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual string Bed::GetHoverName() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.Bed_Visual_Update::Postfix(Bed __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string Bed::GetHoverName()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Windmill::CheckCover() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.Windmill_Visual_Update::Postfix(Windmill __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Windmill::CheckCover()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual void Player::Awake() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ExtendedPlayerInventory.BepInExPlugin+Player_Awake_Patch::Prefix(Player __instance, Inventory ___m_inventory)
1 postfixes:
* static void ESP.Player_Cover::Postfix(Player __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Player::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Player::LateUpdate() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.Player_Cover_Update::Postfix(Player __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::LateUpdate()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual void Character::FixedUpdate() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.Hud+CreatureStagger::Postfix(Character __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Character::FixedUpdate()
[Info   :  HarmonyX] Writing postfixes
[Info   :   BepInEx] Loading [Teleportable Wagon Mod 1.4.0]
[Info   :  HarmonyX] ### Harmony id=flueno.TeleportableWagon, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void TeleportableWagon.Mod::.ctor(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\TeleportableWagon.dll
### At 2022-11-05 04.23.38
[Info   :   BepInEx] Loading [FastTeleport 1.0.0]
[Info   :  HarmonyX] ### Harmony id=GemHunter1.FastTeleport, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void ValheimFastTeleport.FastTeleportMod::.ctor(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\ValheimFastTeleport.dll
### At 2022-11-05 04.23.38
[Info   :  HarmonyX] Patching virtual bool Player::TeleportTo(UnityEngine.Vector3 pos, UnityEngine.Quaternion rot, bool distantTeleport) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static bool TeleportEverything.Plugin+TeleportToPatch::Postfix(bool __result, Player __instance, UnityEngine.Vector3 pos, UnityEngine.Quaternion rot, bool distantTeleport)
* static void ValheimFastTeleport.FastTeleportMod+PlayerTeleportTo::Postfix(Single& ___m_teleportTimer, Boolean& ___m_distantTeleport)

[Info   :  HarmonyX] Running ILHook manipulator on virtual bool Player::TeleportTo(UnityEngine.Vector3 pos, UnityEngine.Quaternion rot, bool distantTeleport)
[Info   :  HarmonyX] Writing postfixes
[Info   :   BepInEx] Loading [RuneMagic 1.1.13]
[Info   :  HarmonyX] ### Harmony id=hyleanlegend.RuneMagic, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void ValheimMod.ValheimMod::.ctor(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\RuneMagic.dll
### At 2022-11-05 04.23.38
[Info   :  HarmonyX] Patching void ZoneSystem::Start() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimMod.ZoneSystem_Start_Patch::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void ZoneSystem::Start()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 12 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
12 prefixes:
* static void Jotunn.Managers.UndoManager+Patches::ClearUndoQueuesBefore(ZNetScene __instance)
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void BalrondTrough.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondBarrell.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondHearths.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondMetalLocker.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondOreBasket.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShelf.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShipyard.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondWoodshed.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void LightController.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static bool ValheimMod.ZNetScene_Awake_Patch::Prefix(ZNetScene __instance)
4 postfixes:
* static void Advize_PlantEverything.PlantEverything+ZNetSceneAwake::Postfix(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::RegisterAllToZNetScene(ZNetScene __instance)
* static void Jotunn.Managers.CreatureManager+Patches::FixReferences(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::InvokeOnPrefabsRegistered(ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::CopyOtherDB(ObjectDB other) with 3 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void Jotunn.Managers.CreatureManager+Patches::InvokeOnVanillaCreaturesAvailable()
* static void Jotunn.Managers.PrefabManager+Patches::InvokeOnVanillaObjectsAvailable(ObjectDB __instance, ObjectDB other)
* static void Jotunn.Managers.ItemManager+Patches::RegisterCustomDataFejd(ObjectDB __instance, ObjectDB other)
5 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void BalrondHearths.Launch+Object_CopyOtherDB_Path::Postfix()
* static void BalrondShipyard.Launch+Object_CopyOtherDB_Path::Postfix()
* static void ValheimMod.ObjectDB_CopyOtherDB_Patch::Postfix()
* static void Jotunn.Managers.ItemManager+Patches::InvokeOnItemsRegisteredFejd(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::CopyOtherDB(ObjectDB other)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::Awake() with 2 prefixes, 9 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void Jotunn.Utils.ModQuery::ObjectDBAwake(ObjectDB __instance)
* static void Jotunn.Managers.ItemManager+Patches::RegisterCustomData(ObjectDB __instance)
9 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void PieceManager.BuildPiece::Patch_ObjectDBInit(ObjectDB __instance)
* static void ValheimMod.ObjectDB_Awake_Patch::Postfix()
* static void Advize_PlantEverything.PlantEverything+ObjectDBAwake::Postfix(ObjectDB __instance)
* static void BalrondHearths.Launch+Object_Awake_Path::Postfix()
* static void BalrondShipyard.Launch+Object_Awake_Path::Postfix()
* static void Jotunn.Managers.PieceManager+Patches::RegisterCustomData(ObjectDB __instance)
* static void Jotunn.Managers.ItemManager+Patches::InvokeOnItemsRegistered(ObjectDB __instance)
* static void Jotunn.Managers.PieceManager+Patches::InvokeOnPiecesRegistered(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Player::UpdatePlacementGhost(bool flashGuardStone) with 1 prefixes, 2 postfixes, 1 transpilers, 1 finalizers
1 prefixes:
* static void ValheimMod.PlayerPatch+UpdatePlacementGhost_Patch::Prefix(Player __instance)
2 postfixes:
* static void BuildRestrictionTweaks.BepInExPlugin+Player_UpdatePlacementGhost_Patch::Postfix(Player __instance, UnityEngine.GameObject ___m_placementGhost)
* static void CraftFromContainers.BepInExPlugin+UpdatePlacementGhost_Patch::Postfix(Player __instance, bool flashGuardStone)
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> FarmGrid.Patches.FarmGrid_Patch::UpdatePlacementGhost(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
1 finalizers:
* static Exception ValheimMod.PlayerPatch+UpdatePlacementGhost_Patch::Finalizer(Player __instance, UnityEngine.GameObject ___m_placementGhost, int ___m_placeRotation, int ___m_placementStatus)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::UpdatePlacementGhost(bool flashGuardStone)
[Info   :  HarmonyX] Transpiling void Player::UpdatePlacementGhost(bool flashGuardStone)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> FarmGrid.Patches.FarmGrid_Patch::UpdatePlacementGhost(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Writing finalizers
[Info   :  HarmonyX] Patching bool Player::CheckPlacementGhostVSPlayers() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static bool ValheimMod.PlayerPatch+CheckPlacementGhostVSPlayers_Patch::Postfix(bool __result, Player __instance, UnityEngine.GameObject ___m_placementGhost)

[Info   :  HarmonyX] Running ILHook manipulator on bool Player::CheckPlacementGhostVSPlayers()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Player::ConsumeResources(Piece+Requirement[] requirements, int qualityLevel) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CraftFromContainers.BepInExPlugin+ConsumeResources_Patch::Prefix(Player __instance, Piece+Requirement[] requirements, int qualityLevel)
1 postfixes:
* static void ValheimMod.PlayerPatch+ConsumeResources_Patch::Postfix(Player __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::ConsumeResources(Piece+Requirement[] requirements, int qualityLevel)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Player::SetupPlacementGhost() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimMod.PlayerPatch+SetupPlacementGhost_Patch::Prefix()
1 postfixes:
* static void ValheimMod.PlayerPatch+SetupPlacementGhost_Patch::Postfix(Player __instance, UnityEngine.GameObject ___m_placementGhost)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::SetupPlacementGhost()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Player::HaveRequirements(Piece piece, Player+RequirementMode mode) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CraftFromContainers.BepInExPlugin+HaveRequirements_Patch2::Postfix(Player __instance, Boolean& __result, Piece piece, Player+RequirementMode mode, System.Collections.Generic.HashSet<string> ___m_knownMaterial, System.Collections.Generic.Dictionary<string, int> ___m_knownStations)
* static bool ValheimMod.PlayerPatch+HaveRequirements_Patch::Postfix(bool __result, Player __instance, System.Collections.Generic.HashSet<string> ___m_knownRecipes, Piece piece, Player+RequirementMode mode)

[Info   :  HarmonyX] Running ILHook manipulator on bool Player::HaveRequirements(Piece piece, Player+RequirementMode mode)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Player::UpdateAvailablePiecesList() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimMod.PlayerPatch+UpdateAvailablePiecesList_Patch::Prefix(Player __instance, System.Collections.Generic.HashSet<string> ___m_knownRecipes, PieceTable ___m_buildPieces)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::UpdateAvailablePiecesList()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching virtual void Player::SetPlaceMode(PieceTable buildPieces) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimMod.PlayerPatch+SetPlaceMode_Patch::Postfix(Player __instance, PieceTable buildPieces)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Player::SetPlaceMode(PieceTable buildPieces)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Player::PlacePiece(Piece piece) with 2 prefixes, 1 postfixes, 0 transpilers, 1 finalizers
2 prefixes:
* static bool FarmGrid.Patches.FarmGrid_Patch::PlacePiece(Player& __instance, Boolean& __result, Piece piece)
* static void ValheimMod.PlayerPatch+PlacePiece_Patch::Prefix()
1 postfixes:
* static bool ValheimMod.PlayerPatch+PlacePiece_Patch::Postfix(bool __result, Player __instance, Piece piece)
1 finalizers:
* static Exception ValheimMod.PlayerPatch+PlacePiece_Patch::Finalizer(Exception __exception)

[Info   :  HarmonyX] Running ILHook manipulator on bool Player::PlacePiece(Piece piece)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Writing finalizers
[Info   :  HarmonyX] Patching virtual void Player::FixedUpdate() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimMod.PlayerPatch+FixedUpdate_Patch::Postfix(Player __instance, PieceTable ___m_buildPieces)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Player::FixedUpdate()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Player::OnInventoryChanged() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimMod.PlayerPatch+OnInventoryChanged_Patch::Postfix(Player __instance, bool ___m_isLoading, Inventory ___m_inventory)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::OnInventoryChanged()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual void Player::OnDamaged(HitData hit) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimMod.PlayerPatch+OnDamaged_Patch::Postfix(Player __instance, HitData hit)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Player::OnDamaged(HitData hit)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Player::CheckCanRemovePiece(Piece piece) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static bool ValheimMod.PlayerPatch+CheckCanRemovePiece_Patch::Postfix(bool __result, Player __instance, PieceTable ___m_buildPieces, Piece piece)

[Info   :  HarmonyX] Running ILHook manipulator on bool Player::CheckCanRemovePiece(Piece piece)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void TerrainModifier::Awake() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimMod.TerrainModifierPatch+Awake_Patch::Prefix(TerrainModifier __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void TerrainModifier::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching float TerrainModifier::GetRadius() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static float ValheimMod.TerrainModifierPatch+Get_Radius_Patch::Postfix(float __result, TerrainModifier __instance)

[Info   :  HarmonyX] Running ILHook manipulator on float TerrainModifier::GetRadius()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void TerrainModifier::OnPlaced() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimMod.TerrainModifierPatch+OnPlaced_Patch::Postfix(TerrainModifier __instance, ZNetView ___m_nview)

[Info   :  HarmonyX] Running ILHook manipulator on void TerrainModifier::OnPlaced()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Player::SetLocalPlayer() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimMod.ValheimMod+SetupDebugState::Postfix(Player __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::SetLocalPlayer()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Player::Update() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ExtendedPlayerInventory.BepInExPlugin+Player_Update_Patch::Postfix(Player __instance, Inventory ___m_inventory)
* static void ValheimMod.ValheimMod+Update_Patch::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void Player::Update()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Character::Jump() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimMod.ValheimMod+Jump_Patch::Prefix(Single& ___m_jumpForce)

[Info   :  HarmonyX] Running ILHook manipulator on void Character::Jump()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void BaseAI::SetTargetInfo(ZDOID targetID) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimMod.Patches.BaseAIPatch+SetTargetInfo_Patch::Postfix(BaseAI __instance, ZNetView ___m_nview, ZDOID targetID)

[Info   :  HarmonyX] Running ILHook manipulator on void BaseAI::SetTargetInfo(ZDOID targetID)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void BaseAI::FixedUpdate() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimMod.Patches.BaseAIPatch+FixedUpdate_Patch::Prefix(BaseAI __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void BaseAI::FixedUpdate()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void FejdStartup::ShowConnectError(ZNet+ConnectionStatus statusOverride) with 0 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
5 postfixes:
* static void ServerSync.VersionCheck::ShowConnectionError(FejdStartup __instance)
* static void ServerSync.ConfigSync+ShowConnectionError::Postfix(FejdStartup __instance)
* static void ServerSync.VersionCheck::ShowConnectionError(FejdStartup __instance)
* static void ValheimMod.Patches.FejdStartupPatch+ShowConnectError_Patch::Postfix(FejdStartup __instance)
* static void Jotunn.Utils.ModCompatibility::FejdStartup_ShowConnectError(FejdStartup __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::ShowConnectError(ZNet+ConnectionStatus statusOverride)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void FejdStartup::SetupGui() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void ValheimMod.Patches.FejdStartupPatch+SetupGui_Patch::Postfix(FejdStartup __instance)
* static void Jotunn.Managers.LocalizationManager+Patches::LoadAndSetupModLanguages()
* static void Jotunn.Managers.GUIManager+Patches::FejdStartup_SetupGui(FejdStartup __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::SetupGui()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching Player Game::SpawnPlayer(UnityEngine.Vector3 spawnPoint) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimMod.Patches.GamePatch+SpawnPlayer_Patch::Postfix(Player __result)

[Info   :  HarmonyX] Running ILHook manipulator on Player Game::SpawnPlayer(UnityEngine.Vector3 spawnPoint)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Game::Shutdown() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimMod.Patches.GamePatch+Shutdown_Patch::Prefix(bool ___m_shuttingDown)

[Info   :  HarmonyX] Running ILHook manipulator on void Game::Shutdown()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching float ItemDrop+ItemData::GetMaxDurability(int quality) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimMod.Patches.ItemDropPatch+GetMaxDurability_Patch::Postfix(ItemDrop+ItemData __instance, Int32& quality, Single& __result)

[Info   :  HarmonyX] Running ILHook manipulator on float ItemDrop+ItemData::GetMaxDurability(int quality)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching static void Terminal::InitTerminal() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimMod.Patches.TerminalPatch+InputText_Patch::Postfix(Terminal __instance)

[Info   :  HarmonyX] Running ILHook manipulator on static void Terminal::InitTerminal()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Terminal::IsCheatsEnabled() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static bool ValheimMod.Patches.TerminalPatch+IsCheatsEnabled_Patch::Postfix(bool __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool Terminal::IsCheatsEnabled()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Terminal+ConsoleCommand::IsValid(Terminal context, bool skipAllowedCheck) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static bool ValheimMod.Patches.TerminalPatch+IsValid_Patch::Postfix(bool __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool Terminal+ConsoleCommand::IsValid(Terminal context, bool skipAllowedCheck)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::Awake() with 0 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
5 postfixes:
* static void ServerSync.ConfigSync+RegisterRPCPatch::Postfix(ZNet __instance)
* static void ServerSync.ConfigSync+RegisterRPCPatch::Postfix(ZNet __instance)
* static void Jotunn.Managers.SynchronizationManager+Patches::ZNet_Awake(ZNet __instance)
* static void ServerSync.ConfigSync+RegisterRPCPatch::Postfix(ZNet __instance)
* static void ValheimMod.Patches.ZNetPatch+Awake_Patch::Postfix(ZNet __instance, World ___m_world)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::OnNewConnection(ZNetPeer peer) with 3 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void Jotunn.Utils.ModCompatibility::ZNet_OnNewConnection(ZNet __instance, ZNetPeer peer)
* static void ServerSync.VersionCheck::RegisterAndCheckVersion(ZNetPeer peer, ZNet __instance)
* static void ServerSync.VersionCheck::RegisterAndCheckVersion(ZNetPeer peer, ZNet __instance)
4 postfixes:
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ValheimMod.Patches.ZNetPatch+OnNewConnection_Patch::Postfix(ZNet __instance, bool ___m_isServer, ZNetPeer peer)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::OnNewConnection(ZNetPeer peer)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg) with 8 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
8 prefixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, Advize_PlantEverything, Version=1.11.7.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, CraftyCartsRemake, Version=3.0.7.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static bool Jotunn.Utils.ModCompatibility::ZNet_RPC_PeerInfo(ZNet __instance, ZRpc rpc, ZPackage pkg)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, TeleportEverything, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static bool ServerSync.VersionCheck::RPC_PeerInfo(ZRpc rpc, ZNet __instance)
* static void Jotunn.Managers.SynchronizationManager+Patches::ZNet_RPC_Pre_PeerInfo(ZNet __instance, ZRpc rpc, Jotunn.Managers.SynchronizationManager+PeerInfoBlockingSocket& __state)
* static bool ServerSync.VersionCheck::RPC_PeerInfo(ZRpc rpc, ZNet __instance)
* static void ValheimMod.Patches.ZNetPatch+RPC_PeerInfo_Patch::Prefix(ZRpc rpc, ZPackage pkg, ZNet& __instance)
5 postfixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)
* static void Jotunn.Managers.SynchronizationManager+Patches::ZNet_RPC_Post_PeerInfo(ZNet __instance, ZRpc rpc, Jotunn.Managers.SynchronizationManager+PeerInfoBlockingSocket& __state)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)
* static void ValheimMod.Patches.ZNetPatch+RPC_PeerInfo_Patch::Postfix(ZNet& __instance, World ___m_world, ZRpc rpc)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::Disconnect(ZNetPeer peer) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void ServerSync.VersionCheck::RemoveDisconnected(ZNetPeer peer, ZNet __instance)
* static void ServerSync.VersionCheck::RemoveDisconnected(ZNetPeer peer, ZNet __instance)
1 postfixes:
* static void ValheimMod.Patches.ZNetPatch+Disconnect_Patch::Postfix(ZNet __instance, bool ___m_isServer, ZNetPeer peer)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::Disconnect(ZNetPeer peer)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching static bool Cover::IsUnderRoof(UnityEngine.Vector3 startPos) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static bool ValheimMod.Patches.CoverPatch+IsUnderRoof_Patch::Postfix(bool __result, UnityEngine.Vector3 startPos)

[Info   :  HarmonyX] Running ILHook manipulator on static bool Cover::IsUnderRoof(UnityEngine.Vector3 startPos)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Hud::SetupPieceInfo(Piece piece) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimMod.Patches.HudPatch+SetupPieceInfo_Patch::Postfix(Hud __instance, Piece piece)

[Info   :  HarmonyX] Running ILHook manipulator on void Hud::SetupPieceInfo(Piece piece)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Piece::SetInvalidPlacementHeightlight(bool enabled) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimMod.Patches.PiecePatch+SetInvalidPlacementHeightlight_Patch::Postfix(Piece __instance, bool enabled)

[Info   :  HarmonyX] Running ILHook manipulator on void Piece::SetInvalidPlacementHeightlight(bool enabled)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void TerrainComp::InternalDoOperation(UnityEngine.Vector3 pos, TerrainOp+Settings modifier) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimMod.Patches.TerrainCompPatch+InternalDoOperation_Patch::Postfix(TerrainComp __instance, UnityEngine.Vector3 pos, TerrainOp+Settings modifier, Heightmap ___m_hmap, int ___m_width, float[] ___m_levelDelta, float[] ___m_smoothDelta, bool[] ___m_modifiedHeight, UnityEngine.Color[] ___m_paintMask, bool[] ___m_modifiedPaint)

[Info   :  HarmonyX] Running ILHook manipulator on void TerrainComp::InternalDoOperation(UnityEngine.Vector3 pos, TerrainOp+Settings modifier)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching float TerrainOp+Settings::GetRadius() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static float ValheimMod.Patches.TerrainOpPatch+GetRadius_Patch::Postfix(float __result, TerrainOp+Settings __instance)

[Info   :  HarmonyX] Running ILHook manipulator on float TerrainOp+Settings::GetRadius()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void TerrainOp::OnPlaced() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimMod.Patches.TerrainOpPatch+OnPlaced_Patch::Postfix(TerrainOp __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void TerrainOp::OnPlaced()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching float WaterVolume::GetWaterSurface(UnityEngine.Vector3 point, float waveFactor) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static float ValheimMod.Patches.WaterVolumePatch+GetWaterSurface_Patch::Postfix(float __result, WaterVolume __instance, UnityEngine.Vector3 point)

[Info   :  HarmonyX] Running ILHook manipulator on float WaterVolume::GetWaterSurface(UnityEngine.Vector3 point, float waveFactor)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void WearNTear::SetupColliders() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimMod.Patches.WearNTearPatch+SetupColliders_Patch::Prefix(WearNTear __instance, ValheimMod.Patches.WearNTearPatch+ParentChild[]& __state)
1 postfixes:
* static void ValheimMod.Patches.WearNTearPatch+SetupColliders_Patch::Postfix(WearNTear __instance, ValheimMod.Patches.WearNTearPatch+ParentChild[] __state)

[Info   :  HarmonyX] Running ILHook manipulator on void WearNTear::SetupColliders()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool WearNTear::HaveRoof() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static bool ValheimMod.Patches.WearNTearPatch+HaveRoof_Patch::Postfix(bool __result, WearNTear __instance)

[Info   :  HarmonyX] Running ILHook manipulator on bool WearNTear::HaveRoof()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void WearNTear::Remove() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimMod.Patches.WearNTearPatch+Remove_Patch::Postfix(WearNTear __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void WearNTear::Remove()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void WearNTear::Destroy() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimMod.Patches.WearNTearPatch+Destroy_Patch::Prefix(WearNTear __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void WearNTear::Destroy()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void ZNetScene::CreateDestroyObjects() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimMod.Patches.ZNetScenePatch+CreateDestroyObjects_Patch::Prefix()
1 postfixes:
* static void ValheimMod.Patches.ZNetScenePatch+CreateDestroyObjects_Patch::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::CreateDestroyObjects()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNetView::Awake() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ESP.BoundsCache::Postfix(ZNetView __instance)
* static void ValheimMod.Patches.ZNetViewPatch+Awake_Patch::Postfix(ZNetView __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetView::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool ZoneSystem::SpawnZone(Vector2i zoneID, ZoneSystem+SpawnMode mode, UnityEngine.GameObject& root) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimMod.Patches.ZoneSystemPatch+SpawnZone_Patch::Prefix()
1 postfixes:
* static void ValheimMod.Patches.ZoneSystemPatch+SpawnZone_Patch::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on bool ZoneSystem::SpawnZone(Vector2i zoneID, ZoneSystem+SpawnMode mode, UnityEngine.GameObject& root)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Humanoid::DrainEquipedItemDurability(ItemDrop+ItemData item, float dt) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimMod.Patches.HumanoidPatch+DrainEquipedItemDurability_Patch::Prefix(Humanoid __instance, ItemDrop+ItemData item, float dt)

[Info   :  HarmonyX] Running ILHook manipulator on void Humanoid::DrainEquipedItemDurability(ItemDrop+ItemData item, float dt)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Humanoid::HideHandItems() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimMod.Patches.HumanoidPatch+HideHandItems_Patch::Prefix(Humanoid __instance, ItemDrop+ItemData ___m_rightItem)

[Info   :  HarmonyX] Running ILHook manipulator on void Humanoid::HideHandItems()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching bool Humanoid::EquipItem(ItemDrop+ItemData item, bool triggerEquipEffects) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void Use_Equipment_in_Water.UseEquipmentInWater::patchEquipItem()
* static void ValheimMod.Patches.HumanoidPatch+EquipItem_Patch::Prefix(Humanoid __instance, Single& ___m_swimTimer, ItemDrop+ItemData item, Single& __state)
1 postfixes:
* static void ValheimMod.Patches.HumanoidPatch+EquipItem_Patch::Postfix(Humanoid __instance, Single& ___m_swimTimer, float __state)

[Info   :  HarmonyX] Running ILHook manipulator on bool Humanoid::EquipItem(ItemDrop+ItemData item, bool triggerEquipEffects)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void InventoryGui::UpdateRecipe(Player player, float dt) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void ValheimMod.Patches.InventoryGuiPatch+UpdateRecipe_Patch::Prefix(InventoryGui __instance, Player player)
1 postfixes:
* static void ValheimMod.Patches.InventoryGuiPatch+UpdateRecipe_Patch::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::UpdateRecipe(Player player, float dt)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void InventoryGui::DoCrafting(Player player) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimMod.Patches.InventoryGuiPatch+DoCrafting_Patch::Prefix(InventoryGui __instance, Player player, ValheimMod.Patches.UpgradeState& __state, ItemDrop+ItemData ___m_craftUpgradeItem)
1 postfixes:
* static void ValheimMod.Patches.InventoryGuiPatch+DoCrafting_Patch::Postfix(InventoryGui __instance, Player player, ValheimMod.Patches.UpgradeState __state, ItemDrop+ItemData ___m_craftUpgradeItem)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::DoCrafting(Player player)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching ItemDrop+ItemData Inventory::AddItem(string name, int stack, int quality, int variant, long crafterID, string crafterName) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static ItemDrop+ItemData ValheimMod.Patches.InventoryPatch+AddItem_Patch::Postfix(ItemDrop+ItemData __result, Inventory __instance)

[Info   :  HarmonyX] Running ILHook manipulator on ItemDrop+ItemData Inventory::AddItem(string name, int stack, int quality, int variant, long crafterID, string crafterName)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual bool RuneStone::UseItem(Humanoid user, ItemDrop+ItemData item) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static bool ValheimMod.Patches.RuneStonePatch+UseItem_Patch::Postfix(bool __result, RuneStone __instance, Humanoid user, ItemDrop+ItemData item)

[Info   :  HarmonyX] Running ILHook manipulator on virtual bool RuneStone::UseItem(Humanoid user, ItemDrop+ItemData item)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Player::SetMouseLook(UnityEngine.Vector2 mouseLook) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimMod.Monobehaviours.MisdirectionRune+SetMouseLook_Patch::Prefix(Player __instance, UnityEngine.Vector2& mouseLook)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::SetMouseLook(UnityEngine.Vector2 mouseLook)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Character::UpdateMotion(float dt) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimMod.Monobehaviours.MisdirectionRune+UpdateMotion_Patch::Postfix(Character __instance, UnityEngine.Vector3 ___m_currentVel, float dt)

[Info   :  HarmonyX] Running ILHook manipulator on void Character::UpdateMotion(float dt)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Minimap::UpdatePlayerMarker(Player player, UnityEngine.Quaternion playerRot) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimMod.Monobehaviours.MisdirectionRune+UpdatePlayerMarker_Patch::Prefix(Minimap __instance, Player player, UnityEngine.Quaternion& playerRot)

[Info   :  HarmonyX] Running ILHook manipulator on void Minimap::UpdatePlayerMarker(Player player, UnityEngine.Quaternion playerRot)
[Info   :  HarmonyX] Writing prefixes
[Info   :   BepInEx] Loading [Extended Item Data Framework 1.0.7]
[Info   :  HarmonyX] ### Harmony id=randyknapp.mods.extendeditemdataframework, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void ExtendedItemDataFramework.ExtendedItemDataFramework::Awake(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\ExtendedItemDataFramework.dll
### At 2022-11-05 04.23.39
[Info   :  HarmonyX] Patching bool Inventory::AddItem(string name, int stack, float durability, Vector2i pos, bool equiped, int quality, int variant, long crafterID, string crafterName) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ExtendedItemDataFramework.Inventory_AddItemFromLoad_Patch::Prefix(Inventory __instance, Boolean& __result, string name, int stack, float durability, Vector2i pos, bool equiped, int quality, int variant, long crafterID, string crafterName)

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::AddItem(string name, int stack, float durability, Vector2i pos, bool equiped, int quality, int variant, long crafterID, string crafterName)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching ItemDrop+ItemData Inventory::AddItem(string name, int stack, int quality, int variant, long crafterID, string crafterName) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ExtendedItemDataFramework.Inventory_AddItemFromCraftingBuying_Patch::Prefix(Inventory __instance, ItemDrop+ItemData& __result, string name, int stack, int quality, int variant, long crafterID, string crafterName)
1 postfixes:
* static ItemDrop+ItemData ValheimMod.Patches.InventoryPatch+AddItem_Patch::Postfix(ItemDrop+ItemData __result, Inventory __instance)

[Info   :  HarmonyX] Running ILHook manipulator on ItemDrop+ItemData Inventory::AddItem(string name, int stack, int quality, int variant, long crafterID, string crafterName)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching static string ItemDrop+ItemData::GetTooltip(ItemDrop+ItemData item, int qualityLevel, bool crafting) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ExtendedItemDataFramework.ItemData_GetTooltip_Patch::Prefix(ItemDrop+ItemData item, int qualityLevel, bool crafting)
3 postfixes:
* static void TeleportEverything.Plugin+GetTooltip_Patch::Postfix(ItemDrop+ItemData item, int qualityLevel, bool crafting, String& __result)
* static void ESP.ItemDropItemData_GetTooltip::Postfix(ItemDrop+ItemData item, String& __result)
* static void ExtendedItemDataFramework.ItemData_GetTooltip_Patch::Postfix(ItemDrop+ItemData item, int qualityLevel, bool crafting)

[Info   :  HarmonyX] Running ILHook manipulator on static string ItemDrop+ItemData::GetTooltip(ItemDrop+ItemData item, int qualityLevel, bool crafting)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching ItemDrop+ItemData ItemDrop+ItemData::Clone() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ExtendedItemDataFramework.ItemData_Clone_Patch::Prefix(ItemDrop+ItemData __instance, ItemDrop+ItemData& __result)

[Info   :  HarmonyX] Running ILHook manipulator on ItemDrop+ItemData ItemDrop+ItemData::Clone()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void ItemDrop::Load() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ExtendedItemDataFramework.ItemDrop_Load_Patch::Postfix(ItemDrop __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ItemDrop::Load()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ItemStand::DropItem() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ExtendedItemDataFramework.ItemStand_Patch::Prefix(ItemStand __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ItemStand::DropItem()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching static string ItemDrop+ItemData::GetTooltip(ItemDrop+ItemData item, int qualityLevel, bool crafting) with 1 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ExtendedItemDataFramework.ItemData_GetTooltip_Patch::Prefix(ItemDrop+ItemData item, int qualityLevel, bool crafting)
4 postfixes:
* static void TeleportEverything.Plugin+GetTooltip_Patch::Postfix(ItemDrop+ItemData item, int qualityLevel, bool crafting, String& __result)
* static void ESP.ItemDropItemData_GetTooltip::Postfix(ItemDrop+ItemData item, String& __result)
* static void ExtendedItemDataFramework.ItemData_GetTooltip_Patch::Postfix(ItemDrop+ItemData item, int qualityLevel, bool crafting)
* static void ExtendedItemDataFramework.ItemData_GetTooltip_UniqueItemData_Patch::Postfix(ItemDrop+ItemData item, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on static string ItemDrop+ItemData::GetTooltip(ItemDrop+ItemData item, int qualityLevel, bool crafting)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :   BepInEx] Loading [JotunnBackpacks 2.0.0]
[Info   :JotunnBackpacks.BackpackAssets] Embedded resources: JotunnBackpacks.AssetsEmbedded.eviesbackpacks
[Info   :  HarmonyX] Patching bool VisEquipment::SetLegEquiped(int hash) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Utils.BoneReorder::VisEquipmentOnSetLegEquiped(VisEquipment __instance, int hash, Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool VisEquipment::SetLegEquiped(int hash)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool VisEquipment::SetHelmetEquiped(int hash, int hairHash) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Utils.BoneReorder::VisEquipmentOnSetHelmetEquiped(VisEquipment __instance, int hash, int hairHash, Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool VisEquipment::SetHelmetEquiped(int hash, int hairHash)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool VisEquipment::SetChestEquiped(int hash) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Utils.BoneReorder::VisEquipmentOnSetChestEquiped(VisEquipment __instance, int hash, Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool VisEquipment::SetChestEquiped(int hash)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool VisEquipment::SetShoulderEquiped(int hash, int variant) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Utils.BoneReorder::VisEquipmentOnSetShoulderEquiped(VisEquipment __instance, int hash, int variant, Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool VisEquipment::SetShoulderEquiped(int hash, int variant)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool VisEquipment::SetUtilityEquiped(int hash) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Utils.BoneReorder::VisEquipmentOnSetUtilityEquiped(VisEquipment __instance, int hash, Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool VisEquipment::SetUtilityEquiped(int hash)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] ### Harmony id=JotunnBackpacks, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void JotunnBackpacks.JotunnBackpacks::Awake(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\JotunnBackpacks.dll
### At 2022-11-05 04.23.39
[Info   :  HarmonyX] Patching void InventoryGui::Update() with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CraftFromContainers.BepInExPlugin+InventoryGui_Update_Patch::Prefix(InventoryGui __instance, UnityEngine.Animator ___m_animator)
3 postfixes:
* static void ExtendedPlayerInventory.BepInExPlugin+InventoryGui_Update_Patch::Postfix(InventoryGui __instance, UnityEngine.Animator ___m_animator, InventoryGrid ___m_playerGrid)
* static void MovableInventoryWindows.BepInExPlugin+InventoryGui_Update_Patch::Postfix(InventoryGui __instance)
* static void JotunnBackpacks.Patches+InventoryGui_Update_Patch::Postfix(UnityEngine.Animator ___m_animator, Container& ___m_currentContainer)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::Update()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Inventory::Changed() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ExtendedPlayerInventory.BepInExPlugin+Inventory_Changed_Patch::Postfix(Inventory __instance)
* static void JotunnBackpacks.Patches+Inventory_Changed_Patch::Postfix(Inventory __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Inventory::Changed()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching float ItemDrop+ItemData::GetWeight() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void JotunnBackpacks.Patches+GetWeight_Patch::Postfix(ItemDrop+ItemData __instance, Single& __result)

[Info   :  HarmonyX] Running ILHook manipulator on float ItemDrop+ItemData::GetWeight()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Humanoid::UnequipItem(ItemDrop+ItemData item, bool triggerEquipEffects) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void JotunnBackpacks.Patches+Humanoid_UnequipItem_Patch::Prefix(ItemDrop+ItemData __0)

[Info   :  HarmonyX] Running ILHook manipulator on void Humanoid::UnequipItem(ItemDrop+ItemData item, bool triggerEquipEffects)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Inventory::UpdateTotalWeight() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void JotunnBackpacks.Patches+UpdateTotalWeight_Patch::Prefix(Inventory __instance)
1 postfixes:
* static void JotunnBackpacks.Patches+UpdateTotalWeight_Patch::Postfix(Inventory __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Inventory::UpdateTotalWeight()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Inventory::IsTeleportable() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool TeleportEverything.Plugin+InventoryIsTeleportablePatch::Prefix(Boolean& __result, Inventory& __instance)
1 postfixes:
* static void JotunnBackpacks.Patches+IsTeleportable_Patch::Postfix(Inventory __instance, Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::IsTeleportable()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void GuiBar::Awake() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool JotunnBackpacks.Patches+GuiBar_Awake_Patch::Prefix(GuiBar __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void GuiBar::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching bool EnvMan::IsCold() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void JotunnBackpacks.Patches+IsCold_Patch::Postfix(Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool EnvMan::IsCold()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool EnvMan::IsFreezing() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void JotunnBackpacks.Patches+IsFreezing_Patch::Postfix(Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool EnvMan::IsFreezing()
[Info   :  HarmonyX] Writing postfixes
[Info   :   BepInEx] Loading [Gizmo Reloaded 1.1.2]
[Info   :  HarmonyX] ### Harmony id=harmony-auto-91cd8e30-62ef-49c6-ab63-54998194c1f3, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void GizmoReloaded.Plugin::Awake(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\GizmoReloaded.dll
### At 2022-11-05 04.23.39
[Info   :  HarmonyX] Patching void Player::UpdatePlacementGhost(bool flashGuardStone) with 1 prefixes, 2 postfixes, 2 transpilers, 1 finalizers
1 prefixes:
* static void ValheimMod.PlayerPatch+UpdatePlacementGhost_Patch::Prefix(Player __instance)
2 postfixes:
* static void BuildRestrictionTweaks.BepInExPlugin+Player_UpdatePlacementGhost_Patch::Postfix(Player __instance, UnityEngine.GameObject ___m_placementGhost)
* static void CraftFromContainers.BepInExPlugin+UpdatePlacementGhost_Patch::Postfix(Player __instance, bool flashGuardStone)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> FarmGrid.Patches.FarmGrid_Patch::UpdatePlacementGhost(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> GizmoReloaded.UpdatePlacementGhost_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
1 finalizers:
* static Exception ValheimMod.PlayerPatch+UpdatePlacementGhost_Patch::Finalizer(Player __instance, UnityEngine.GameObject ___m_placementGhost, int ___m_placeRotation, int ___m_placementStatus)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::UpdatePlacementGhost(bool flashGuardStone)
[Info   :  HarmonyX] Transpiling void Player::UpdatePlacementGhost(bool flashGuardStone)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> FarmGrid.Patches.FarmGrid_Patch::UpdatePlacementGhost(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> GizmoReloaded.UpdatePlacementGhost_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Writing finalizers
[Info   :  HarmonyX] ### Harmony id=harmony-auto-993bd5c3-5c78-4c9f-92f7-093b0ea41a01, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void GizmoReloaded.Plugin::Awake(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\GizmoReloaded.dll
### At 2022-11-05 04.23.39
[Info   :  HarmonyX] Patching void Player::UpdatePlacement(bool takeInput, float dt) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool CraftFromContainers.BepInExPlugin+UpdatePlacement_Patch::Prefix(Player __instance, bool takeInput, float dt, PieceTable ___m_buildPieces, UnityEngine.GameObject ___m_placementGhost)
1 postfixes:
* static void GizmoReloaded.UpdatePlacement_Patch::Player_UpdatePlacement(Player __instance, UnityEngine.GameObject ___m_placementGhost, bool takeInput, float dt)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::UpdatePlacement(bool takeInput, float dt)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :   BepInEx] Loading [HeightmapUnlimited 1.3.3]
[Debug  :HeightmapUnlimited.HeightmapUnlimited] [HeightmapUnlimited] Awake()
[Info   :  HarmonyX] ### Harmony id=Menthus.bepinex.plugins.HeightmapUnlimited, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void HeightmapUnlimited.HeightmapUnlimited::Awake(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\HeightmapUnlimited\HeightmapUnlimited.dll
### At 2022-11-05 04.23.39
[Info   :  HarmonyX] Patching void TerrainComp::LevelTerrain(UnityEngine.Vector3 worldPos, float radius, bool square) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> HeightmapUnlimited.Heightmap_Patches::TerrainCompLevelTerrainTranspiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void TerrainComp::LevelTerrain(UnityEngine.Vector3 worldPos, float radius, bool square)
[Info   :  HarmonyX] Transpiling void TerrainComp::LevelTerrain(UnityEngine.Vector3 worldPos, float radius, bool square)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> HeightmapUnlimited.Heightmap_Patches::TerrainCompLevelTerrainTranspiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching void TerrainComp::RaiseTerrain(UnityEngine.Vector3 worldPos, float radius, float delta, bool square, float power) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> HeightmapUnlimited.Heightmap_Patches::TerrainCompRaiseTerrainTranspiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void TerrainComp::RaiseTerrain(UnityEngine.Vector3 worldPos, float radius, float delta, bool square, float power)
[Info   :  HarmonyX] Transpiling void TerrainComp::RaiseTerrain(UnityEngine.Vector3 worldPos, float radius, float delta, bool square, float power)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> HeightmapUnlimited.Heightmap_Patches::TerrainCompRaiseTerrainTranspiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching void TerrainComp::ApplyToHeightmap(UnityEngine.Texture2D clearedMask, System.Collections.Generic.List<float> heights, float[] baseHeights, float[] levelOnlyHeights, Heightmap hm) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> HeightmapUnlimited.Heightmap_Patches::TerrainCompApplyToHeightmapTranspiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void TerrainComp::ApplyToHeightmap(UnityEngine.Texture2D clearedMask, System.Collections.Generic.List<float> heights, float[] baseHeights, float[] levelOnlyHeights, Heightmap hm)
[Info   :  HarmonyX] Transpiling void TerrainComp::ApplyToHeightmap(UnityEngine.Texture2D clearedMask, System.Collections.Generic.List<float> heights, float[] baseHeights, float[] levelOnlyHeights, Heightmap hm)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> HeightmapUnlimited.Heightmap_Patches::TerrainCompApplyToHeightmapTranspiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :   BepInEx] Loading [UsefulPaths 1.0.5.0]
[Info   :  HarmonyX] ### Harmony id=harmony-auto-b92cd01a-e0d6-4891-9ba9-21d4e1767dab, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void UsefulPaths.UsefulPaths::Awake(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\UsefulPaths.dll
### At 2022-11-05 04.23.39
[Info   :  HarmonyX] Patching void Character::UpdateWalking(float dt) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void UsefulPaths.CharacterUpdateWalking_Patch::Prefix(Character __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Character::UpdateWalking(float dt)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching virtual float Player::GetJogSpeedFactor() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void UsefulPaths.PlayerGetJogSpeedFactor_Patch::Postfix(Single& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual float Player::GetJogSpeedFactor()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual float Player::GetRunSpeedFactor() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void UsefulPaths.PlayerGetRunSpeedFactor_Patch::Postfix(Single& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual float Player::GetRunSpeedFactor()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual void Player::UseStamina(float v) with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool ToolsPatches::HammerStamina_Prefix(Player __instance, Single& v)
* static void UsefulPaths.PlayerUseStamina_Patch::Prefix(Single& v)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Player::UseStamina(float v)
[Info   :  HarmonyX] Writing prefixes
[Info   :   BepInEx] Loading [Ore Support 1.6]
[Info   :  HarmonyX] ### Harmony id=ore_support, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void OreSupport.OreSupport::Awake(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\OreSupport.dll
### At 2022-11-05 04.23.40
[Info   :  HarmonyX] Patching void Player::UpdateHover() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void Visualization.Player_AddHoverForVisuals::Postfix(UnityEngine.GameObject& ___m_hovering, UnityEngine.GameObject& ___m_hoveringCreature)
* static void OreSupport.Player_AddHoverForVisuals::Postfix(UnityEngine.GameObject& ___m_hovering, UnityEngine.GameObject& ___m_hoveringCreature)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::UpdateHover()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void MineRock5::RPC_Damage(long sender, HitData hit, int hitAreaIndex) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void OreSupport.MineRock5_Damage::Postfix(MineRock5 __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void MineRock5::RPC_Damage(long sender, HitData hit, int hitAreaIndex)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void MineRock5::UpdateSupport() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void OreSupport.MineRock5_Support::Postfix(MineRock5 __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void MineRock5::UpdateSupport()
[Info   :  HarmonyX] Writing postfixes
[Info   :   BepInEx] Loading [Display BepInEx Info In-Game 2.0.0]
[Info   :  HarmonyX] ### Harmony id=harmony-auto-967ea221-e1a9-4f7a-9c85-30517b09bb24, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void Valheim.DisplayBepInExInfo.DisplayInfoPlugin::Awake(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\Valheim.DisplayBepInExInfo.dll
### At 2022-11-05 04.23.40
[Info   :  HarmonyX] Patching void FejdStartup::Start() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void SlimAssist.SlimAssist+Start_Patch::Postfix(FejdStartup __instance)
* static void Valheim.DisplayBepInExInfo.DisplayInfoPlugin::OnFejdStartup(FejdStartup __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::Start()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching static void ZNet::SetServer(bool server, bool openServer, bool publicServer, string serverName, string password, World world) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Valheim.DisplayBepInExInfo.DisplayInfoPlugin::OnServerStart(string serverName)

[Info   :  HarmonyX] Running ILHook manipulator on static void ZNet::SetServer(bool server, bool openServer, bool publicServer, string serverName, string password, World world)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual void Terminal::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Valheim.DisplayBepInExInfo.DisplayInfoPlugin::FixConsoleMesh()

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Terminal::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Terminal::UpdateChat() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Valheim.DisplayBepInExInfo.DisplayInfoPlugin::FixConsoleMesh2()

[Info   :  HarmonyX] Running ILHook manipulator on void Terminal::UpdateChat()
[Info   :  HarmonyX] Writing postfixes
[Info   :   BepInEx] Loading [Build Camera 1.6.1]
[Info   :  HarmonyX] ### Harmony id=org.gittywithexcitement.plugins.valheim.buildCamera, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void Valheim_Build_Camera.Valheim_Build_Camera::Awake(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\Build Camera.dll
### At 2022-11-05 04.23.40
[Info   :  HarmonyX] Patching virtual void Player::Awake() with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void ExtendedPlayerInventory.BepInExPlugin+Player_Awake_Patch::Prefix(Player __instance, Inventory ___m_inventory)
* static void Valheim_Build_Camera.Valheim_Build_Camera::Player_Awake(Single& ___m_maxPlaceDistance)
1 postfixes:
* static void ESP.Player_Cover::Postfix(Player __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Player::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void CraftingStation::Start() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void Valheim_Build_Camera.Valheim_Build_Camera::CraftingStation_Start(CraftingStation& __instance, Single& ___m_rangeBuild)
2 postfixes:
* static void CraftyCartsRemake.CCR+CraftingStation_Start_Patch::Postfix(CraftingStation __instance, System.Collections.Generic.List`1[[CraftingStation, assembly_valheim, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]& ___m_allStations)
* static void ESP.CraftingStation_Updater::Postfix(CraftingStation __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void CraftingStation::Start()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Player::SetLocalPlayer() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void ValheimMod.ValheimMod+SetupDebugState::Postfix(Player __instance)
* static void Valheim_Build_Camera.Valheim_Build_Camera::InitializeNotInBuildMode()

[Info   :  HarmonyX] Running ILHook manipulator on void Player::SetLocalPlayer()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Player::Update() with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void Valheim_Build_Camera.Valheim_Build_Camera::Update_Prefix_Player(Player& __instance, Boolean& __runOriginal)
3 postfixes:
* static void ExtendedPlayerInventory.BepInExPlugin+Player_Update_Patch::Postfix(Player __instance, Inventory ___m_inventory)
* static void ValheimMod.ValheimMod+Update_Patch::Postfix()
* static void Valheim_Build_Camera.Valheim_Build_Camera::Update_Postfix_Player(Player& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::Update()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool PlayerController::TakeInput() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void Valheim_Build_Camera.Valheim_Build_Camera::TakeInput_PlayerController(Boolean& __result, Boolean& __runOriginal)
1 postfixes:
* static void Jotunn.Managers.GUIManager+Patches::PlayerController_TakeInput(Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool PlayerController::TakeInput()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void GameCamera::UpdateCamera(float dt) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void Valheim_Build_Camera.Valheim_Build_Camera::UpdateCamera(float dt, GameCamera& __instance, Boolean& __runOriginal)

[Info   :  HarmonyX] Running ILHook manipulator on void GameCamera::UpdateCamera(float dt)
[Info   :  HarmonyX] Writing prefixes
[Info   :   BepInEx] Loading [Valheim Recycle 2.1.0]
[Info   :Valheim Recycle] AWAKE
[Info   :  HarmonyX] ### Harmony id=harmony-auto-c7ae0da9-4f38-4d18-8ba1-5c7a015b6d36, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void ValheimRecycle.ValheimRecycle::Awake(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\ValheimRecycle.dll
### At 2022-11-05 04.23.40
[Info   :  HarmonyX] Patching void InventoryGui::Update() with 1 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void CraftFromContainers.BepInExPlugin+InventoryGui_Update_Patch::Prefix(InventoryGui __instance, UnityEngine.Animator ___m_animator)
4 postfixes:
* static void ExtendedPlayerInventory.BepInExPlugin+InventoryGui_Update_Patch::Postfix(InventoryGui __instance, UnityEngine.Animator ___m_animator, InventoryGrid ___m_playerGrid)
* static void MovableInventoryWindows.BepInExPlugin+InventoryGui_Update_Patch::Postfix(InventoryGui __instance)
* static void JotunnBackpacks.Patches+InventoryGui_Update_Patch::Postfix(UnityEngine.Animator ___m_animator, Container& ___m_currentContainer)
* static void ValheimRecycle.InventoryGuiPatch::PostfixUpdate(InventoryGui __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::Update()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void InventoryGui::OnTabCraftPressed() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimRecycle.InventoryGuiPatch::PrefixOnTabCraftPressed(InventoryGui __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::OnTabCraftPressed()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void InventoryGui::OnTabUpgradePressed() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimRecycle.InventoryGuiPatch::PrefixOnTabUpgradePressed(InventoryGui __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::OnTabUpgradePressed()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching static bool InventoryGui::SetupRequirement(UnityEngine.Transform elementRoot, Piece+Requirement req, Player player, bool craft, int quality) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CraftFromContainers.BepInExPlugin+InventoryGui_SetupRequirement_Patch::Postfix(InventoryGui __instance, UnityEngine.Transform elementRoot, Piece+Requirement req, Player player, bool craft, int quality)
* static void ValheimRecycle.InventoryGuiPatch::PostfixSetupRequirement(UnityEngine.Transform elementRoot, Piece+Requirement req, int quality)

[Info   :  HarmonyX] Running ILHook manipulator on static bool InventoryGui::SetupRequirement(UnityEngine.Transform elementRoot, Piece+Requirement req, Player player, bool craft, int quality)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void InventoryGui::UpdateCraftingPanel(bool focusView) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ValheimRecycle.InventoryGuiPatch::PrefixUpdateCraftingPanel(InventoryGui __instance, bool focusView)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::UpdateCraftingPanel(bool focusView)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void InventoryGui::UpdateRecipeList(System.Collections.Generic.List<Recipe> recipes) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimRecycle.InventoryGuiPatch::PostfixUpdateRecipeList(InventoryGui __instance, System.Collections.Generic.List<Recipe> recipes)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::UpdateRecipeList(System.Collections.Generic.List<Recipe> recipes)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void InventoryGui::UpdateRecipe(Player player, float dt) with 2 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static void ValheimMod.Patches.InventoryGuiPatch+UpdateRecipe_Patch::Prefix(InventoryGui __instance, Player player)
* static bool ValheimRecycle.InventoryGuiPatch::PrefixUpdateRecipe(InventoryGui __instance, Player player, float dt)
1 postfixes:
* static void ValheimMod.Patches.InventoryGuiPatch+UpdateRecipe_Patch::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::UpdateRecipe(Player player, float dt)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :   BepInEx] Loading [OdinHorse 0.5.5]
[Info   :  HarmonyX] ### Harmony id=Raelaziel.OdinHorse, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void OdinHorse.OdinHorse::.ctor(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\OdinHorse.dll
### At 2022-11-05 04.23.40
[Info   :  HarmonyX] ### Harmony id=org.bepinex.helpers.LocalizationManager, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void LocalizationManager.Localizer::.cctor(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\OdinHorse.dll
### At 2022-11-05 04.23.40
[Info   :  HarmonyX] Patching bool Localization::LoadCSV(string fileName, string language) with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void LocalizationManager.Localizer::LoadLocalization(Localization __instance, string language)
* static void PieceManager.LocalizeKey::AddLocalizedKeys(Localization __instance, string language)

[Info   :  HarmonyX] Running ILHook manipulator on bool Localization::LoadCSV(string fileName, string language)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] ### Harmony id=org.bepinex.helpers.ItemManager, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void ItemManager.PrefabManager::.cctor(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\OdinHorse.dll
### At 2022-11-05 04.23.40
[Info   :  HarmonyX] Patching void ObjectDB::CopyOtherDB(ObjectDB other) with 3 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void Jotunn.Managers.CreatureManager+Patches::InvokeOnVanillaCreaturesAvailable()
* static void Jotunn.Managers.PrefabManager+Patches::InvokeOnVanillaObjectsAvailable(ObjectDB __instance, ObjectDB other)
* static void Jotunn.Managers.ItemManager+Patches::RegisterCustomDataFejd(ObjectDB __instance, ObjectDB other)
6 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void ItemManager.PrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void BalrondHearths.Launch+Object_CopyOtherDB_Path::Postfix()
* static void BalrondShipyard.Launch+Object_CopyOtherDB_Path::Postfix()
* static void ValheimMod.ObjectDB_CopyOtherDB_Patch::Postfix()
* static void Jotunn.Managers.ItemManager+Patches::InvokeOnItemsRegisteredFejd(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::CopyOtherDB(ObjectDB other)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::Awake() with 3 prefixes, 9 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void Jotunn.Utils.ModQuery::ObjectDBAwake(ObjectDB __instance)
* static void ItemManager.PrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void Jotunn.Managers.ItemManager+Patches::RegisterCustomData(ObjectDB __instance)
9 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void PieceManager.BuildPiece::Patch_ObjectDBInit(ObjectDB __instance)
* static void ValheimMod.ObjectDB_Awake_Patch::Postfix()
* static void Advize_PlantEverything.PlantEverything+ObjectDBAwake::Postfix(ObjectDB __instance)
* static void BalrondHearths.Launch+Object_Awake_Path::Postfix()
* static void BalrondShipyard.Launch+Object_Awake_Path::Postfix()
* static void Jotunn.Managers.PieceManager+Patches::RegisterCustomData(ObjectDB __instance)
* static void Jotunn.Managers.ItemManager+Patches::InvokeOnItemsRegistered(ObjectDB __instance)
* static void Jotunn.Managers.PieceManager+Patches::InvokeOnPiecesRegistered(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::CopyOtherDB(ObjectDB other) with 4 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void Jotunn.Managers.CreatureManager+Patches::InvokeOnVanillaCreaturesAvailable()
* static void Jotunn.Managers.PrefabManager+Patches::InvokeOnVanillaObjectsAvailable(ObjectDB __instance, ObjectDB other)
* static void ItemManager.Item::Patch_ObjectDBInit(ObjectDB __instance)
* static void Jotunn.Managers.ItemManager+Patches::RegisterCustomDataFejd(ObjectDB __instance, ObjectDB other)
6 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void ItemManager.PrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void BalrondHearths.Launch+Object_CopyOtherDB_Path::Postfix()
* static void BalrondShipyard.Launch+Object_CopyOtherDB_Path::Postfix()
* static void ValheimMod.ObjectDB_CopyOtherDB_Patch::Postfix()
* static void Jotunn.Managers.ItemManager+Patches::InvokeOnItemsRegisteredFejd(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::CopyOtherDB(ObjectDB other)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::Awake() with 4 prefixes, 9 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void Jotunn.Utils.ModQuery::ObjectDBAwake(ObjectDB __instance)
* static void ItemManager.PrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void Jotunn.Managers.ItemManager+Patches::RegisterCustomData(ObjectDB __instance)
* static void ItemManager.Item::Patch_ObjectDBInit(ObjectDB __instance)
9 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void PieceManager.BuildPiece::Patch_ObjectDBInit(ObjectDB __instance)
* static void ValheimMod.ObjectDB_Awake_Patch::Postfix()
* static void Advize_PlantEverything.PlantEverything+ObjectDBAwake::Postfix(ObjectDB __instance)
* static void BalrondHearths.Launch+Object_Awake_Path::Postfix()
* static void BalrondShipyard.Launch+Object_Awake_Path::Postfix()
* static void Jotunn.Managers.PieceManager+Patches::RegisterCustomData(ObjectDB __instance)
* static void Jotunn.Managers.ItemManager+Patches::InvokeOnItemsRegistered(ObjectDB __instance)
* static void Jotunn.Managers.PieceManager+Patches::InvokeOnPiecesRegistered(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void FejdStartup::Awake() with 3 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void PieceManager.BuildPiece::Patch_FejdStartup()
* static void Jotunn.Managers.SynchronizationManager+Patches::FejdStartup_Awake(FejdStartup __instance)
* static void ItemManager.Item::Patch_FejdStartup()
2 postfixes:
* static void CraftFromContainers.BepInExPlugin+FejdStartup_Awake_Patch::Postfix(FejdStartup __instance)
* static void Jotunn.Utils.ModQuery::FejdStartup_Awake_Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 13 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
13 prefixes:
* static void Jotunn.Managers.UndoManager+Patches::ClearUndoQueuesBefore(ZNetScene __instance)
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void ItemManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void BalrondTrough.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondBarrell.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondHearths.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondMetalLocker.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondOreBasket.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShelf.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShipyard.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondWoodshed.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void LightController.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static bool ValheimMod.ZNetScene_Awake_Patch::Prefix(ZNetScene __instance)
4 postfixes:
* static void Advize_PlantEverything.PlantEverything+ZNetSceneAwake::Postfix(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::RegisterAllToZNetScene(ZNetScene __instance)
* static void Jotunn.Managers.CreatureManager+Patches::FixReferences(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::InvokeOnPrefabsRegistered(ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void InventoryGui::UpdateRecipe(Player player, float dt) with 2 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
2 prefixes:
* static void ValheimMod.Patches.InventoryGuiPatch+UpdateRecipe_Patch::Prefix(InventoryGui __instance, Player player)
* static bool ValheimRecycle.InventoryGuiPatch::PrefixUpdateRecipe(InventoryGui __instance, Player player, float dt)
1 postfixes:
* static void ValheimMod.Patches.InventoryGuiPatch+UpdateRecipe_Patch::Postfix()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ItemManager.Item::Transpile_InventoryGui(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::UpdateRecipe(Player player, float dt)
[Info   :  HarmonyX] Transpiling void InventoryGui::UpdateRecipe(Player player, float dt)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ItemManager.Item::Transpile_InventoryGui(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching int Recipe::GetRequiredStationLevel(int quality) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ItemManager.Item::Patch_MaximumRequiredStationLevel(Recipe __instance, Int32& __result, int quality)

[Info   :  HarmonyX] Running ILHook manipulator on int Recipe::GetRequiredStationLevel(int quality)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Localization::LoadCSV(string fileName, string language) with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void LocalizationManager.Localizer::LoadLocalization(Localization __instance, string language)
* static void PieceManager.LocalizeKey::AddLocalizedKeys(Localization __instance, string language)
* static void ItemManager.LocalizeKey::AddLocalizedKeys(Localization __instance, string language)

[Info   :  HarmonyX] Running ILHook manipulator on bool Localization::LoadCSV(string fileName, string language)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] ### Harmony id=org.bepinex.helpers.PieceManager, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void PieceManager.PiecePrefabManager::.cctor(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\OdinHorse.dll
### At 2022-11-05 04.23.42
[Info   :  HarmonyX] Patching void FejdStartup::Awake() with 4 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void PieceManager.BuildPiece::Patch_FejdStartup()
* static void Jotunn.Managers.SynchronizationManager+Patches::FejdStartup_Awake(FejdStartup __instance)
* static void ItemManager.Item::Patch_FejdStartup()
* static void PieceManager.BuildPiece::Patch_FejdStartup()
2 postfixes:
* static void CraftFromContainers.BepInExPlugin+FejdStartup_Awake_Patch::Postfix(FejdStartup __instance)
* static void Jotunn.Utils.ModQuery::FejdStartup_Awake_Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 14 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
14 prefixes:
* static void Jotunn.Managers.UndoManager+Patches::ClearUndoQueuesBefore(ZNetScene __instance)
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void ItemManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void BalrondTrough.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondBarrell.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondHearths.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondMetalLocker.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondOreBasket.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShelf.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShipyard.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondWoodshed.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void LightController.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static bool ValheimMod.ZNetScene_Awake_Patch::Prefix(ZNetScene __instance)
4 postfixes:
* static void Advize_PlantEverything.PlantEverything+ZNetSceneAwake::Postfix(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::RegisterAllToZNetScene(ZNetScene __instance)
* static void Jotunn.Managers.CreatureManager+Patches::FixReferences(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::InvokeOnPrefabsRegistered(ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::Awake() with 0 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
6 postfixes:
* static void PieceManager.AdminSyncing::AdminStatusSync(ZNet __instance)
* static void ServerSync.ConfigSync+RegisterRPCPatch::Postfix(ZNet __instance)
* static void ServerSync.ConfigSync+RegisterRPCPatch::Postfix(ZNet __instance)
* static void Jotunn.Managers.SynchronizationManager+Patches::ZNet_Awake(ZNet __instance)
* static void ServerSync.ConfigSync+RegisterRPCPatch::Postfix(ZNet __instance)
* static void ValheimMod.Patches.ZNetPatch+Awake_Patch::Postfix(ZNet __instance, World ___m_world)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::Awake() with 4 prefixes, 10 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void Jotunn.Utils.ModQuery::ObjectDBAwake(ObjectDB __instance)
* static void ItemManager.PrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void Jotunn.Managers.ItemManager+Patches::RegisterCustomData(ObjectDB __instance)
* static void ItemManager.Item::Patch_ObjectDBInit(ObjectDB __instance)
10 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void PieceManager.BuildPiece::Patch_ObjectDBInit(ObjectDB __instance)
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void ValheimMod.ObjectDB_Awake_Patch::Postfix()
* static void Advize_PlantEverything.PlantEverything+ObjectDBAwake::Postfix(ObjectDB __instance)
* static void BalrondHearths.Launch+Object_Awake_Path::Postfix()
* static void BalrondShipyard.Launch+Object_Awake_Path::Postfix()
* static void Jotunn.Managers.PieceManager+Patches::RegisterCustomData(ObjectDB __instance)
* static void Jotunn.Managers.ItemManager+Patches::InvokeOnItemsRegistered(ObjectDB __instance)
* static void Jotunn.Managers.PieceManager+Patches::InvokeOnPiecesRegistered(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::CopyOtherDB(ObjectDB other) with 4 prefixes, 7 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void Jotunn.Managers.CreatureManager+Patches::InvokeOnVanillaCreaturesAvailable()
* static void Jotunn.Managers.PrefabManager+Patches::InvokeOnVanillaObjectsAvailable(ObjectDB __instance, ObjectDB other)
* static void ItemManager.Item::Patch_ObjectDBInit(ObjectDB __instance)
* static void Jotunn.Managers.ItemManager+Patches::RegisterCustomDataFejd(ObjectDB __instance, ObjectDB other)
7 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void ItemManager.PrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void BalrondHearths.Launch+Object_CopyOtherDB_Path::Postfix()
* static void BalrondShipyard.Launch+Object_CopyOtherDB_Path::Postfix()
* static void ValheimMod.ObjectDB_CopyOtherDB_Patch::Postfix()
* static void Jotunn.Managers.ItemManager+Patches::InvokeOnItemsRegisteredFejd(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::CopyOtherDB(ObjectDB other)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::Awake() with 4 prefixes, 11 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void Jotunn.Utils.ModQuery::ObjectDBAwake(ObjectDB __instance)
* static void ItemManager.PrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void Jotunn.Managers.ItemManager+Patches::RegisterCustomData(ObjectDB __instance)
* static void ItemManager.Item::Patch_ObjectDBInit(ObjectDB __instance)
11 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void PieceManager.BuildPiece::Patch_ObjectDBInit(ObjectDB __instance)
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void PieceManager.BuildPiece::Patch_ObjectDBInit(ObjectDB __instance)
* static void ValheimMod.ObjectDB_Awake_Patch::Postfix()
* static void Advize_PlantEverything.PlantEverything+ObjectDBAwake::Postfix(ObjectDB __instance)
* static void BalrondHearths.Launch+Object_Awake_Path::Postfix()
* static void BalrondShipyard.Launch+Object_Awake_Path::Postfix()
* static void Jotunn.Managers.PieceManager+Patches::RegisterCustomData(ObjectDB __instance)
* static void Jotunn.Managers.ItemManager+Patches::InvokeOnItemsRegistered(ObjectDB __instance)
* static void Jotunn.Managers.PieceManager+Patches::InvokeOnPiecesRegistered(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Localization::LoadCSV(string fileName, string language) with 0 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 postfixes:
* static void LocalizationManager.Localizer::LoadLocalization(Localization __instance, string language)
* static void PieceManager.LocalizeKey::AddLocalizedKeys(Localization __instance, string language)
* static void ItemManager.LocalizeKey::AddLocalizedKeys(Localization __instance, string language)
* static void PieceManager.LocalizeKey::AddLocalizedKeys(Localization __instance, string language)

[Info   :  HarmonyX] Running ILHook manipulator on bool Localization::LoadCSV(string fileName, string language)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] ### Harmony id=org.bepinex.helpers.CreatureManager, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from static void CreatureManager.PrefabManager::.cctor(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\OdinHorse.dll
### At 2022-11-05 04.23.42
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 15 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
15 prefixes:
* static void Jotunn.Managers.UndoManager+Patches::ClearUndoQueuesBefore(ZNetScene __instance)
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void ItemManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void CreatureManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void BalrondTrough.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondBarrell.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondHearths.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondMetalLocker.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondOreBasket.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShelf.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShipyard.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondWoodshed.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void LightController.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static bool ValheimMod.ZNetScene_Awake_Patch::Prefix(ZNetScene __instance)
4 postfixes:
* static void Advize_PlantEverything.PlantEverything+ZNetSceneAwake::Postfix(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::RegisterAllToZNetScene(ZNetScene __instance)
* static void Jotunn.Managers.CreatureManager+Patches::FixReferences(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::InvokeOnPrefabsRegistered(ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 15 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
15 prefixes:
* static void Jotunn.Managers.UndoManager+Patches::ClearUndoQueuesBefore(ZNetScene __instance)
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void ItemManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void CreatureManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void BalrondTrough.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondBarrell.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondHearths.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondMetalLocker.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondOreBasket.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShelf.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShipyard.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondWoodshed.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void LightController.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static bool ValheimMod.ZNetScene_Awake_Patch::Prefix(ZNetScene __instance)
5 postfixes:
* static void CreatureManager.Creature+DropList::AddDropsToCreature()
* static void Advize_PlantEverything.PlantEverything+ZNetSceneAwake::Postfix(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::RegisterAllToZNetScene(ZNetScene __instance)
* static void Jotunn.Managers.CreatureManager+Patches::FixReferences(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::InvokeOnPrefabsRegistered(ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void SpawnSystem::Awake() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void Jotunn.Managers.CreatureManager+Patches::AddSpawnListToSpawnSystem(SpawnSystem __instance)
2 postfixes:
* static void CreatureManager.Creature::AddToSpawnSystem(SpawnSystem __instance)
* static void ESP.SpawnSystem_Awake::Postfix(SpawnSystem __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void SpawnSystem::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::Awake() with 4 prefixes, 12 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void Jotunn.Utils.ModQuery::ObjectDBAwake(ObjectDB __instance)
* static void ItemManager.PrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void Jotunn.Managers.ItemManager+Patches::RegisterCustomData(ObjectDB __instance)
* static void ItemManager.Item::Patch_ObjectDBInit(ObjectDB __instance)
12 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void PieceManager.BuildPiece::Patch_ObjectDBInit(ObjectDB __instance)
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void PieceManager.BuildPiece::Patch_ObjectDBInit(ObjectDB __instance)
* static void ValheimMod.ObjectDB_Awake_Patch::Postfix()
* static void Advize_PlantEverything.PlantEverything+ObjectDBAwake::Postfix(ObjectDB __instance)
* static void BalrondHearths.Launch+Object_Awake_Path::Postfix()
* static void BalrondShipyard.Launch+Object_Awake_Path::Postfix()
* static void CreatureManager.Creature::UpdateCreatureAis(ObjectDB __instance)
* static void Jotunn.Managers.PieceManager+Patches::RegisterCustomData(ObjectDB __instance)
* static void Jotunn.Managers.ItemManager+Patches::InvokeOnItemsRegistered(ObjectDB __instance)
* static void Jotunn.Managers.PieceManager+Patches::InvokeOnPiecesRegistered(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void FejdStartup::Awake() with 4 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void PieceManager.BuildPiece::Patch_FejdStartup()
* static void Jotunn.Managers.SynchronizationManager+Patches::FejdStartup_Awake(FejdStartup __instance)
* static void ItemManager.Item::Patch_FejdStartup()
* static void PieceManager.BuildPiece::Patch_FejdStartup()
3 postfixes:
* static void CraftFromContainers.BepInExPlugin+FejdStartup_Awake_Patch::Postfix(FejdStartup __instance)
* static void Jotunn.Utils.ModQuery::FejdStartup_Awake_Postfix()
* static void CreatureManager.Creature::Patch_FejdStartup()

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Localization::LoadCSV(string fileName, string language) with 0 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
5 postfixes:
* static void LocalizationManager.Localizer::LoadLocalization(Localization __instance, string language)
* static void PieceManager.LocalizeKey::AddLocalizedKeys(Localization __instance, string language)
* static void ItemManager.LocalizeKey::AddLocalizedKeys(Localization __instance, string language)
* static void PieceManager.LocalizeKey::AddLocalizedKeys(Localization __instance, string language)
* static void CreatureManager.LocalizeKey::AddLocalizedKeys(Localization __instance, string language)

[Info   :  HarmonyX] Running ILHook manipulator on bool Localization::LoadCSV(string fileName, string language)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::OnNewConnection(ZNetPeer peer) with 3 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void Jotunn.Utils.ModCompatibility::ZNet_OnNewConnection(ZNet __instance, ZNetPeer peer)
* static void ServerSync.VersionCheck::RegisterAndCheckVersion(ZNetPeer peer, ZNet __instance)
* static void ServerSync.VersionCheck::RegisterAndCheckVersion(ZNetPeer peer, ZNet __instance)
5 postfixes:
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ValheimMod.Patches.ZNetPatch+OnNewConnection_Patch::Postfix(ZNet __instance, bool ___m_isServer, ZNetPeer peer)
* static void PieceManager.RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::OnNewConnection(ZNetPeer peer)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Vagon::LateUpdate() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void OdinHorse.OdinHorse+LateUpdate_Vagon_Patch::Prefix(Vagon& __instance, UnityEngine.ConfigurableJoint& ___m_attachJoin, UnityEngine.Rigidbody& ___m_body)

[Info   :  HarmonyX] Running ILHook manipulator on void Vagon::LateUpdate()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching bool Vagon::InUse() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool OdinHorse.OdinHorse+InUse_Vagon_Patch::Prefix(Boolean& __result, Vagon& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on bool Vagon::InUse()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Vagon::FixedUpdate() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool OdinHorse.OdinHorse+Vagon_FixedUpdate_Patch::Prefix(Vagon __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Vagon::FixedUpdate()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void BaseAI::Follow(UnityEngine.GameObject go, float dt) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool OdinHorse.OdinHorse+Tamed_Follow_patch::Prefix(UnityEngine.GameObject go, float dt, BaseAI& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void BaseAI::Follow(UnityEngine.GameObject go, float dt)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void ZNet::OnNewConnection(ZNetPeer peer) with 4 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void Jotunn.Utils.ModCompatibility::ZNet_OnNewConnection(ZNet __instance, ZNetPeer peer)
* static void ServerSync.VersionCheck::RegisterAndCheckVersion(ZNetPeer peer, ZNet __instance)
* static void ServerSync.VersionCheck::RegisterAndCheckVersion(ZNetPeer peer, ZNet __instance)
* static void OdinHorse.RegisterAndCheckVersion::Prefix(ZNetPeer peer, ZNet& __instance)
5 postfixes:
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ValheimMod.Patches.ZNetPatch+OnNewConnection_Patch::Postfix(ZNet __instance, bool ___m_isServer, ZNetPeer peer)
* static void PieceManager.RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::OnNewConnection(ZNetPeer peer)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg) with 9 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
9 prefixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, Advize_PlantEverything, Version=1.11.7.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, CraftyCartsRemake, Version=3.0.7.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static bool Jotunn.Utils.ModCompatibility::ZNet_RPC_PeerInfo(ZNet __instance, ZRpc rpc, ZPackage pkg)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, TeleportEverything, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static bool ServerSync.VersionCheck::RPC_PeerInfo(ZRpc rpc, ZNet __instance)
* static void Jotunn.Managers.SynchronizationManager+Patches::ZNet_RPC_Pre_PeerInfo(ZNet __instance, ZRpc rpc, Jotunn.Managers.SynchronizationManager+PeerInfoBlockingSocket& __state)
* static bool ServerSync.VersionCheck::RPC_PeerInfo(ZRpc rpc, ZNet __instance)
* static void ValheimMod.Patches.ZNetPatch+RPC_PeerInfo_Patch::Prefix(ZRpc rpc, ZPackage pkg, ZNet& __instance)
* static bool OdinHorse.VerifyClient::Prefix(ZRpc rpc, ZPackage pkg, ZNet& __instance)
6 postfixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)
* static void Jotunn.Managers.SynchronizationManager+Patches::ZNet_RPC_Post_PeerInfo(ZNet __instance, ZRpc rpc, Jotunn.Managers.SynchronizationManager+PeerInfoBlockingSocket& __state)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)
* static void ValheimMod.Patches.ZNetPatch+RPC_PeerInfo_Patch::Postfix(ZNet& __instance, World ___m_world, ZRpc rpc)
* static void OdinHorse.VerifyClient::Postfix(ZNet __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void FejdStartup::ShowConnectError(ZNet+ConnectionStatus statusOverride) with 0 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
6 postfixes:
* static void ServerSync.VersionCheck::ShowConnectionError(FejdStartup __instance)
* static void ServerSync.ConfigSync+ShowConnectionError::Postfix(FejdStartup __instance)
* static void ServerSync.VersionCheck::ShowConnectionError(FejdStartup __instance)
* static void ValheimMod.Patches.FejdStartupPatch+ShowConnectError_Patch::Postfix(FejdStartup __instance)
* static void OdinHorse.ShowConnectionError::Postfix(FejdStartup __instance)
* static void Jotunn.Utils.ModCompatibility::FejdStartup_ShowConnectError(FejdStartup __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::ShowConnectError(ZNet+ConnectionStatus statusOverride)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::Disconnect(ZNetPeer peer) with 3 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void ServerSync.VersionCheck::RemoveDisconnected(ZNetPeer peer, ZNet __instance)
* static void ServerSync.VersionCheck::RemoveDisconnected(ZNetPeer peer, ZNet __instance)
* static void OdinHorse.RemoveDisconnectedPeerFromVerified::Prefix(ZNetPeer peer, ZNet& __instance)
1 postfixes:
* static void ValheimMod.Patches.ZNetPatch+Disconnect_Patch::Postfix(ZNet __instance, bool ___m_isServer, ZNetPeer peer)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::Disconnect(ZNetPeer peer)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZRpc::HandlePackage(ZPackage package) with 4 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void ServerSync.ConfigSync+SnatchCurrentlyHandlingRPC::Prefix(ZRpc __instance)
* static void ServerSync.ConfigSync+SnatchCurrentlyHandlingRPC::Prefix(ZRpc __instance)
* static void ServerSync.ConfigSync+SnatchCurrentlyHandlingRPC::Prefix(ZRpc __instance)
* static void ServerSync.ConfigSync+SnatchCurrentlyHandlingRPC::Prefix(ZRpc __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZRpc::HandlePackage(ZPackage package)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void ZNet::Awake() with 0 prefixes, 7 postfixes, 0 transpilers, 0 finalizers
7 postfixes:
* static void PieceManager.AdminSyncing::AdminStatusSync(ZNet __instance)
* static void ServerSync.ConfigSync+RegisterRPCPatch::Postfix(ZNet __instance)
* static void ServerSync.ConfigSync+RegisterRPCPatch::Postfix(ZNet __instance)
* static void Jotunn.Managers.SynchronizationManager+Patches::ZNet_Awake(ZNet __instance)
* static void ServerSync.ConfigSync+RegisterRPCPatch::Postfix(ZNet __instance)
* static void ValheimMod.Patches.ZNetPatch+Awake_Patch::Postfix(ZNet __instance, World ___m_world)
* static void ServerSync.ConfigSync+RegisterRPCPatch::Postfix(ZNet __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::OnNewConnection(ZNetPeer peer) with 4 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void Jotunn.Utils.ModCompatibility::ZNet_OnNewConnection(ZNet __instance, ZNetPeer peer)
* static void ServerSync.VersionCheck::RegisterAndCheckVersion(ZNetPeer peer, ZNet __instance)
* static void ServerSync.VersionCheck::RegisterAndCheckVersion(ZNetPeer peer, ZNet __instance)
* static void OdinHorse.RegisterAndCheckVersion::Prefix(ZNetPeer peer, ZNet& __instance)
6 postfixes:
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ValheimMod.Patches.ZNetPatch+OnNewConnection_Patch::Postfix(ZNet __instance, bool ___m_isServer, ZNetPeer peer)
* static void PieceManager.RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::OnNewConnection(ZNetPeer peer)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::Shutdown() with 0 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 postfixes:
* static void ServerSync.ConfigSync+ResetConfigsOnShutdown::Postfix()
* static void ServerSync.ConfigSync+ResetConfigsOnShutdown::Postfix()
* static void ServerSync.ConfigSync+ResetConfigsOnShutdown::Postfix()
* static void ServerSync.ConfigSync+ResetConfigsOnShutdown::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::Shutdown()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg) with 10 prefixes, 7 postfixes, 0 transpilers, 0 finalizers
10 prefixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, Advize_PlantEverything, Version=1.11.7.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, CraftyCartsRemake, Version=3.0.7.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static bool Jotunn.Utils.ModCompatibility::ZNet_RPC_PeerInfo(ZNet __instance, ZRpc rpc, ZPackage pkg)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, TeleportEverything, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, OdinHorse, Version=0.5.5.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static bool ServerSync.VersionCheck::RPC_PeerInfo(ZRpc rpc, ZNet __instance)
* static void Jotunn.Managers.SynchronizationManager+Patches::ZNet_RPC_Pre_PeerInfo(ZNet __instance, ZRpc rpc, Jotunn.Managers.SynchronizationManager+PeerInfoBlockingSocket& __state)
* static bool ServerSync.VersionCheck::RPC_PeerInfo(ZRpc rpc, ZNet __instance)
* static void ValheimMod.Patches.ZNetPatch+RPC_PeerInfo_Patch::Prefix(ZRpc rpc, ZPackage pkg, ZNet& __instance)
* static bool OdinHorse.VerifyClient::Prefix(ZRpc rpc, ZPackage pkg, ZNet& __instance)
7 postfixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)
* static void Jotunn.Managers.SynchronizationManager+Patches::ZNet_RPC_Post_PeerInfo(ZNet __instance, ZRpc rpc, Jotunn.Managers.SynchronizationManager+PeerInfoBlockingSocket& __state)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)
* static void ValheimMod.Patches.ZNetPatch+RPC_PeerInfo_Patch::Postfix(ZNet& __instance, World ___m_world, ZRpc rpc)
* static void OdinHorse.VerifyClient::Postfix(ZNet __instance)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching string BepInEx.Configuration.ConfigEntryBase::GetSerializedValue() with 4 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static bool ServerSync.ConfigSync+PreventSavingServerInfo::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, String& __result)
* static bool ServerSync.ConfigSync+PreventSavingServerInfo::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, String& __result)
* static bool ServerSync.ConfigSync+PreventSavingServerInfo::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, String& __result)
* static bool ServerSync.ConfigSync+PreventSavingServerInfo::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on string BepInEx.Configuration.ConfigEntryBase::GetSerializedValue()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void BepInEx.Configuration.ConfigEntryBase::SetSerializedValue(string value) with 4 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static bool ServerSync.ConfigSync+PreventConfigRereadChangingValues::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, string value)
* static bool ServerSync.ConfigSync+PreventConfigRereadChangingValues::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, string value)
* static bool ServerSync.ConfigSync+PreventConfigRereadChangingValues::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, string value)
* static bool ServerSync.ConfigSync+PreventConfigRereadChangingValues::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, string value)

[Info   :  HarmonyX] Running ILHook manipulator on void BepInEx.Configuration.ConfigEntryBase::SetSerializedValue(string value)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg) with 11 prefixes, 7 postfixes, 0 transpilers, 0 finalizers
11 prefixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, Advize_PlantEverything, Version=1.11.7.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, CraftyCartsRemake, Version=3.0.7.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static bool Jotunn.Utils.ModCompatibility::ZNet_RPC_PeerInfo(ZNet __instance, ZRpc rpc, ZPackage pkg)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, TeleportEverything, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, OdinHorse, Version=0.5.5.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static bool ServerSync.VersionCheck::RPC_PeerInfo(ZRpc rpc, ZNet __instance)
* static void Jotunn.Managers.SynchronizationManager+Patches::ZNet_RPC_Pre_PeerInfo(ZNet __instance, ZRpc rpc, Jotunn.Managers.SynchronizationManager+PeerInfoBlockingSocket& __state)
* static bool ServerSync.VersionCheck::RPC_PeerInfo(ZRpc rpc, ZNet __instance)
* static void ValheimMod.Patches.ZNetPatch+RPC_PeerInfo_Patch::Prefix(ZRpc rpc, ZPackage pkg, ZNet& __instance)
* static bool OdinHorse.VerifyClient::Prefix(ZRpc rpc, ZPackage pkg, ZNet& __instance)
* static bool ServerSync.VersionCheck::RPC_PeerInfo(ZRpc rpc, ZNet __instance)
7 postfixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)
* static void Jotunn.Managers.SynchronizationManager+Patches::ZNet_RPC_Post_PeerInfo(ZNet __instance, ZRpc rpc, Jotunn.Managers.SynchronizationManager+PeerInfoBlockingSocket& __state)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)
* static void ValheimMod.Patches.ZNetPatch+RPC_PeerInfo_Patch::Postfix(ZNet& __instance, World ___m_world, ZRpc rpc)
* static void OdinHorse.VerifyClient::Postfix(ZNet __instance)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::OnNewConnection(ZNetPeer peer) with 5 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
5 prefixes:
* static void Jotunn.Utils.ModCompatibility::ZNet_OnNewConnection(ZNet __instance, ZNetPeer peer)
* static void ServerSync.VersionCheck::RegisterAndCheckVersion(ZNetPeer peer, ZNet __instance)
* static void ServerSync.VersionCheck::RegisterAndCheckVersion(ZNetPeer peer, ZNet __instance)
* static void OdinHorse.RegisterAndCheckVersion::Prefix(ZNetPeer peer, ZNet& __instance)
* static void ServerSync.VersionCheck::RegisterAndCheckVersion(ZNetPeer peer, ZNet __instance)
6 postfixes:
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ValheimMod.Patches.ZNetPatch+OnNewConnection_Patch::Postfix(ZNet __instance, bool ___m_isServer, ZNetPeer peer)
* static void PieceManager.RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::OnNewConnection(ZNetPeer peer)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::Disconnect(ZNetPeer peer) with 4 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void ServerSync.VersionCheck::RemoveDisconnected(ZNetPeer peer, ZNet __instance)
* static void ServerSync.VersionCheck::RemoveDisconnected(ZNetPeer peer, ZNet __instance)
* static void OdinHorse.RemoveDisconnectedPeerFromVerified::Prefix(ZNetPeer peer, ZNet& __instance)
* static void ServerSync.VersionCheck::RemoveDisconnected(ZNetPeer peer, ZNet __instance)
1 postfixes:
* static void ValheimMod.Patches.ZNetPatch+Disconnect_Patch::Postfix(ZNet __instance, bool ___m_isServer, ZNetPeer peer)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::Disconnect(ZNetPeer peer)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void FejdStartup::ShowConnectError(ZNet+ConnectionStatus statusOverride) with 0 prefixes, 7 postfixes, 0 transpilers, 0 finalizers
7 postfixes:
* static void ServerSync.VersionCheck::ShowConnectionError(FejdStartup __instance)
* static void ServerSync.ConfigSync+ShowConnectionError::Postfix(FejdStartup __instance)
* static void ServerSync.VersionCheck::ShowConnectionError(FejdStartup __instance)
* static void ValheimMod.Patches.FejdStartupPatch+ShowConnectError_Patch::Postfix(FejdStartup __instance)
* static void OdinHorse.ShowConnectionError::Postfix(FejdStartup __instance)
* static void ServerSync.VersionCheck::ShowConnectionError(FejdStartup __instance)
* static void Jotunn.Utils.ModCompatibility::FejdStartup_ShowConnectError(FejdStartup __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::ShowConnectError(ZNet+ConnectionStatus statusOverride)
[Info   :  HarmonyX] Writing postfixes
[Info   :   BepInEx] Loading [CarryWeight 2.0.0]
[Info   :  HarmonyX] ### Harmony id=soravyn.CarryWeight, version=2.9.0.0, location=C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\core\0Harmony.dll, env/clr=4.0.30319.42000, platform=Win32NT, ptrsize:runtime/env=8/Bits64, Windows
### Started from void Soravyn.CarryWeight.CarryWeight::.ctor(), location C:\Program Files (x86)\Steam\steamapps\common\Valheim\BepInEx\plugins\CarryWeight\CarryWeight.dll
### At 2022-11-05 04.23.43
[Info   :  HarmonyX] Patching virtual void Player::RaiseSkill(Skills+SkillType skill, float value) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Soravyn.CarryWeight.CarryWeight+RaiseSkill_Patch::Postfix(Skills+SkillType skill, Player& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Player::RaiseSkill(Skills+SkillType skill, float value)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching float Player::GetMaxCarryWeight() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Soravyn.CarryWeight.CarryWeight+MaxCarry_Patch::Postfix(Single& __result, Player& __instance, Single& ___m_maxCarryWeight)

[Info   :  HarmonyX] Running ILHook manipulator on float Player::GetMaxCarryWeight()
[Info   :  HarmonyX] Writing postfixes
[Info   :   BepInEx] Loading [BlackMetalBuildPieces 0.0.3]
[Info   :   BepInEx] Loading [Vortex Worlds 1.0.1]
[Message:   BepInEx] Chainloader startup complete
[Info   :  HarmonyX] Patching void Player::UpdateTeleport(float dt) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void TeleportableWagon.PlayerUpdateTeleport_Prefix::Prefix(float dt)
1 postfixes:
* static void TeleportEverything.Plugin+UpdateTeleportPatch::Postfix(Player __instance, Boolean& ___m_teleporting, float dt)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::UpdateTeleport(float dt)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Player::UpdateTeleport(float dt) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void TeleportableWagon.PlayerUpdateTeleport_Prefix::Prefix(float dt)
2 postfixes:
* static void TeleportEverything.Plugin+UpdateTeleportPatch::Postfix(Player __instance, Boolean& ___m_teleporting, float dt)
* static void TeleportableWagon.PlayerUpdateTeleport_Postfix::Postfix(float dt)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::UpdateTeleport(float dt)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual bool Vagon::Interact(Humanoid character, bool hold, bool alt) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void TeleportableWagon.Vagon_Interact_Patch::Prefix(Vagon __instance, Humanoid character, bool hold)

[Info   :  HarmonyX] Running ILHook manipulator on virtual bool Vagon::Interact(Humanoid character, bool hold, bool alt)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching string BepInEx.Configuration.ConfigEntryBase::GetSerializedValue() with 5 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
5 prefixes:
* static bool ServerSync.ConfigSync+PreventSavingServerInfo::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, String& __result)
* static bool ServerSync.ConfigSync+PreventSavingServerInfo::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, String& __result)
* static bool ServerSync.ConfigSync+PreventSavingServerInfo::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, String& __result)
* static bool ServerSync.ConfigSync+PreventSavingServerInfo::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, String& __result)
* static bool Jotunn.Managers.SynchronizationManager::ConfigEntryBase_GetSerializedValue(BepInEx.Configuration.ConfigEntryBase __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on string BepInEx.Configuration.ConfigEntryBase::GetSerializedValue()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void BepInEx.Configuration.ConfigEntryBase::SetSerializedValue(string value) with 5 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
5 prefixes:
* static bool ServerSync.ConfigSync+PreventConfigRereadChangingValues::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, string value)
* static bool ServerSync.ConfigSync+PreventConfigRereadChangingValues::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, string value)
* static bool ServerSync.ConfigSync+PreventConfigRereadChangingValues::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, string value)
* static bool ServerSync.ConfigSync+PreventConfigRereadChangingValues::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, string value)
* static bool Jotunn.Managers.SynchronizationManager::ConfigEntryBase_SetSerializedValue(BepInEx.Configuration.ConfigEntryBase __instance, string value)

[Info   :  HarmonyX] Running ILHook manipulator on void BepInEx.Configuration.ConfigEntryBase::SetSerializedValue(string value)
[Info   :  HarmonyX] Writing prefixes
[Info   :Jotunn.Managers.CommandManager] Adding 1 commands to the Console
[Debug  :Jotunn.Managers.SynchronizationManager] Gathering config values
[Info   :Jotunn.Managers.LocalizationManager] Loading custom localizations
[Debug  :Jotunn.Entities.CustomLocalization] Added Json language file: BlackMetalBuildPieces.json
[Debug  :Jotunn.Entities.CustomLocalization] Added Json language file: Clutter.json
[Debug  :Jotunn.Entities.CustomLocalization] Added Json language file: JotunnBackpacks_English.json
[Debug  :Jotunn.Entities.CustomLocalization] Added Json language file: runemagic.json
[Debug  :Jotunn.Entities.CustomLocalization] Added Json language file: JotunnBackpacks_Norwegian.json
[Debug  :Jotunn.Entities.CustomLocalization] Added Json language file: JotunnBackpacks_Russian.json
[Info   :Jotunn.Managers.LocalizationManager] Adding tokens for language 'English'
[Debug  :Jotunn.Managers.LocalizationManager] Adding tokens for 'Localization (thedefside.BlackMetalBuildPieces)'
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_woodblackmetal_beam_name -> Black Metal Wood Beam
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_woodblackmetal_pole_name -> Black Metal Wood Pole
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_woodgreen_beam_name -> Green Wood Beam
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_woodgreen_pole_name -> Green Wood Pole
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_blackmetalfloor_1x1_name -> Black Metal Floor 1x1
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_blackmetalfloor_2x2_name -> Black Metal Floor 2x2
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_blackmetalgate_name -> Black Metal Gate
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_blackmetalwall_1x1_name -> Black Metal Wall 1x1
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_blackmetalwall_2x2_name -> Black Metal Wall 2x2
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_blackmetalcookingrack_name -> Black Metal Cooking Rack
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_blackmetalcauldron_name -> Black Metal Cauldron
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_blackmetal_groundtorch_green -> Black Metal Standing Torch
[Debug  :Jotunn.Managers.LocalizationManager] Adding tokens for 'Localization (com.plumga.Clutter)'
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: PlumgaClutterTool -> Clutter Bucket
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: PlumgaClutterTool_description -> A bucket full of clutter. Use this to clutter up your place!
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_itemstand_horizontal_reduced -> Item Stand - Horizontal
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_itemstand_horizontal_reduced_description -> A smaller, less visible item stand.
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_itemstand_vertical_reduced -> Item Stand - Vertical
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_itemstand_vertical_reduced_description -> A smaller, less visible item stand.
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_itemstand_spear -> Item Stand - Spear
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_itemstand_spear_description -> A great way to show off the severed heads of your enemies.
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_itemstand_stake -> Item Stand - Stake
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_itemstand_stake_description -> A great way to show off the severed heads of your enemies.
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_barnowl -> Owl Sculpture
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_brownpelican -> Pelican Sculpture
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_deer -> Deer Sculpture
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_elk -> Elk Sculpture
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_flyingcrow -> Flying Crow Sculpture
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_heron -> Heron Sculpture
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_wildhorse -> Horse Sculpture
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_wolf -> Wolf Sculpture
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_birdhouse -> Birdhouse
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_bucket -> Small Bucket
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_bucketbig -> Large Bucket
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_mortarandpestle -> Mortar and Pestle
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_pan -> Pan
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_picnicbasket -> Picnic Basket
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_picnicbasketchest -> Picnic Basket
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_pot -> Pot
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_rollingpin -> Rolling Pin
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_soap -> Soap
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_tub -> Empty Tub
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_tubfull -> Full Tub
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_weaponrack -> Weapon Rack
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_weaponrack_description -> Empty rack for displaying your weapons. Use with the small item stands for the best effect.
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_weaponrack_full -> Weapon Rack - Full
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_weaponrack_full_description -> A pre-filled weapon rack. The weapons are just for show. They are attached to the rack and cannot be removed.
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_winebottle -> Wine Bottle
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_winerack -> Wine Rack
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_rug_deer_tablecloth -> Deer Hide Tablecloth
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_rug_fur_tablecloth -> Lox Pelt Tablecloth
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_rug_wolf_tablecloth -> Wolf Pelt Tablecloth
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_dunmr_altar -> Altar
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_dunmr_altarwcandle -> Altar with Candle
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_dunmr_bookblue -> Blue Book - Vertical
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_dunmr_bookblue_horiz -> Blue Book - Horizontal
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_dunmr_bookred -> Red Book - Vertical
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_dunmr_bookred_horiz -> Red Book - Horizontal
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_dunmr_bowl -> Wooden Bowl
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_dunmr_bowlbig -> Large Wooden Bowl
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_dunmr_candle -> Candle - Unlit
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_dunmr_candlelit -> Candle
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_candlebottle -> Candle in a Bottle
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_candlelantern -> Candle Lantern
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_candlelit2 -> Candle
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_candlesnake -> Candle in a Snake Holder
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_dunmr_comb -> Comb
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_dunmr_mug1 -> Mug
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_dunmr_mug2 -> Mug
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_dunmr_plate -> Wooden Plate
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_dunmr_platebig -> Large Wooden Plate
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_dunmr_shelf -> Shelf
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_dunmr_shelfwithbooks -> Bookshelf
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_dunmr_spoon -> Wooden Spoon
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_basket -> Basket
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_bonepile -> Pile of Bones
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_bones1 -> Bones
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_bones2 -> Bones
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_bones3 -> Bones
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_bones4 -> Bones
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_skull -> Skull
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_gravestone -> Gravestone
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_gravestone_description -> Write a custom inscription by interacting with the gravestone.
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_diary -> Diary
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_diary_description -> Like a book, but you can write in it!
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_diarypage -> Diary Page
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_diarypage_description -> A piece of paper that you can write on.
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_fonduepot -> Fondue Pot
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_pictureframe1 -> Painting
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_pictureframe2 -> Painting
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_pictureframe3 -> Painting
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_pictureframe4 -> Painting
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_pipe -> Pipe
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_quillandink -> Quill and Ink
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_quillandparchment -> Quill and Parchment
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_cuckooclock -> Cuckoo Clock
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_roundtable -> Round Table
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_roundtablewithcloth -> Round Table with Tablecloth
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_scroll1 -> Scroll
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_scroll2 -> Scroll
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_scroll3 -> Scroll
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_scroll4 -> Scroll
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_scroll5 -> Scroll
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_fancychest -> Fancy Wood Chest
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_stonechest -> Stone Chest
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_straw -> Straw Bundle
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_coolchair -> Fancy Wood Chair
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_stool -> Round Stool
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_swing -> Swing
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_statuecorgi -> Corgi Statue
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_statuedeer -> Deer Statue
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_statueevil_large -> Evil Statue - Large
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_statueevil_small -> Evil Statue - Small
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_statuehare -> Hare Statue
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_statueseed -> Seed Statue
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_barberpole -> Barber Shop Pole
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_booksecretstorage -> Stash Book
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_booksecretstorage_description -> A book with a real secret.
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_booksecretstoragechest -> Stash Book
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_booksecretstorage_public -> Stash Book - Public
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_booksecretstorage_public_description -> A book with a real secret. This version can be opened by anyone, even in a ward.
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_booksecretstorage_publicchest -> Loot Book
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_fancychest_public -> Fancy Wood Chest - Public
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_fancychest_public_description -> This chest can be opened by anyone, even in a ward.
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_fancychest_publicchest -> Loot Box
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_stonechest_public -> Stone Chest - Public
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_stonechest_public_description -> This chest can be opened by anyone, even in a ward.
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_stonechest_publicchest -> Loot Box
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_horizontalweb -> Horizontal Spider Web
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_tunnelweb -> Tunnel Spider Web
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_verticalweb -> Vertical Spider Web
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_journal -> Journal
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_journal_description -> Like a book, but you can write in it!
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_openbook -> Open Book
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_poetrybook1H -> Red Poetry Book - Horizontal
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_poetrybook1V -> Red Poetry Book - Vertical
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_poetrybook2H -> Green Poetry Book - Horizontal
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_poetrybook2V -> Green Poetry Book - Vertical
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_stackedpoetrybooks1 -> Stacked Poetry Books - Red
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_stackedpoetrybooks2 -> Stacked Poetry Books - Green
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_globe1 -> Globe
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_globe2 -> Globe
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_map1 -> Old Map
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_map2 -> Rolled Up Map
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_map3 -> Open Map
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_dragonstatuesmall -> Golden Dragon Statue - Small
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_dragonstatuelarge -> Golden Dragon Statue - Large
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_blackdragonstatuesmall -> Black Dragon Statue - Small
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_blackdragonstatuelarge -> Black Dragon Statue - Large
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_dunmr_shelfwithbooksdouble -> Double Bookshelf
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_swingingswing -> Swinging Swing
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_largesign -> Large Sign
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_celticidol1 -> Celtic Idol 1
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_celticidol1small -> Celtic Idol 1 - Small
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_celticidol2 -> Celtic Idol 2
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_celticidol3 -> Celtic Idol 3
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_celticidol4 -> Celtic Idol 4
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_celticidol5 -> Celtic Idol 5
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_celticidol6 -> Celtic Idol 6
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_celticidol7 -> Celtic Idol 7
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_celticidol8 -> Celtic Idol 8
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_celticidol9 -> Celtic Idol 9
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_celticidol10 -> Celtic Idol 10
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_celticidol11 -> Celtic Idol 11
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_celticidol12 -> Celtic Idol 12
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_lokistatue -> Loki Statue
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_odinstatue -> Odin Statue
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_bearspainting -> Bears Painting
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_couch1 -> Deer Hide Couch
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_couch2 -> Jute Couch
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_couch3 -> Wolf Pelt Couch
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_couch4 -> Lox Pelt Couch
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_couchbed1 -> Deer Hide Couchbed
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_couchbed2 -> Jute Couchbed
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_flintbowl -> Serving Bowl
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_newbluebook -> Blue Book
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_newgreenbook -> Green Book
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_newredbook -> Red Book
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_newshelf -> Shelf
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_pillow1 -> Pillow
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_pillow2 -> Pillow
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_pillow3 -> Pillow
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_rectangulartable -> Table
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_vangogh -> Starry Night Painting
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_wallshelf -> Wall Shelf
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: customitem_bloodybat -> Bloody Bat
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: customitem_bloodycleaver -> Bloody Cleaver
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: customitem_bloodysickle -> Bloody Sickle
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: customitem_bloodyswagger -> Bloody Swagger
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_armbook -> ZomBook
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_bloodyrag -> Bloody Rag
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_bloodyshelf -> Bloody Wall Shelf
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_bloodytable -> Bloody Table
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_creepyleatherbook -> Leather Book
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_creepyopenbook -> Open Book
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_devilwindow -> Devil Window
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_fishskeleton -> Fish Skeleton
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_handprint -> Bloody Handprint
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_magicbooks -> Magic Books
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_ouijabook -> Ouija Book
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_pentagram -> Pentagram - Horizontal
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_pentagram_vertical -> Pentagram - Vertical
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_pentagram_verticalsmall -> Pentagram - Vertical Small
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_pictureframe -> Spooky Painting - Small
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_pictureframebig -> Spooky Painting - Large
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_skullcandle -> Skull Candle
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_skullcandle2 -> Skull Candle
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: custompiece_zombiedeerhead -> Zombie Deer Head
[Debug  :Jotunn.Managers.LocalizationManager] Adding tokens for 'Localization (com.jotunn.jotunn)'
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: mod_compat_header_failed_connection -> Failed Connection:
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: mod_compat_header_remote_version -> Remote Version (the Server):
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: mod_compat_header_local_version -> Local Version (this Game):
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: mod_compat_header_valheim_version -> Valheim Version Error:
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: mod_compat_header_version_string -> Valheim Modded Version String Mismatch:
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: mod_compat_header_missing_mods -> Missing Mods:
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: mod_compat_header_update_needed -> Mod Updates Needed:
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: mod_compat_header_downgrade_needed -> Mod Downgrades Needed:
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: mod_compat_header_additional_mods -> Additional Mods Loaded:
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: mod_compat_valheim_version_error_description -> The server runs Valheim $1, while your game runs Valheim $2
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: mod_compat_valheim_version_upgrade -> Please update your game to Valheim $1 or contact your server admin
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: mod_compat_valheim_version_downgrade -> Please downgrade your game to Valheim $1 or contact your server admin
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: mod_compat_version_string_description -> This may indicate that mods are missing on one side. Not all mods show up equally on both server and client even if they are installed. Please check the requirements of the listed mods
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: mod_compat_version_strong_local -> Local (this game): $1
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: mod_compat_version_strong_remote -> Remote (the server): $1
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: mod_compat_mod_update -> Please update $1 to version $2
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: mod_compat_mod_downgrade -> Please downgrade $1 to version $2
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: mod_compat_missing_mods_description -> Please install the following mods
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: mod_compat_additional_mods_description -> Please contact your server admin or uninstall the following mods
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: mod_compat_missing_mod -> $1 $2 was not loaded on your game
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: mod_compat_additional_mod -> $1 $2 was not loaded on the server
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: mod_compat_open_log_file -> Open Log File
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: item_cape_ironbackpack -> Rugged Backpack
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: item_cape_ironbackpack_description -> A Rugged backpack, complete with buckles and fine leather straps.
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: se_ruggedbackpackeffects_start -> Backpack equipped
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: item_cape_silverbackpack -> Arctic Backpack
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: item_cape_silverbackpack_description -> An Arctic backpack, fit for long treks through the mountains.
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: se_arcticbackpackeffects_start -> Backpack equipped
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: ui_backpack_inventoryname -> Backpack
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: item_runemagic_runefocus -> Rune Focus
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: item_runemagic_runefocus_desc -> Use this on Runestones you discover to absorb their power and shape it to your own ends.
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_standingstone -> Standing Stone
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_standingstone_desc -> A rough hewn monolith, perfect for rune carvings
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_passive_alertness -> Rune of Alertness
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_passive_alertness_desc -> Open your senses to the world around you.
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_passive_boatpropulsion -> Rune of Ocean Currents
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_passive_boatpropulsion_desc -> The currents will follow your gaze like the tide follows the moon.
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_passive_decumberance -> Rune of Decumberance
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_passive_decumberance_desc -> Be the world's strongest viking!
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_passive_waterwalking -> Rune of Frozen Footfalls
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_passive_waterwalking_desc -> Don't get cold feet, the ocean awaits!
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_blastingrune -> Rune of Blasting
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_blastingrune_desc -> Who needs a pickaxe when you can blast stone apart with magic?  Though, do remember to stand clear...
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_calmwatersrune -> Rune of Calm Waters
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_calmwatersrune_desc -> A smooth sea doesn't make a skilled sailor, but it does help keep your ship in one piece.
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_canopyrune -> Canopy Rune
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_canopyrune_desc -> It's no warm inn with a roaring fire, but it'll keep the damp off.
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_drylandrune -> Rune of Dry Land
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_drylandrune_desc -> Rising sea levels are no longer a concern.
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_levelterrain -> Foundation Rune
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_levelterrain_desc -> Even the plains aren't this flat.
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_repairrune -> Rune of Repair
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_repairrune_desc -> Make maintenance a thing of the past.
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_restoreterrain -> Restoration Rune
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_restoreterrain_desc -> Restore the world to pristine beauty.
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_shattering -> Shattering Rune
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_shattering_desc -> What pickaxes lack in finesse, this rune makes up for.
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_stone_waystone -> Rune of the Stonecaller: Waystone
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_stone_menhir -> Rune of the Stonecaller: Menhir
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_stone_boulder -> Rune of the Stonecaller: Boulder
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_stone_capstone -> Rune of the Stonecaller: Capstone
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_stone_monolith -> Rune of the Stonecaller: Monolith
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_stone_slab -> Rune of the Stonecaller: Slab
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_stone_tor -> Rune of the Stonecaller: Tor
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_stone_batholith -> Rune of the Stonecaller: Batholith
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_stone_arete -> Rune of the Stonecaller: Arête
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: piece_runemagic_stone_megalith -> Rune of the Stonecaller: Megalith
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: tutorial_runemagic_runefocus_text -> I see you've crafted a Rune Focus.  This curious trinket can absorb and shape the energy that infuses the Runestones scattered across this land.

Seek them out, study their ancient carvings, and who knows what secrets you might discover?
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: tutorial_runemagic_runefocus_topic -> Crafted Rune Focus
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: tutorial_runemagic_runicmagic_text -> You've just discovered a rune.  These geometric diagrams and sigils hold great power, when used correctly.  Some have instantaneous results, others will empower you, and a rare few can be inscribed on standing stones for long-lasting effects.

Experiment with them, discover what you can do with your new power!
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: tutorial_runemagic_runicmagic_topic -> Runic Magic
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: hudcategory_runemagic_misc -> Casting
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: hudcategory_runemagic_crafting -> Augments
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: hudcategory_runemagic_building -> Engraving
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: hudcategory_runemagic_furniture -> Creation
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: message_runemagic_unlocknewrune -> {0} Discovered
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: message_runemagic_runealreadyknown -> {0} already known
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: message_runemagic_onlyonground -> Only placeable on ground
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: message_runemagic_onlyonstandingstone -> Only placeable on natural or constructed standing stones
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: message_runemagic_runestone_extractedrunicenergy -> Extracted {0} runic energy
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: message_runemagic_runestone_exhaustedenergy -> Runestone energy exhausted
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: message_runemagic_runefocus_fullenergy -> Your Rune Focus can't hold any more energy
[Debug  :Jotunn.Managers.LocalizationManager] Added translation: message_runemagic_runefocus_exhaustedenergy -> Runic energy exhausted
[Info   :Jotunn.Managers.ItemManager] Adding 3 custom items to the ObjectDB
[Debug  :Jotunn.Managers.ItemManager] Added item $PlumgaClutterTool | Token: $PlumgaClutterTool
[Debug  :Jotunn.Managers.ItemManager] Added item CapeIronBackpack | Token: $item_cape_ironbackpack
[Debug  :Jotunn.Managers.ItemManager] Added item CapeSilverBackpack | Token: $item_cape_silverbackpack
[Debug  :Build Camera] in Player_Awake, changing maxPlaceDistance from 8 to 100
[Info   :Jotunn.Managers.SkillManager] Registering 1 custom skills
[Debug  :Jotunn.Managers.SkillManager] Registered skill Carry Weight | ID: CWSkill
[Debug  : OdinHorse] ReadConfigValues called
[Debug  :CraftyCarts] ReadConfigValues called
[Debug  : OdinHorse] ReadConfigValues called
[Info   :Jotunn.Managers.CommandManager] Adding 1 commands to the Console
[Info   :Jotunn.Managers.PrefabManager] Adding 189 custom prefabs to the ZNetScene
[Debug  :Jotunn.Managers.PrefabManager] Added prefab MinimapOverlayPanel
[Debug  :Jotunn.Managers.PrefabManager] Added prefab _ClutterPieceTable
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $PlumgaClutterTool
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_basket
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_bucket
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_bucketbig
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_candlebottle
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_candlelantern
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_candlelit2
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_candlesnake
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_dunmr_candle
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_dunmr_candlelit
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_diary
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_diarypage
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_dunmr_bookblue
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_dunmr_bookblue_horiz
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_dunmr_bookred
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_dunmr_bookred_horiz
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_quillandink
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_quillandparchment
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_scroll1
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_scroll2
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_scroll3
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_scroll4
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_scroll5
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_pictureframe1
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_pictureframe2
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_pictureframe3
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_pictureframe4
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_rug_deer_tablecloth
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_rug_fur_tablecloth
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_rug_wolf_tablecloth
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_soap
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_pipe
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_dunmr_comb
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_straw
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_winebottle
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_barberpole
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_gravestone
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_bonepile
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_bones1
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_bones2
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_bones3
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_bones4
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_skull
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_itemstand_horizontal_reduced
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_itemstand_vertical_reduced
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_itemstand_spear
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_itemstand_stake
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_coolchair
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_stool
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_swing
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_swingingswing
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_roundtable
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_roundtablewithcloth
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_fancychest
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_stonechest
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_dunmr_shelf
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_dunmr_shelfwithbooks
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_dunmr_shelfwithbooksdouble
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_weaponrack
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_weaponrack_full
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_dunmr_altar
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_dunmr_altarwcandle
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_tub
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_tubfull
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_winerack
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_cuckooclock
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_birdhouse
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_dunmr_bowl
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_dunmr_bowlbig
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_dunmr_plate
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_dunmr_platebig
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_dunmr_mug1
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_dunmr_mug2
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_pan
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_pot
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_dunmr_spoon
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_mortarandpestle
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_rollingpin
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_fonduepot
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_picnicbasket
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_barnowl
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_brownpelican
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_deer
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_elk
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_flyingcrow
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_heron
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_wolf
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_wildhorse
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_statuecorgi
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_statuedeer
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_statueevil_large
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_statueevil_small
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_statuehare
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_statueseed
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_booksecretstorage
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_booksecretstorage_public
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_fancychest_public
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_stonechest_public
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_horizontalweb
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_tunnelweb
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_verticalweb
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_journal
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_openbook
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_poetrybook1H
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_poetrybook1V
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_poetrybook2H
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_poetrybook2V
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_stackedpoetrybooks1
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_stackedpoetrybooks2
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_globe1
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_globe2
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_map1
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_map2
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_map3
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_dragonstatuesmall
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_dragonstatuelarge
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_blackdragonstatuesmall
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_blackdragonstatuelarge
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_largesign
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_celticidol1
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_celticidol1small
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_celticidol2
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_celticidol3
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_celticidol4
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_celticidol5
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_celticidol6
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_celticidol7
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_celticidol8
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_celticidol9
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_celticidol10
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_celticidol11
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_celticidol12
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_lokistatue
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_odinstatue
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_bloodyshelf
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_bloodytable
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_bloodyrag
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_devilwindow
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_fishskeleton
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_handprint
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_pentagram
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_pentagram_vertical
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_pentagram_verticalsmall
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_pictureframe
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_pictureframebig
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_skullcandle
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_skullcandle2
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_zombiedeerhead
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_armbook
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_creepyleatherbook
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_creepyopenbook
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_magicbooks
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_ouijabook
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_couch1
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_couch2
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_couch3
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_couch4
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_couchbed1
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_couchbed2
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_newshelf
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_rectangulartable
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_wallshelf
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_bearspainting
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_vangogh
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_newbluebook
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_newgreenbook
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_newredbook
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_pillow1
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_pillow2
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_pillow3
[Debug  :Jotunn.Managers.PrefabManager] Added prefab $custompiece_flintbowl
[Debug  :Jotunn.Managers.PrefabManager] Added prefab CapeIronBackpack
[Debug  :Jotunn.Managers.PrefabManager] Added prefab CapeSilverBackpack
[Debug  :Jotunn.Managers.PrefabManager] Added prefab ColorPicker
[Debug  :Jotunn.Managers.PrefabManager] Added prefab GradientPicker
[Debug  :Jotunn.Managers.PrefabManager] Added prefab woodblackmetal_beam
[Debug  :Jotunn.Managers.PrefabManager] Added prefab woodblackmetal_pole
[Debug  :Jotunn.Managers.PrefabManager] Added prefab greenblackmetal_beam
[Debug  :Jotunn.Managers.PrefabManager] Added prefab greenblackmetal_pole
[Debug  :Jotunn.Managers.PrefabManager] Added prefab blackmetal_floor_1x1
[Debug  :Jotunn.Managers.PrefabManager] Added prefab blackmetal_floor_2x2
[Debug  :Jotunn.Managers.PrefabManager] Added prefab blackmetal_gate
[Debug  :Jotunn.Managers.PrefabManager] Added prefab blackmetal_wall_1x1
[Debug  :Jotunn.Managers.PrefabManager] Added prefab blackmetal_wall_2x2
[Debug  :Jotunn.Managers.PrefabManager] Added prefab piece_cookingstation_blackmetal
[Debug  :Jotunn.Managers.PrefabManager] Added prefab piece_cauldron_blackmetal
[Debug  :Jotunn.Managers.PrefabManager] Added prefab piece_blackmetal_groundtorch_green
[Info   :Jotunn.Managers.ItemManager] Adding 3 custom items to the ObjectDB
[Debug  :Jotunn.Managers.ItemManager] Added item $PlumgaClutterTool | Token: $PlumgaClutterTool
[Debug  :Jotunn.Managers.ItemManager] Added item CapeIronBackpack | Token: $item_cape_ironbackpack
[Debug  :Jotunn.Managers.ItemManager] Added item CapeSilverBackpack | Token: $item_cape_silverbackpack
[Info   :Jotunn.Managers.ItemManager] Adding 3 custom recipes to the ObjectDB
[Debug  :Jotunn.Managers.ItemManager] Added recipe for $PlumgaClutterTool
[Debug  :Jotunn.Managers.ItemManager] Added recipe for $item_cape_ironbackpack
[Debug  :Jotunn.Managers.ItemManager] Added recipe for $item_cape_silverbackpack
[Info   :Jotunn.Managers.ItemManager] Adding 2 custom status effects to the ObjectDB
[Debug  :Jotunn.Managers.ItemManager] Added status effect SE_RuggedBackpack
[Debug  :Jotunn.Managers.ItemManager] Added status effect SE_ArcticBackpack
[Debug  :Jotunn.Managers.PieceManager] Added categories for table _ClutterPieceTable
[Debug  :Jotunn.Managers.PieceManager] Added categories for table _HammerPieceTable
[Debug  :Jotunn.Managers.PieceManager] Added categories for table _RuneFocusPieceTable
[Info   :Jotunn.Managers.PieceManager] Adding 182 custom pieces to the PieceTables
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_basket | Token: $custompiece_basket
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_bucket | Token: $custompiece_bucket
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_bucketbig | Token: $custompiece_bucketbig
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_candlebottle | Token: $custompiece_candlebottle
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_candlelantern | Token: $custompiece_candlelantern
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_candlelit2 | Token: $custompiece_candlelit2
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_candlesnake | Token: $custompiece_candlesnake
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_dunmr_candle | Token: $custompiece_dunmr_candle
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_dunmr_candlelit | Token: $custompiece_dunmr_candlelit
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_diary | Token: $custompiece_diary
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_diarypage | Token: $custompiece_diarypage
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_dunmr_bookblue | Token: $custompiece_dunmr_bookblue
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_dunmr_bookblue_horiz | Token: $custompiece_dunmr_bookblue_horiz
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_dunmr_bookred | Token: $custompiece_dunmr_bookred
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_dunmr_bookred_horiz | Token: $custompiece_dunmr_bookred_horiz
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_quillandink | Token: $custompiece_quillandink
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_quillandparchment | Token: $custompiece_quillandparchment
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_scroll1 | Token: $custompiece_scroll1
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_scroll2 | Token: $custompiece_scroll2
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_scroll3 | Token: $custompiece_scroll3
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_scroll4 | Token: $custompiece_scroll4
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_scroll5 | Token: $custompiece_scroll5
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_pictureframe1 | Token: $custompiece_pictureframe1
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_pictureframe2 | Token: $custompiece_pictureframe2
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_pictureframe3 | Token: $custompiece_pictureframe3
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_pictureframe4 | Token: $custompiece_pictureframe4
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_rug_deer_tablecloth | Token: $custompiece_rug_deer_tablecloth
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_rug_fur_tablecloth | Token: $custompiece_rug_fur_tablecloth
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_rug_wolf_tablecloth | Token: $custompiece_rug_wolf_tablecloth
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_soap | Token: $custompiece_soap
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_pipe | Token: $custompiece_pipe
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_dunmr_comb | Token: $custompiece_dunmr_comb
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_straw | Token: $custompiece_straw
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_winebottle | Token: $custompiece_winebottle
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_barberpole | Token: $custompiece_barberpole
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_gravestone | Token: $custompiece_gravestone
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_bonepile | Token: $custompiece_bonepile
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_bones1 | Token: $custompiece_bones1
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_bones2 | Token: $custompiece_bones2
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_bones3 | Token: $custompiece_bones3
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_bones4 | Token: $custompiece_bones4
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_skull | Token: $custompiece_skull
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_itemstand_horizontal_reduced | Token: $custompiece_itemstand_horizontal_reduced
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_itemstand_vertical_reduced | Token: $custompiece_itemstand_vertical_reduced
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_itemstand_spear | Token: $custompiece_itemstand_spear
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_itemstand_stake | Token: $custompiece_itemstand_stake
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_coolchair | Token: $custompiece_coolchair
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_stool | Token: $custompiece_stool
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_swing | Token: $custompiece_swing
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_swingingswing | Token: $custompiece_swingingswing
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_roundtable | Token: $custompiece_roundtable
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_roundtablewithcloth | Token: $custompiece_roundtablewithcloth
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_fancychest | Token: $custompiece_fancychest
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_stonechest | Token: $custompiece_stonechest
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_dunmr_shelf | Token: $custompiece_dunmr_shelf
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_dunmr_shelfwithbooks | Token: $custompiece_dunmr_shelfwithbooks
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_dunmr_shelfwithbooksdouble | Token: $custompiece_dunmr_shelfwithbooksdouble
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_weaponrack | Token: $custompiece_weaponrack
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_weaponrack_full | Token: $custompiece_weaponrack_full
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_dunmr_altar | Token: $custompiece_dunmr_altar
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_dunmr_altarwcandle | Token: $custompiece_dunmr_altarwcandle
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_tub | Token: $custompiece_tub
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_tubfull | Token: $custompiece_tubfull
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_winerack | Token: $custompiece_winerack
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_cuckooclock | Token: $custompiece_cuckooclock
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_birdhouse | Token: $custompiece_birdhouse
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_dunmr_bowl | Token: $custompiece_dunmr_bowl
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_dunmr_bowlbig | Token: $custompiece_dunmr_bowlbig
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_dunmr_plate | Token: $custompiece_dunmr_plate
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_dunmr_platebig | Token: $custompiece_dunmr_platebig
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_dunmr_mug1 | Token: $custompiece_dunmr_mug1
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_dunmr_mug2 | Token: $custompiece_dunmr_mug2
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_pan | Token: $custompiece_pan
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_pot | Token: $custompiece_pot
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_dunmr_spoon | Token: $custompiece_dunmr_spoon
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_mortarandpestle | Token: $custompiece_mortarandpestle
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_rollingpin | Token: $custompiece_rollingpin
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_fonduepot | Token: $custompiece_fonduepot
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_picnicbasket | Token: $custompiece_picnicbasket
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_barnowl | Token: $custompiece_barnowl
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_brownpelican | Token: $custompiece_brownpelican
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_deer | Token: $custompiece_deer
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_elk | Token: $custompiece_elk
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_flyingcrow | Token: $custompiece_flyingcrow
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_heron | Token: $custompiece_heron
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_wolf | Token: $custompiece_wolf
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_wildhorse | Token: $custompiece_wildhorse
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_statuecorgi | Token: $custompiece_statuecorgi
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_statuedeer | Token: $custompiece_statuedeer
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_statueevil_large | Token: $custompiece_statueevil_large
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_statueevil_small | Token: $custompiece_statueevil_small
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_statuehare | Token: $custompiece_statuehare
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_statueseed | Token: $custompiece_statueseed
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_booksecretstorage | Token: $custompiece_booksecretstorage
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_booksecretstorage_public | Token: $custompiece_booksecretstorage_public
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_fancychest_public | Token: $custompiece_fancychest_public
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_stonechest_public | Token: $custompiece_stonechest_public
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_horizontalweb | Token: $custompiece_horizontalweb
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_tunnelweb | Token: $custompiece_tunnelweb
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_verticalweb | Token: $custompiece_verticalweb
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_journal | Token: $custompiece_journal
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_openbook | Token: $custompiece_openbook
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_poetrybook1H | Token: $custompiece_poetrybook1H
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_poetrybook1V | Token: $custompiece_poetrybook1V
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_poetrybook2H | Token: $custompiece_poetrybook2H
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_poetrybook2V | Token: $custompiece_poetrybook2V
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_stackedpoetrybooks1 | Token: $custompiece_stackedpoetrybooks1
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_stackedpoetrybooks2 | Token: $custompiece_stackedpoetrybooks2
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_globe1 | Token: $custompiece_globe1
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_globe2 | Token: $custompiece_globe2
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_map1 | Token: $custompiece_map1
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_map2 | Token: $custompiece_map2
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_map3 | Token: $custompiece_map3
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_dragonstatuesmall | Token: $custompiece_dragonstatuesmall
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_dragonstatuelarge | Token: $custompiece_dragonstatuelarge
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_blackdragonstatuesmall | Token: $custompiece_blackdragonstatuesmall
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_blackdragonstatuelarge | Token: $custompiece_blackdragonstatuelarge
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_largesign | Token: $custompiece_largesign
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_celticidol1 | Token: $custompiece_celticidol1
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_celticidol1small | Token: $custompiece_celticidol1small
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_celticidol2 | Token: $custompiece_celticidol2
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_celticidol3 | Token: $custompiece_celticidol3
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_celticidol4 | Token: $custompiece_celticidol4
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_celticidol5 | Token: $custompiece_celticidol5
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_celticidol6 | Token: $custompiece_celticidol6
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_celticidol7 | Token: $custompiece_celticidol7
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_celticidol8 | Token: $custompiece_celticidol8
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_celticidol9 | Token: $custompiece_celticidol9
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_celticidol10 | Token: $custompiece_celticidol10
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_celticidol11 | Token: $custompiece_celticidol11
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_celticidol12 | Token: $custompiece_celticidol12
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_lokistatue | Token: $custompiece_lokistatue
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_odinstatue | Token: $custompiece_odinstatue
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_bloodyshelf | Token: $custompiece_bloodyshelf
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_bloodytable | Token: $custompiece_bloodytable
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_bloodyrag | Token: $custompiece_bloodyrag
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_devilwindow | Token: $custompiece_devilwindow
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_fishskeleton | Token: $custompiece_fishskeleton
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_handprint | Token: $custompiece_handprint
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_pentagram | Token: $custompiece_pentagram
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_pentagram_vertical | Token: $custompiece_pentagram_vertical
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_pentagram_verticalsmall | Token: $custompiece_pentagram_verticalsmall
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_pictureframe | Token: $custompiece_pictureframe
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_pictureframebig | Token: $custompiece_pictureframebig
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_skullcandle | Token: $custompiece_skullcandle
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_skullcandle2 | Token: $custompiece_skullcandle2
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_zombiedeerhead | Token: $custompiece_zombiedeerhead
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_armbook | Token: $custompiece_armbook
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_creepyleatherbook | Token: $custompiece_creepyleatherbook
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_creepyopenbook | Token: $custompiece_creepyopenbook
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_magicbooks | Token: $custompiece_magicbooks
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_ouijabook | Token: $custompiece_ouijabook
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_couch1 | Token: $custompiece_couch1
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_couch2 | Token: $custompiece_couch2
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_couch3 | Token: $custompiece_couch3
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_couch4 | Token: $custompiece_couch4
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_couchbed1 | Token: $custompiece_couchbed1
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_couchbed2 | Token: $custompiece_couchbed2
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_newshelf | Token: $custompiece_newshelf
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_rectangulartable | Token: $custompiece_rectangulartable
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_wallshelf | Token: $custompiece_wallshelf
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_bearspainting | Token: $custompiece_bearspainting
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_vangogh | Token: $custompiece_vangogh
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_newbluebook | Token: $custompiece_newbluebook
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_newgreenbook | Token: $custompiece_newgreenbook
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_newredbook | Token: $custompiece_newredbook
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_pillow1 | Token: $custompiece_pillow1
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_pillow2 | Token: $custompiece_pillow2
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_pillow3 | Token: $custompiece_pillow3
[Debug  :Jotunn.Managers.PieceManager] Added piece $custompiece_flintbowl | Token: $custompiece_flintbowl
[Debug  :Jotunn.Managers.PieceManager] Added piece woodblackmetal_beam | Token: $piece_woodblackmetal_beam_name
[Debug  :Jotunn.Managers.PieceManager] Added piece woodblackmetal_pole | Token: $piece_woodblackmetal_pole_name
[Debug  :Jotunn.Managers.PieceManager] Added piece greenblackmetal_beam | Token: $piece_woodgreen_beam_name
[Debug  :Jotunn.Managers.PieceManager] Added piece greenblackmetal_pole | Token: $piece_woodgreen_pole_name
[Debug  :Jotunn.Managers.PieceManager] Added piece blackmetal_floor_1x1 | Token: $piece_blackmetalfloor_1x1_name
[Debug  :Jotunn.Managers.PieceManager] Added piece blackmetal_floor_2x2 | Token: $piece_blackmetalfloor_2x2_name
[Debug  :Jotunn.Managers.PieceManager] Added piece blackmetal_gate | Token: $piece_blackmetalgate_name
[Debug  :Jotunn.Managers.PieceManager] Added piece blackmetal_wall_1x1 | Token: $piece_blackmetalwall_1x1_name
[Debug  :Jotunn.Managers.PieceManager] Added piece blackmetal_wall_2x2 | Token: $piece_blackmetalwall_2x2_name
[Debug  :Jotunn.Managers.PieceManager] Added piece piece_cookingstation_blackmetal | Token: $piece_blackmetalcookingrack_name
[Debug  :Jotunn.Managers.PieceManager] Added piece piece_cauldron_blackmetal | Token: $piece_blackmetalcauldron_name
[Debug  :Jotunn.Managers.PieceManager] Added piece piece_blackmetal_groundtorch_green | Token: $piece_blackmetal_groundtorch_green
[Info   :Jotunn.Managers.NetworkManager] Registering 2 custom RPCs
[Info   :Valheim Recycle] CreateRecycleButton
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping StoneGolem_clubs (UnityEngine.GameObject) 
[Debug  :Build Camera] in Player_Awake, changing maxPlaceDistance from 8 to 100
[Info   :Jotunn.Managers.SkillManager] Registering 1 custom skills
[Debug  :Jotunn.Managers.SkillManager] Registered skill Carry Weight | ID: CWSkill
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Info   :FastTeleport] Set teleport timer to 8
[Info   :FastTeleport] Distant teleport made not distant
[Info   :TeleportEverything] Allies: 0 and Transport: True
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinShoulders (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinShoulders (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinShoulders (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinShoulders (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinShoulders (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinShoulders (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinShoulders (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinShoulders (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinShoulders (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinShoulders (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinShoulders (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinShoulders (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinShoulders (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinShoulders (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinShoulders (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinShoulders (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinShoulders (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinShoulders (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Message:JotunnBackpacks.JotunnBackpacks] No backpack equipped. Can't open any.
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinShoulders (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinShoulders (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Info   :FastTeleport] Set teleport timer to 8
[Info   :FastTeleport] Distant teleport made not distant
[Info   :TeleportEverything] Allies: 0 and Transport: True
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping StoneGolem_clubs (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinShoulders (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Info   :FastTeleport] Set teleport timer to 8
[Info   :FastTeleport] Distant teleport made not distant
[Info   :TeleportEverything] Allies: 0 and Transport: True
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping StoneGolem_clubs (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping StoneGolem_hat (UnityEngine.GameObject) 
[Info   :FastTeleport] Set teleport timer to 8
[Info   :FastTeleport] Distant teleport made not distant
[Info   :TeleportEverything] Allies: 0 and Transport: True
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping StoneGolem_clubs (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinShoulders (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Info   :FastTeleport] Set teleport timer to 8
[Info   :FastTeleport] Distant teleport made not distant
[Info   :TeleportEverything] Allies: 0 and Transport: True
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping StoneGolem_clubs (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping StoneGolem_hat (UnityEngine.GameObject) 
[Info   :FastTeleport] Set teleport timer to 8
[Info   :FastTeleport] Distant teleport made not distant
[Info   :TeleportEverything] Allies: 0 and Transport: True
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping StoneGolem_clubs (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinShoulders (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Info   :FastTeleport] Set teleport timer to 8
[Info   :FastTeleport] Distant teleport made not distant
[Info   :TeleportEverything] Allies: 0 and Transport: True
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinShoulders (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinHelmet (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Reordering bones
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Info   :FastTeleport] Set teleport timer to 8
[Info   :FastTeleport] Distant teleport made not distant
[Info   :TeleportEverything] Allies: 0 and Transport: True
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping StoneGolem_clubs (UnityEngine.GameObject) 
[Info   :FastTeleport] Set teleport timer to 8
[Info   :FastTeleport] Distant teleport made not distant
[Info   :TeleportEverything] Allies: 0 and Transport: True
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinArmband (UnityEngine.GameObject) 
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping GoblinLoin (UnityEngine.GameObject) 
[Info   :FastTeleport] Set teleport timer to 8
[Info   :FastTeleport] Set teleport timer to 8
[Info   :FastTeleport] Distant teleport made not distant
[Info   :TeleportEverything] Allies: 0 and Transport: True
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 40 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Build Camera] in CraftingStation_Start, changing rangeBuild from 20 to 100
[Debug  :Jotunn.Utils.BoneReorder] Prefab missing components. Skipping StoneGolem_clubs (UnityEngine.GameObject) 
[Message:JotunnBackpacks.JotunnBackpacks] No backpack equipped. Can't open any.
[Info   :  HarmonyX] Patching static CraftingStation CraftingStation::HaveBuildStationInRange(string name, UnityEngine.Vector3 point) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on static CraftingStation CraftingStation::HaveBuildStationInRange(string name, UnityEngine.Vector3 point)
[Info   :  HarmonyX] Patching void Player::UpdatePlacementGhost(bool flashGuardStone) with 1 prefixes, 1 postfixes, 2 transpilers, 1 finalizers
1 prefixes:
* static void ValheimMod.PlayerPatch+UpdatePlacementGhost_Patch::Prefix(Player __instance)
1 postfixes:
* static void CraftFromContainers.BepInExPlugin+UpdatePlacementGhost_Patch::Postfix(Player __instance, bool flashGuardStone)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> FarmGrid.Patches.FarmGrid_Patch::UpdatePlacementGhost(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> GizmoReloaded.UpdatePlacementGhost_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
1 finalizers:
* static Exception ValheimMod.PlayerPatch+UpdatePlacementGhost_Patch::Finalizer(Player __instance, UnityEngine.GameObject ___m_placementGhost, int ___m_placeRotation, int ___m_placementStatus)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::UpdatePlacementGhost(bool flashGuardStone)
[Info   :  HarmonyX] Transpiling void Player::UpdatePlacementGhost(bool flashGuardStone)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> FarmGrid.Patches.FarmGrid_Patch::UpdatePlacementGhost(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> GizmoReloaded.UpdatePlacementGhost_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Writing finalizers
[Info   :  HarmonyX] Patching void Player::UpdatePlacementGhost(bool flashGuardStone) with 1 prefixes, 0 postfixes, 2 transpilers, 1 finalizers
1 prefixes:
* static void ValheimMod.PlayerPatch+UpdatePlacementGhost_Patch::Prefix(Player __instance)
2 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> FarmGrid.Patches.FarmGrid_Patch::UpdatePlacementGhost(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> GizmoReloaded.UpdatePlacementGhost_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
1 finalizers:
* static Exception ValheimMod.PlayerPatch+UpdatePlacementGhost_Patch::Finalizer(Player __instance, UnityEngine.GameObject ___m_placementGhost, int ___m_placeRotation, int ___m_placementStatus)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::UpdatePlacementGhost(bool flashGuardStone)
[Info   :  HarmonyX] Transpiling void Player::UpdatePlacementGhost(bool flashGuardStone)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> FarmGrid.Patches.FarmGrid_Patch::UpdatePlacementGhost(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> GizmoReloaded.UpdatePlacementGhost_Patch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing finalizers
[Info   :  HarmonyX] Patching void Vagon::SetMass(float mass) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void Vagon::SetMass(float mass)
[Info   :  HarmonyX] Patching virtual void Terminal::InputText() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool MovableInventoryWindows.BepInExPlugin+InputText_Patch::Prefix(Console __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Terminal::InputText()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching virtual void Terminal::InputText() with 4 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static bool CraftFromContainers.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)
* static bool ExtendedPlayerInventory.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)
* static bool HoeRadius.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)
* static bool FogOfWarExploreRadius.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Terminal::InputText()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching virtual void Terminal::InputText() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Terminal::InputText()
[Info   :  HarmonyX] Patching virtual void Terminal::InputText() with 4 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static bool CraftFromContainers.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)
* static bool ExtendedPlayerInventory.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)
* static bool HoeRadius.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)
* static bool FogOfWarExploreRadius.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Terminal::InputText()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void FejdStartup::Awake() with 4 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void PieceManager.BuildPiece::Patch_FejdStartup()
* static void Jotunn.Managers.SynchronizationManager+Patches::FejdStartup_Awake(FejdStartup __instance)
* static void ItemManager.Item::Patch_FejdStartup()
* static void PieceManager.BuildPiece::Patch_FejdStartup()
2 postfixes:
* static void Jotunn.Utils.ModQuery::FejdStartup_Awake_Postfix()
* static void CreatureManager.Creature::Patch_FejdStartup()

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Container::Awake() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void BalrondShipyard.Launch+Container_Awake_Path::Prefix(Container __instance)
2 postfixes:
* static void CraftyCartsRemake.CCR+Container_Awake_Patch::Postfix(Container __instance, Inventory& ___m_inventory)
* static void ESP.Container_Ray::Postfix(Container __instance, Piece ___m_piece)

[Info   :  HarmonyX] Running ILHook manipulator on void Container::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Container::OnDestroyed() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void Container::OnDestroyed()
[Info   :  HarmonyX] Patching void InventoryGui::Update() with 0 prefixes, 4 postfixes, 0 transpilers, 0 finalizers
4 postfixes:
* static void ExtendedPlayerInventory.BepInExPlugin+InventoryGui_Update_Patch::Postfix(InventoryGui __instance, UnityEngine.Animator ___m_animator, InventoryGrid ___m_playerGrid)
* static void MovableInventoryWindows.BepInExPlugin+InventoryGui_Update_Patch::Postfix(InventoryGui __instance)
* static void JotunnBackpacks.Patches+InventoryGui_Update_Patch::Postfix(UnityEngine.Animator ___m_animator, Container& ___m_currentContainer)
* static void ValheimRecycle.InventoryGuiPatch::PostfixUpdate(InventoryGui __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::Update()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void InventoryGui::Update() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void MovableInventoryWindows.BepInExPlugin+InventoryGui_Update_Patch::Postfix(InventoryGui __instance)
* static void JotunnBackpacks.Patches+InventoryGui_Update_Patch::Postfix(UnityEngine.Animator ___m_animator, Container& ___m_currentContainer)
* static void ValheimRecycle.InventoryGuiPatch::PostfixUpdate(InventoryGui __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::Update()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void InventoryGui::Update() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void JotunnBackpacks.Patches+InventoryGui_Update_Patch::Postfix(UnityEngine.Animator ___m_animator, Container& ___m_currentContainer)
* static void ValheimRecycle.InventoryGuiPatch::PostfixUpdate(InventoryGui __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::Update()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual bool Fireplace::Interact(Humanoid user, bool hold, bool alt) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on virtual bool Fireplace::Interact(Humanoid user, bool hold, bool alt)
[Info   :  HarmonyX] Patching bool CookingStation::OnAddFuelSwitch(Switch sw, Humanoid user, ItemDrop+ItemData item) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on bool CookingStation::OnAddFuelSwitch(Switch sw, Humanoid user, ItemDrop+ItemData item)
[Info   :  HarmonyX] Patching ItemDrop+ItemData CookingStation::FindCookableItem(Inventory inventory) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on ItemDrop+ItemData CookingStation::FindCookableItem(Inventory inventory)
[Info   :  HarmonyX] Patching void Smelter::UpdateHoverTexts() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.HoverTextUtils::Postfix(Smelter __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Smelter::UpdateHoverTexts()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Smelter::OnAddOre(Switch sw, Humanoid user, ItemDrop+ItemData item) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on bool Smelter::OnAddOre(Switch sw, Humanoid user, ItemDrop+ItemData item)
[Info   :  HarmonyX] Patching bool Smelter::OnAddFuel(Switch sw, Humanoid user, ItemDrop+ItemData item) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on bool Smelter::OnAddFuel(Switch sw, Humanoid user, ItemDrop+ItemData item)
[Info   :  HarmonyX] Patching static bool InventoryGui::SetupRequirement(UnityEngine.Transform elementRoot, Piece+Requirement req, Player player, bool craft, int quality) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimRecycle.InventoryGuiPatch::PostfixSetupRequirement(UnityEngine.Transform elementRoot, Piece+Requirement req, int quality)

[Info   :  HarmonyX] Running ILHook manipulator on static bool InventoryGui::SetupRequirement(UnityEngine.Transform elementRoot, Piece+Requirement req, Player player, bool craft, int quality)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Player::HaveRequirements(Piece+Requirement[] resources, bool discover, int qualityLevel) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on bool Player::HaveRequirements(Piece+Requirement[] resources, bool discover, int qualityLevel)
[Info   :  HarmonyX] Patching bool Player::HaveRequirements(Piece piece, Player+RequirementMode mode) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static bool ValheimMod.PlayerPatch+HaveRequirements_Patch::Postfix(bool __result, Player __instance, System.Collections.Generic.HashSet<string> ___m_knownRecipes, Piece piece, Player+RequirementMode mode)

[Info   :  HarmonyX] Running ILHook manipulator on bool Player::HaveRequirements(Piece piece, Player+RequirementMode mode)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Player::ConsumeResources(Piece+Requirement[] requirements, int qualityLevel) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimMod.PlayerPatch+ConsumeResources_Patch::Postfix(Player __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::ConsumeResources(Piece+Requirement[] requirements, int qualityLevel)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void InventoryGui::OnCraftPressed() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::OnCraftPressed()
[Info   :  HarmonyX] Patching void Player::UpdatePlacement(bool takeInput, float dt) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void GizmoReloaded.UpdatePlacement_Patch::Player_UpdatePlacement(Player __instance, UnityEngine.GameObject ___m_placementGhost, bool takeInput, float dt)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::UpdatePlacement(bool takeInput, float dt)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual void Terminal::InputText() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Terminal::InputText()
[Info   :  HarmonyX] Patching virtual void Terminal::InputText() with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static bool ExtendedPlayerInventory.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)
* static bool HoeRadius.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)
* static bool FogOfWarExploreRadius.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Terminal::InputText()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching virtual void Terminal::InputText() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Terminal::InputText()
[Info   :  HarmonyX] Patching virtual void Terminal::InputText() with 2 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
2 prefixes:
* static bool HoeRadius.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)
* static bool FogOfWarExploreRadius.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Terminal::InputText()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching virtual void Terminal::InputText() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Terminal::InputText()
[Info   :  HarmonyX] Patching virtual void Terminal::InputText() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool FogOfWarExploreRadius.BepInExPlugin+InputText_Patch::Prefix(Terminal __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Terminal::InputText()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching virtual void Terminal::InputText() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Terminal::InputText()
[Info   :  HarmonyX] Patching virtual void Terminal::InputText() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Terminal::InputText()
[Info   :  HarmonyX] Patching virtual void Player::Awake() with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void Valheim_Build_Camera.Valheim_Build_Camera::Player_Awake(Single& ___m_maxPlaceDistance)
1 postfixes:
* static void ESP.Player_Cover::Postfix(Player __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Player::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void TombStone::Awake() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void TombStone::Awake()
[Info   :  HarmonyX] Patching virtual bool TombStone::Interact(Humanoid character, bool hold, bool alt) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on virtual bool TombStone::Interact(Humanoid character, bool hold, bool alt)
[Info   :  HarmonyX] Patching void Inventory::MoveInventoryToGrave(Inventory original) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void Inventory::MoveInventoryToGrave(Inventory original)
[Info   :  HarmonyX] Patching void InventoryGui::Show(Container container) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::Show(Container container)
[Info   :  HarmonyX] Patching void Inventory::Changed() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void JotunnBackpacks.Patches+Inventory_Changed_Patch::Postfix(Inventory __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Inventory::Changed()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Humanoid::SetupEquipment() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void Humanoid::SetupEquipment()
[Info   :  HarmonyX] Patching void Player::Update() with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void Valheim_Build_Camera.Valheim_Build_Camera::Update_Prefix_Player(Player& __instance, Boolean& __runOriginal)
2 postfixes:
* static void ValheimMod.ValheimMod+Update_Patch::Postfix()
* static void Valheim_Build_Camera.Valheim_Build_Camera::Update_Postfix_Player(Player& __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::Update()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void InventoryGui::UpdateInventory(Player player) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::UpdateInventory(Player player)
[Info   :  HarmonyX] Patching Vector2i Inventory::FindEmptySlot(bool topFirst) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ExtendedPlayerInventory.BepInExPlugin+FindEmptySlot_Patch::Postfix(Inventory __instance, Int32& ___m_height)

[Info   :  HarmonyX] Running ILHook manipulator on Vector2i Inventory::FindEmptySlot(bool topFirst)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching Vector2i Inventory::FindEmptySlot(bool topFirst) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on Vector2i Inventory::FindEmptySlot(bool topFirst)
[Info   :  HarmonyX] Patching int Inventory::GetEmptySlots() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on int Inventory::GetEmptySlots()
[Info   :  HarmonyX] Patching bool Inventory::HaveEmptySlot() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::HaveEmptySlot()
[Info   :  HarmonyX] Patching bool Inventory::AddItem(ItemDrop+ItemData item) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::AddItem(ItemDrop+ItemData item)
[Info   :  HarmonyX] Patching bool Inventory::AddItem(ItemDrop+ItemData item, int amount, int x, int y) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::AddItem(ItemDrop+ItemData item, int amount, int x, int y)
[Info   :  HarmonyX] Patching void Hud::Awake() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void Jotunn.Managers.PieceManager+Patches::Hud_Awake()

[Info   :  HarmonyX] Running ILHook manipulator on void Hud::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Hud::Update() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void Hud::Update()
[Info   :  HarmonyX] Patching void TerrainOp::Awake() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void TerrainOp::Awake()
[Info   :  HarmonyX] Patching void EnvMan::Awake() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void EnvMan::Awake()
[Info   :  HarmonyX] Patching void EnvMan::SetEnv(EnvSetup env, float dayInt, float nightInt, float morningInt, float eveningInt, float dt) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void EnvMan::SetEnv(EnvSetup env, float dayInt, float nightInt, float morningInt, float eveningInt, float dt)
[Info   :  HarmonyX] Patching void Player::OnSkillLevelup(Skills+SkillType skill, float level) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void Player::OnSkillLevelup(Skills+SkillType skill, float level)
[Info   :  HarmonyX] Patching void Ship::OnTriggerEnter(UnityEngine.Collider collider) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void Ship::OnTriggerEnter(UnityEngine.Collider collider)
[Info   :  HarmonyX] Patching void Ship::OnTriggerExit(UnityEngine.Collider collider) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void Ship::OnTriggerExit(UnityEngine.Collider collider)
[Info   :  HarmonyX] Patching void Skills::Load(ZPackage pkg) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void Skills::Load(ZPackage pkg)
[Info   :  HarmonyX] Patching void Minimap::Explore(UnityEngine.Vector3 p, float radius) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void Minimap::Explore(UnityEngine.Vector3 p, float radius)
[Info   :  HarmonyX] Patching void Minimap::Awake() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void Minimap::Awake()
[Info   :  HarmonyX] Patching void Player::UpdateStats(float dt) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void Player::UpdateStats(float dt)
[Info   :  HarmonyX] Patching virtual void Player::UseStamina(float v) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void UsefulPaths.PlayerUseStamina_Patch::Prefix(Single& v)

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Player::UseStamina(float v)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 14 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
14 prefixes:
* static void Jotunn.Managers.UndoManager+Patches::ClearUndoQueuesBefore(ZNetScene __instance)
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void ItemManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void CreatureManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void BalrondBarrell.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondHearths.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondMetalLocker.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondOreBasket.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShelf.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShipyard.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondWoodshed.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void LightController.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static bool ValheimMod.ZNetScene_Awake_Patch::Prefix(ZNetScene __instance)
5 postfixes:
* static void CreatureManager.Creature+DropList::AddDropsToCreature()
* static void Advize_PlantEverything.PlantEverything+ZNetSceneAwake::Postfix(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::RegisterAllToZNetScene(ZNetScene __instance)
* static void Jotunn.Managers.CreatureManager+Patches::FixReferences(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::InvokeOnPrefabsRegistered(ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 13 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
13 prefixes:
* static void Jotunn.Managers.UndoManager+Patches::ClearUndoQueuesBefore(ZNetScene __instance)
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void ItemManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void CreatureManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void BalrondHearths.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondMetalLocker.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondOreBasket.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShelf.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShipyard.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondWoodshed.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void LightController.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static bool ValheimMod.ZNetScene_Awake_Patch::Prefix(ZNetScene __instance)
5 postfixes:
* static void CreatureManager.Creature+DropList::AddDropsToCreature()
* static void Advize_PlantEverything.PlantEverything+ZNetSceneAwake::Postfix(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::RegisterAllToZNetScene(ZNetScene __instance)
* static void Jotunn.Managers.CreatureManager+Patches::FixReferences(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::InvokeOnPrefabsRegistered(ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::Awake() with 4 prefixes, 11 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void Jotunn.Utils.ModQuery::ObjectDBAwake(ObjectDB __instance)
* static void ItemManager.PrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void Jotunn.Managers.ItemManager+Patches::RegisterCustomData(ObjectDB __instance)
* static void ItemManager.Item::Patch_ObjectDBInit(ObjectDB __instance)
11 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void PieceManager.BuildPiece::Patch_ObjectDBInit(ObjectDB __instance)
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void PieceManager.BuildPiece::Patch_ObjectDBInit(ObjectDB __instance)
* static void ValheimMod.ObjectDB_Awake_Patch::Postfix()
* static void Advize_PlantEverything.PlantEverything+ObjectDBAwake::Postfix(ObjectDB __instance)
* static void BalrondShipyard.Launch+Object_Awake_Path::Postfix()
* static void CreatureManager.Creature::UpdateCreatureAis(ObjectDB __instance)
* static void Jotunn.Managers.PieceManager+Patches::RegisterCustomData(ObjectDB __instance)
* static void Jotunn.Managers.ItemManager+Patches::InvokeOnItemsRegistered(ObjectDB __instance)
* static void Jotunn.Managers.PieceManager+Patches::InvokeOnPiecesRegistered(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 12 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
12 prefixes:
* static void Jotunn.Managers.UndoManager+Patches::ClearUndoQueuesBefore(ZNetScene __instance)
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void ItemManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void CreatureManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void BalrondMetalLocker.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondOreBasket.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShelf.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShipyard.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondWoodshed.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void LightController.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static bool ValheimMod.ZNetScene_Awake_Patch::Prefix(ZNetScene __instance)
5 postfixes:
* static void CreatureManager.Creature+DropList::AddDropsToCreature()
* static void Advize_PlantEverything.PlantEverything+ZNetSceneAwake::Postfix(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::RegisterAllToZNetScene(ZNetScene __instance)
* static void Jotunn.Managers.CreatureManager+Patches::FixReferences(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::InvokeOnPrefabsRegistered(ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::CopyOtherDB(ObjectDB other) with 4 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void Jotunn.Managers.CreatureManager+Patches::InvokeOnVanillaCreaturesAvailable()
* static void Jotunn.Managers.PrefabManager+Patches::InvokeOnVanillaObjectsAvailable(ObjectDB __instance, ObjectDB other)
* static void ItemManager.Item::Patch_ObjectDBInit(ObjectDB __instance)
* static void Jotunn.Managers.ItemManager+Patches::RegisterCustomDataFejd(ObjectDB __instance, ObjectDB other)
6 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void ItemManager.PrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void BalrondShipyard.Launch+Object_CopyOtherDB_Path::Postfix()
* static void ValheimMod.ObjectDB_CopyOtherDB_Patch::Postfix()
* static void Jotunn.Managers.ItemManager+Patches::InvokeOnItemsRegisteredFejd(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::CopyOtherDB(ObjectDB other)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 11 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
11 prefixes:
* static void Jotunn.Managers.UndoManager+Patches::ClearUndoQueuesBefore(ZNetScene __instance)
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void ItemManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void CreatureManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void BalrondOreBasket.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShelf.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShipyard.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondWoodshed.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void LightController.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static bool ValheimMod.ZNetScene_Awake_Patch::Prefix(ZNetScene __instance)
5 postfixes:
* static void CreatureManager.Creature+DropList::AddDropsToCreature()
* static void Advize_PlantEverything.PlantEverything+ZNetSceneAwake::Postfix(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::RegisterAllToZNetScene(ZNetScene __instance)
* static void Jotunn.Managers.CreatureManager+Patches::FixReferences(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::InvokeOnPrefabsRegistered(ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 10 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
10 prefixes:
* static void Jotunn.Managers.UndoManager+Patches::ClearUndoQueuesBefore(ZNetScene __instance)
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void ItemManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void CreatureManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void BalrondShelf.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondShipyard.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondWoodshed.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void LightController.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static bool ValheimMod.ZNetScene_Awake_Patch::Prefix(ZNetScene __instance)
5 postfixes:
* static void CreatureManager.Creature+DropList::AddDropsToCreature()
* static void Advize_PlantEverything.PlantEverything+ZNetSceneAwake::Postfix(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::RegisterAllToZNetScene(ZNetScene __instance)
* static void Jotunn.Managers.CreatureManager+Patches::FixReferences(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::InvokeOnPrefabsRegistered(ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 9 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
9 prefixes:
* static void Jotunn.Managers.UndoManager+Patches::ClearUndoQueuesBefore(ZNetScene __instance)
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void ItemManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void CreatureManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void BalrondShipyard.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void BalrondWoodshed.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void LightController.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static bool ValheimMod.ZNetScene_Awake_Patch::Prefix(ZNetScene __instance)
5 postfixes:
* static void CreatureManager.Creature+DropList::AddDropsToCreature()
* static void Advize_PlantEverything.PlantEverything+ZNetSceneAwake::Postfix(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::RegisterAllToZNetScene(ZNetScene __instance)
* static void Jotunn.Managers.CreatureManager+Patches::FixReferences(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::InvokeOnPrefabsRegistered(ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::Awake() with 4 prefixes, 10 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void Jotunn.Utils.ModQuery::ObjectDBAwake(ObjectDB __instance)
* static void ItemManager.PrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void Jotunn.Managers.ItemManager+Patches::RegisterCustomData(ObjectDB __instance)
* static void ItemManager.Item::Patch_ObjectDBInit(ObjectDB __instance)
10 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void PieceManager.BuildPiece::Patch_ObjectDBInit(ObjectDB __instance)
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void PieceManager.BuildPiece::Patch_ObjectDBInit(ObjectDB __instance)
* static void ValheimMod.ObjectDB_Awake_Patch::Postfix()
* static void Advize_PlantEverything.PlantEverything+ObjectDBAwake::Postfix(ObjectDB __instance)
* static void CreatureManager.Creature::UpdateCreatureAis(ObjectDB __instance)
* static void Jotunn.Managers.PieceManager+Patches::RegisterCustomData(ObjectDB __instance)
* static void Jotunn.Managers.ItemManager+Patches::InvokeOnItemsRegistered(ObjectDB __instance)
* static void Jotunn.Managers.PieceManager+Patches::InvokeOnPiecesRegistered(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 8 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
8 prefixes:
* static void Jotunn.Managers.UndoManager+Patches::ClearUndoQueuesBefore(ZNetScene __instance)
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void ItemManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void CreatureManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void BalrondWoodshed.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static void LightController.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static bool ValheimMod.ZNetScene_Awake_Patch::Prefix(ZNetScene __instance)
5 postfixes:
* static void CreatureManager.Creature+DropList::AddDropsToCreature()
* static void Advize_PlantEverything.PlantEverything+ZNetSceneAwake::Postfix(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::RegisterAllToZNetScene(ZNetScene __instance)
* static void Jotunn.Managers.CreatureManager+Patches::FixReferences(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::InvokeOnPrefabsRegistered(ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Container::Awake() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void CraftyCartsRemake.CCR+Container_Awake_Patch::Postfix(Container __instance, Inventory& ___m_inventory)
* static void ESP.Container_Ray::Postfix(Container __instance, Piece ___m_piece)

[Info   :  HarmonyX] Running ILHook manipulator on void Container::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ObjectDB::CopyOtherDB(ObjectDB other) with 4 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void Jotunn.Managers.CreatureManager+Patches::InvokeOnVanillaCreaturesAvailable()
* static void Jotunn.Managers.PrefabManager+Patches::InvokeOnVanillaObjectsAvailable(ObjectDB __instance, ObjectDB other)
* static void ItemManager.Item::Patch_ObjectDBInit(ObjectDB __instance)
* static void Jotunn.Managers.ItemManager+Patches::RegisterCustomDataFejd(ObjectDB __instance, ObjectDB other)
5 postfixes:
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void ItemManager.PrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void PieceManager.PiecePrefabManager::Patch_ObjectDBInit(ObjectDB __instance)
* static void ValheimMod.ObjectDB_CopyOtherDB_Patch::Postfix()
* static void Jotunn.Managers.ItemManager+Patches::InvokeOnItemsRegisteredFejd(ObjectDB __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ObjectDB::CopyOtherDB(ObjectDB other)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void BalrondShipyard.ShipyardStation::Awake() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void BalrondShipyard.ShipyardStation::Awake()
[Info   :  HarmonyX] Patching void BalrondShipyard.ShipExtensionManager::Awake() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void BalrondShipyard.ShipExtensionManager::Awake()
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 7 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
7 prefixes:
* static void Jotunn.Managers.UndoManager+Patches::ClearUndoQueuesBefore(ZNetScene __instance)
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void ItemManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void CreatureManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void LightController.Launch+ZNetScene_Awake_Path::Prefix(ZNetScene __instance)
* static bool ValheimMod.ZNetScene_Awake_Patch::Prefix(ZNetScene __instance)
5 postfixes:
* static void CreatureManager.Creature+DropList::AddDropsToCreature()
* static void Advize_PlantEverything.PlantEverything+ZNetSceneAwake::Postfix(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::RegisterAllToZNetScene(ZNetScene __instance)
* static void Jotunn.Managers.CreatureManager+Patches::FixReferences(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::InvokeOnPrefabsRegistered(ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNetScene::Awake() with 6 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
6 prefixes:
* static void Jotunn.Managers.UndoManager+Patches::ClearUndoQueuesBefore(ZNetScene __instance)
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void ItemManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void PieceManager.PiecePrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static void CreatureManager.PrefabManager::Patch_ZNetSceneAwake(ZNetScene __instance)
* static bool ValheimMod.ZNetScene_Awake_Patch::Prefix(ZNetScene __instance)
5 postfixes:
* static void CreatureManager.Creature+DropList::AddDropsToCreature()
* static void Advize_PlantEverything.PlantEverything+ZNetSceneAwake::Postfix(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::RegisterAllToZNetScene(ZNetScene __instance)
* static void Jotunn.Managers.CreatureManager+Patches::FixReferences(ZNetScene __instance)
* static void Jotunn.Managers.PrefabManager+Patches::InvokeOnPrefabsRegistered(ZNetScene __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNetScene::Awake()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Fireplace::IsBurning() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on bool Fireplace::IsBurning()
[Info   :  HarmonyX] Patching void ZRpc::HandlePackage(ZPackage package) with 3 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void ServerSync.ConfigSync+SnatchCurrentlyHandlingRPC::Prefix(ZRpc __instance)
* static void ServerSync.ConfigSync+SnatchCurrentlyHandlingRPC::Prefix(ZRpc __instance)
* static void ServerSync.ConfigSync+SnatchCurrentlyHandlingRPC::Prefix(ZRpc __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZRpc::HandlePackage(ZPackage package)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void ZNet::Awake() with 0 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
6 postfixes:
* static void PieceManager.AdminSyncing::AdminStatusSync(ZNet __instance)
* static void ServerSync.ConfigSync+RegisterRPCPatch::Postfix(ZNet __instance)
* static void ServerSync.ConfigSync+RegisterRPCPatch::Postfix(ZNet __instance)
* static void Jotunn.Managers.SynchronizationManager+Patches::ZNet_Awake(ZNet __instance)
* static void ValheimMod.Patches.ZNetPatch+Awake_Patch::Postfix(ZNet __instance, World ___m_world)
* static void ServerSync.ConfigSync+RegisterRPCPatch::Postfix(ZNet __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::Awake()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::OnNewConnection(ZNetPeer peer) with 5 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
5 prefixes:
* static void Jotunn.Utils.ModCompatibility::ZNet_OnNewConnection(ZNet __instance, ZNetPeer peer)
* static void ServerSync.VersionCheck::RegisterAndCheckVersion(ZNetPeer peer, ZNet __instance)
* static void ServerSync.VersionCheck::RegisterAndCheckVersion(ZNetPeer peer, ZNet __instance)
* static void OdinHorse.RegisterAndCheckVersion::Prefix(ZNetPeer peer, ZNet& __instance)
* static void ServerSync.VersionCheck::RegisterAndCheckVersion(ZNetPeer peer, ZNet __instance)
5 postfixes:
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ValheimMod.Patches.ZNetPatch+OnNewConnection_Patch::Postfix(ZNet __instance, bool ___m_isServer, ZNetPeer peer)
* static void PieceManager.RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::OnNewConnection(ZNetPeer peer)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::OnNewConnection(ZNetPeer peer) with 4 prefixes, 5 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static void Jotunn.Utils.ModCompatibility::ZNet_OnNewConnection(ZNet __instance, ZNetPeer peer)
* static void ServerSync.VersionCheck::RegisterAndCheckVersion(ZNetPeer peer, ZNet __instance)
* static void OdinHorse.RegisterAndCheckVersion::Prefix(ZNetPeer peer, ZNet& __instance)
* static void ServerSync.VersionCheck::RegisterAndCheckVersion(ZNetPeer peer, ZNet __instance)
5 postfixes:
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ValheimMod.Patches.ZNetPatch+OnNewConnection_Patch::Postfix(ZNet __instance, bool ___m_isServer, ZNetPeer peer)
* static void PieceManager.RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)
* static void ServerSync.ConfigSync+RegisterClientRPCPatch::Postfix(ZNet __instance, ZNetPeer peer)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::OnNewConnection(ZNetPeer peer)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::Shutdown() with 0 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
3 postfixes:
* static void ServerSync.ConfigSync+ResetConfigsOnShutdown::Postfix()
* static void ServerSync.ConfigSync+ResetConfigsOnShutdown::Postfix()
* static void ServerSync.ConfigSync+ResetConfigsOnShutdown::Postfix()

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::Shutdown()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg) with 11 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
11 prefixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, Advize_PlantEverything, Version=1.11.7.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, CraftyCartsRemake, Version=3.0.7.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static bool Jotunn.Utils.ModCompatibility::ZNet_RPC_PeerInfo(ZNet __instance, ZRpc rpc, ZPackage pkg)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, TeleportEverything, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, OdinHorse, Version=0.5.5.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static bool ServerSync.VersionCheck::RPC_PeerInfo(ZRpc rpc, ZNet __instance)
* static void Jotunn.Managers.SynchronizationManager+Patches::ZNet_RPC_Pre_PeerInfo(ZNet __instance, ZRpc rpc, Jotunn.Managers.SynchronizationManager+PeerInfoBlockingSocket& __state)
* static bool ServerSync.VersionCheck::RPC_PeerInfo(ZRpc rpc, ZNet __instance)
* static void ValheimMod.Patches.ZNetPatch+RPC_PeerInfo_Patch::Prefix(ZRpc rpc, ZPackage pkg, ZNet& __instance)
* static bool OdinHorse.VerifyClient::Prefix(ZRpc rpc, ZPackage pkg, ZNet& __instance)
* static bool ServerSync.VersionCheck::RPC_PeerInfo(ZRpc rpc, ZNet __instance)
6 postfixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)
* static void Jotunn.Managers.SynchronizationManager+Patches::ZNet_RPC_Post_PeerInfo(ZNet __instance, ZRpc rpc, Jotunn.Managers.SynchronizationManager+PeerInfoBlockingSocket& __state)
* static void ValheimMod.Patches.ZNetPatch+RPC_PeerInfo_Patch::Postfix(ZNet& __instance, World ___m_world, ZRpc rpc)
* static void OdinHorse.VerifyClient::Postfix(ZNet __instance)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg) with 10 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
10 prefixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, Advize_PlantEverything, Version=1.11.7.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, CraftyCartsRemake, Version=3.0.7.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static bool Jotunn.Utils.ModCompatibility::ZNet_RPC_PeerInfo(ZNet __instance, ZRpc rpc, ZPackage pkg)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, OdinHorse, Version=0.5.5.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static bool ServerSync.VersionCheck::RPC_PeerInfo(ZRpc rpc, ZNet __instance)
* static void Jotunn.Managers.SynchronizationManager+Patches::ZNet_RPC_Pre_PeerInfo(ZNet __instance, ZRpc rpc, Jotunn.Managers.SynchronizationManager+PeerInfoBlockingSocket& __state)
* static bool ServerSync.VersionCheck::RPC_PeerInfo(ZRpc rpc, ZNet __instance)
* static void ValheimMod.Patches.ZNetPatch+RPC_PeerInfo_Patch::Prefix(ZRpc rpc, ZPackage pkg, ZNet& __instance)
* static bool OdinHorse.VerifyClient::Prefix(ZRpc rpc, ZPackage pkg, ZNet& __instance)
* static bool ServerSync.VersionCheck::RPC_PeerInfo(ZRpc rpc, ZNet __instance)
6 postfixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)
* static void Jotunn.Managers.SynchronizationManager+Patches::ZNet_RPC_Post_PeerInfo(ZNet __instance, ZRpc rpc, Jotunn.Managers.SynchronizationManager+PeerInfoBlockingSocket& __state)
* static void ValheimMod.Patches.ZNetPatch+RPC_PeerInfo_Patch::Postfix(ZNet& __instance, World ___m_world, ZRpc rpc)
* static void OdinHorse.VerifyClient::Postfix(ZNet __instance)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg) with 9 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
9 prefixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, Advize_PlantEverything, Version=1.11.7.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, CraftyCartsRemake, Version=3.0.7.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static bool Jotunn.Utils.ModCompatibility::ZNet_RPC_PeerInfo(ZNet __instance, ZRpc rpc, ZPackage pkg)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Prefix(System.Collections.Generic.Dictionary`2[[System.Reflection.Assembly, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket, OdinHorse, Version=0.5.5.0, Culture=neutral, PublicKeyToken=null]]& __state, ZNet __instance, ZRpc rpc)
* static bool ServerSync.VersionCheck::RPC_PeerInfo(ZRpc rpc, ZNet __instance)
* static void Jotunn.Managers.SynchronizationManager+Patches::ZNet_RPC_Pre_PeerInfo(ZNet __instance, ZRpc rpc, Jotunn.Managers.SynchronizationManager+PeerInfoBlockingSocket& __state)
* static void ValheimMod.Patches.ZNetPatch+RPC_PeerInfo_Patch::Prefix(ZRpc rpc, ZPackage pkg, ZNet& __instance)
* static bool OdinHorse.VerifyClient::Prefix(ZRpc rpc, ZPackage pkg, ZNet& __instance)
* static bool ServerSync.VersionCheck::RPC_PeerInfo(ZRpc rpc, ZNet __instance)
6 postfixes:
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)
* static void Jotunn.Managers.SynchronizationManager+Patches::ZNet_RPC_Post_PeerInfo(ZNet __instance, ZRpc rpc, Jotunn.Managers.SynchronizationManager+PeerInfoBlockingSocket& __state)
* static void ValheimMod.Patches.ZNetPatch+RPC_PeerInfo_Patch::Postfix(ZNet& __instance, World ___m_world, ZRpc rpc)
* static void OdinHorse.VerifyClient::Postfix(ZNet __instance)
* static void ServerSync.ConfigSync+SendConfigsAfterLogin::Postfix(System.Collections.Generic.Dictionary<System.Reflection.Assembly, ServerSync.ConfigSync+SendConfigsAfterLogin+BufferingSocket> __state, ZNet __instance, ZRpc rpc)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::RPC_PeerInfo(ZRpc rpc, ZPackage pkg)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching string BepInEx.Configuration.ConfigEntryBase::GetSerializedValue() with 4 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static bool ServerSync.ConfigSync+PreventSavingServerInfo::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, String& __result)
* static bool ServerSync.ConfigSync+PreventSavingServerInfo::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, String& __result)
* static bool ServerSync.ConfigSync+PreventSavingServerInfo::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, String& __result)
* static bool Jotunn.Managers.SynchronizationManager::ConfigEntryBase_GetSerializedValue(BepInEx.Configuration.ConfigEntryBase __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on string BepInEx.Configuration.ConfigEntryBase::GetSerializedValue()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void BepInEx.Configuration.ConfigEntryBase::SetSerializedValue(string value) with 4 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
4 prefixes:
* static bool ServerSync.ConfigSync+PreventConfigRereadChangingValues::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, string value)
* static bool ServerSync.ConfigSync+PreventConfigRereadChangingValues::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, string value)
* static bool ServerSync.ConfigSync+PreventConfigRereadChangingValues::Prefix(BepInEx.Configuration.ConfigEntryBase __instance, string value)
* static bool Jotunn.Managers.SynchronizationManager::ConfigEntryBase_SetSerializedValue(BepInEx.Configuration.ConfigEntryBase __instance, string value)

[Info   :  HarmonyX] Running ILHook manipulator on void BepInEx.Configuration.ConfigEntryBase::SetSerializedValue(string value)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void ZNet::Disconnect(ZNetPeer peer) with 3 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
3 prefixes:
* static void ServerSync.VersionCheck::RemoveDisconnected(ZNetPeer peer, ZNet __instance)
* static void OdinHorse.RemoveDisconnectedPeerFromVerified::Prefix(ZNetPeer peer, ZNet& __instance)
* static void ServerSync.VersionCheck::RemoveDisconnected(ZNetPeer peer, ZNet __instance)
1 postfixes:
* static void ValheimMod.Patches.ZNetPatch+Disconnect_Patch::Postfix(ZNet __instance, bool ___m_isServer, ZNetPeer peer)

[Info   :  HarmonyX] Running ILHook manipulator on void ZNet::Disconnect(ZNetPeer peer)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void FejdStartup::ShowConnectError(ZNet+ConnectionStatus statusOverride) with 0 prefixes, 6 postfixes, 0 transpilers, 0 finalizers
6 postfixes:
* static void ServerSync.VersionCheck::ShowConnectionError(FejdStartup __instance)
* static void ServerSync.ConfigSync+ShowConnectionError::Postfix(FejdStartup __instance)
* static void ValheimMod.Patches.FejdStartupPatch+ShowConnectError_Patch::Postfix(FejdStartup __instance)
* static void OdinHorse.ShowConnectionError::Postfix(FejdStartup __instance)
* static void ServerSync.VersionCheck::ShowConnectionError(FejdStartup __instance)
* static void Jotunn.Utils.ModCompatibility::FejdStartup_ShowConnectError(FejdStartup __instance)

[Info   :  HarmonyX] Running ILHook manipulator on void FejdStartup::ShowConnectError(ZNet+ConnectionStatus statusOverride)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Game::_RequestRespawn() with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void TeleportEverything.Plugin+_RequestRespawn_Patch::Prefix()

[Info   :  HarmonyX] Running ILHook manipulator on void Game::_RequestRespawn()
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Game::_RequestRespawn() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void Game::_RequestRespawn()
[Info   :  HarmonyX] Patching bool Inventory::IsTeleportable() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void JotunnBackpacks.Patches+IsTeleportable_Patch::Postfix(Inventory __instance, Boolean& __result)

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::IsTeleportable()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching virtual bool Teleport::Interact(Humanoid character, bool hold, bool alt) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void TeleportEverything.Plugin+TeleportInteractPatch::Prefix(Humanoid character, bool hold, bool alt, Teleport __instance)

[Info   :  HarmonyX] Running ILHook manipulator on virtual bool Teleport::Interact(Humanoid character, bool hold, bool alt)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching virtual bool Teleport::Interact(Humanoid character, bool hold, bool alt) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on virtual bool Teleport::Interact(Humanoid character, bool hold, bool alt)
[Info   :  HarmonyX] Patching virtual string Teleport::GetHoverText() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on virtual string Teleport::GetHoverText()
[Info   :  HarmonyX] Patching bool Humanoid::IsTeleportable() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on bool Humanoid::IsTeleportable()
[Info   :  HarmonyX] Patching void TeleportWorld::Teleport(Player player) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void TeleportWorld::Teleport(Player player)
[Info   :  HarmonyX] Patching virtual bool Player::TeleportTo(UnityEngine.Vector3 pos, UnityEngine.Quaternion rot, bool distantTeleport) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ValheimFastTeleport.FastTeleportMod+PlayerTeleportTo::Postfix(Single& ___m_teleportTimer, Boolean& ___m_distantTeleport)

[Info   :  HarmonyX] Running ILHook manipulator on virtual bool Player::TeleportTo(UnityEngine.Vector3 pos, UnityEngine.Quaternion rot, bool distantTeleport)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Tameable::RPC_Command(long sender, ZDOID characterID) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void Tameable::RPC_Command(long sender, ZDOID characterID)
[Info   :  HarmonyX] Patching void Player::UpdateTeleport(float dt) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void TeleportableWagon.PlayerUpdateTeleport_Prefix::Prefix(float dt)
1 postfixes:
* static void TeleportableWagon.PlayerUpdateTeleport_Postfix::Postfix(float dt)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::UpdateTeleport(float dt)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void TeleportWorld::Awake() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void TeleportWorld::Awake()
[Info   :  HarmonyX] Patching void TeleportWorld::UpdatePortal() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void TeleportWorld::UpdatePortal()
[Info   :  HarmonyX] Patching void InventoryGrid::UpdateGui(Player player, ItemDrop+ItemData dragItem) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGrid::UpdateGui(Player player, ItemDrop+ItemData dragItem)
[Info   :  HarmonyX] Patching static string ItemDrop+ItemData::GetTooltip(ItemDrop+ItemData item, int qualityLevel, bool crafting) with 1 prefixes, 3 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ExtendedItemDataFramework.ItemData_GetTooltip_Patch::Prefix(ItemDrop+ItemData item, int qualityLevel, bool crafting)
3 postfixes:
* static void ESP.ItemDropItemData_GetTooltip::Postfix(ItemDrop+ItemData item, String& __result)
* static void ExtendedItemDataFramework.ItemData_GetTooltip_Patch::Postfix(ItemDrop+ItemData item, int qualityLevel, bool crafting)
* static void ExtendedItemDataFramework.ItemData_GetTooltip_UniqueItemData_Patch::Postfix(ItemDrop+ItemData item, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on static string ItemDrop+ItemData::GetTooltip(ItemDrop+ItemData item, int qualityLevel, bool crafting)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void Game::Start() with 0 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
2 postfixes:
* static void Jotunn.Managers.GUIManager+Patches::Game_Start(Game __instance)
* static void Jotunn.Managers.NetworkManager+Patches::Game_Start()

[Info   :  HarmonyX] Running ILHook manipulator on void Game::Start()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching System.Collections.IEnumerator Game::ConnectPortals() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on System.Collections.IEnumerator Game::ConnectPortals()
[Info   :  HarmonyX] Patching void ZDOMan::CreateSyncList(ZDOMan+ZDOPeer peer, System.Collections.Generic.List<ZDO> toSync) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void ZDOMan::CreateSyncList(ZDOMan+ZDOPeer peer, System.Collections.Generic.List<ZDO> toSync)
[Info   :  HarmonyX] Patching virtual bool TeleportWorld::Interact(Humanoid human, bool hold, bool alt) with 0 prefixes, 0 postfixes, 1 transpilers, 0 finalizers
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> AnyPortal.AnyPortal+PortalInteractPatch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on virtual bool TeleportWorld::Interact(Humanoid human, bool hold, bool alt)
[Info   :  HarmonyX] Transpiling virtual bool TeleportWorld::Interact(Humanoid human, bool hold, bool alt)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> AnyPortal.AnyPortal+PortalInteractPatch::Transpiler(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Patching virtual bool TeleportWorld::Interact(Humanoid human, bool hold, bool alt) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on virtual bool TeleportWorld::Interact(Humanoid human, bool hold, bool alt)
[Info   :  HarmonyX] Patching virtual string TeleportWorld::GetHoverText() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.TeleportWorld_GetHoverText::Postfix(TeleportWorld __instance, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on virtual string TeleportWorld::GetHoverText()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void TextInput::Show(string topic, string text, int charLimit) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void TextInput::Show(string topic, string text, int charLimit)
[Info   :  HarmonyX] Patching static bool InventoryGui::IsVisible() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on static bool InventoryGui::IsVisible()
[Info   :  HarmonyX] Patching void Player::UpdateTeleport(float dt) with 1 prefixes, 0 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static void TeleportableWagon.PlayerUpdateTeleport_Prefix::Prefix(float dt)

[Info   :  HarmonyX] Running ILHook manipulator on void Player::UpdateTeleport(float dt)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Patching void Player::UpdateTeleport(float dt) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void Player::UpdateTeleport(float dt)
[Info   :  HarmonyX] Patching virtual bool Vagon::Interact(Humanoid character, bool hold, bool alt) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on virtual bool Vagon::Interact(Humanoid character, bool hold, bool alt)
[Info   :  HarmonyX] Patching virtual bool Player::TeleportTo(UnityEngine.Vector3 pos, UnityEngine.Quaternion rot, bool distantTeleport) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on virtual bool Player::TeleportTo(UnityEngine.Vector3 pos, UnityEngine.Quaternion rot, bool distantTeleport)
[Info   :  HarmonyX] Patching static string ItemDrop+ItemData::GetTooltip(ItemDrop+ItemData item, int qualityLevel, bool crafting) with 1 prefixes, 2 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ExtendedItemDataFramework.ItemData_GetTooltip_Patch::Prefix(ItemDrop+ItemData item, int qualityLevel, bool crafting)
2 postfixes:
* static void ESP.ItemDropItemData_GetTooltip::Postfix(ItemDrop+ItemData item, String& __result)
* static void ExtendedItemDataFramework.ItemData_GetTooltip_UniqueItemData_Patch::Postfix(ItemDrop+ItemData item, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on static string ItemDrop+ItemData::GetTooltip(ItemDrop+ItemData item, int qualityLevel, bool crafting)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching static string ItemDrop+ItemData::GetTooltip(ItemDrop+ItemData item, int qualityLevel, bool crafting) with 1 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 prefixes:
* static bool ExtendedItemDataFramework.ItemData_GetTooltip_Patch::Prefix(ItemDrop+ItemData item, int qualityLevel, bool crafting)
1 postfixes:
* static void ESP.ItemDropItemData_GetTooltip::Postfix(ItemDrop+ItemData item, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on static string ItemDrop+ItemData::GetTooltip(ItemDrop+ItemData item, int qualityLevel, bool crafting)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching static string ItemDrop+ItemData::GetTooltip(ItemDrop+ItemData item, int qualityLevel, bool crafting) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void ESP.ItemDropItemData_GetTooltip::Postfix(ItemDrop+ItemData item, String& __result)

[Info   :  HarmonyX] Running ILHook manipulator on static string ItemDrop+ItemData::GetTooltip(ItemDrop+ItemData item, int qualityLevel, bool crafting)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching ItemDrop+ItemData Inventory::AddItem(string name, int stack, int quality, int variant, long crafterID, string crafterName) with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static ItemDrop+ItemData ValheimMod.Patches.InventoryPatch+AddItem_Patch::Postfix(ItemDrop+ItemData __result, Inventory __instance)

[Info   :  HarmonyX] Running ILHook manipulator on ItemDrop+ItemData Inventory::AddItem(string name, int stack, int quality, int variant, long crafterID, string crafterName)
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching bool Inventory::AddItem(string name, int stack, float durability, Vector2i pos, bool equiped, int quality, int variant, long crafterID, string crafterName) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on bool Inventory::AddItem(string name, int stack, float durability, Vector2i pos, bool equiped, int quality, int variant, long crafterID, string crafterName)
[Info   :  HarmonyX] Patching ItemDrop+ItemData ItemDrop+ItemData::Clone() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on ItemDrop+ItemData ItemDrop+ItemData::Clone()
[Info   :  HarmonyX] Patching void ItemDrop::Load() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void ItemDrop::Load()
[Info   :  HarmonyX] Patching void ItemStand::DropItem() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void ItemStand::DropItem()
[Info   :  HarmonyX] Patching void TerrainComp::LevelTerrain(UnityEngine.Vector3 worldPos, float radius, bool square) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void TerrainComp::LevelTerrain(UnityEngine.Vector3 worldPos, float radius, bool square)
[Info   :  HarmonyX] Patching void TerrainComp::RaiseTerrain(UnityEngine.Vector3 worldPos, float radius, float delta, bool square, float power) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void TerrainComp::RaiseTerrain(UnityEngine.Vector3 worldPos, float radius, float delta, bool square, float power)
[Info   :  HarmonyX] Patching void TerrainComp::ApplyToHeightmap(UnityEngine.Texture2D clearedMask, System.Collections.Generic.List<float> heights, float[] baseHeights, float[] levelOnlyHeights, Heightmap hm) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void TerrainComp::ApplyToHeightmap(UnityEngine.Texture2D clearedMask, System.Collections.Generic.List<float> heights, float[] baseHeights, float[] levelOnlyHeights, Heightmap hm)
[Info   :Valheim Recycle] DESTROY
[Info   :  HarmonyX] Patching void InventoryGui::Update() with 0 prefixes, 1 postfixes, 0 transpilers, 0 finalizers
1 postfixes:
* static void JotunnBackpacks.Patches+InventoryGui_Update_Patch::Postfix(UnityEngine.Animator ___m_animator, Container& ___m_currentContainer)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::Update()
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching static bool InventoryGui::SetupRequirement(UnityEngine.Transform elementRoot, Piece+Requirement req, Player player, bool craft, int quality) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on static bool InventoryGui::SetupRequirement(UnityEngine.Transform elementRoot, Piece+Requirement req, Player player, bool craft, int quality)
[Info   :  HarmonyX] Patching void InventoryGui::UpdateRecipe(Player player, float dt) with 1 prefixes, 1 postfixes, 1 transpilers, 0 finalizers
1 prefixes:
* static void ValheimMod.Patches.InventoryGuiPatch+UpdateRecipe_Patch::Prefix(InventoryGui __instance, Player player)
1 postfixes:
* static void ValheimMod.Patches.InventoryGuiPatch+UpdateRecipe_Patch::Postfix()
1 transpilers:
* static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ItemManager.Item::Transpile_InventoryGui(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::UpdateRecipe(Player player, float dt)
[Info   :  HarmonyX] Transpiling void InventoryGui::UpdateRecipe(Player player, float dt)
[Info   :  HarmonyX] Running transpiler static System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> ItemManager.Item::Transpile_InventoryGui(System.Collections.Generic.IEnumerable<HarmonyLib.CodeInstruction> instructions)
[Info   :  HarmonyX] Writing prefixes
[Info   :  HarmonyX] Writing postfixes
[Info   :  HarmonyX] Patching void InventoryGui::OnTabCraftPressed() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::OnTabCraftPressed()
[Info   :  HarmonyX] Patching void InventoryGui::OnTabUpgradePressed() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::OnTabUpgradePressed()
[Info   :  HarmonyX] Patching void InventoryGui::UpdateCraftingPanel(bool focusView) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::UpdateCraftingPanel(bool focusView)
[Info   :  HarmonyX] Patching void InventoryGui::UpdateRecipeList(System.Collections.Generic.List<Recipe> recipes) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on void InventoryGui::UpdateRecipeList(System.Collections.Generic.List<Recipe> recipes)
[Info   :Valheim Recycle] Unpatched InventoryGui
[Info   :  HarmonyX] Patching virtual void Player::RaiseSkill(Skills+SkillType skill, float value) with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on virtual void Player::RaiseSkill(Skills+SkillType skill, float value)
[Info   :  HarmonyX] Patching float Player::GetMaxCarryWeight() with 0 prefixes, 0 postfixes, 0 transpilers, 0 finalizers

[Info   :  HarmonyX] Running ILHook manipulator on float Player::GetMaxCarryWeight()
